{"version":3,"sources":["Chart.bundle.js","dashboard.js"],"names":[],"mappingsl0hBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dashboard.js","sourcesContent":["/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.6.0\r\n *\r\n * Copyright 2017 Nick Downie\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\n/* MIT license */\r\nvar colorNames = require(5);\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\r\n},{\"5\":5}],2:[function(require,module,exports){\r\n/* MIT license */\r\nvar convert = require(4);\r\nvar string = require(1);\r\n\r\nvar Color = function (obj) {\r\n\tif (obj instanceof Color) {\r\n\t\treturn obj;\r\n\t}\r\n\tif (!(this instanceof Color)) {\r\n\t\treturn new Color(obj);\r\n\t}\r\n\r\n\tthis.valid = false;\r\n\tthis.values = {\r\n\t\trgb: [0, 0, 0],\r\n\t\thsl: [0, 0, 0],\r\n\t\thsv: [0, 0, 0],\r\n\t\thwb: [0, 0, 0],\r\n\t\tcmyk: [0, 0, 0, 0],\r\n\t\talpha: 1\r\n\t};\r\n\r\n\t// parse Color() argument\r\n\tvar vals;\r\n\tif (typeof obj === 'string') {\r\n\t\tvals = string.getRgba(obj);\r\n\t\tif (vals) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals = string.getHsla(obj)) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals = string.getHwb(obj)) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t}\r\n\t} else if (typeof obj === 'object') {\r\n\t\tvals = obj;\r\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\r\n\t\t\tthis.setValues('rgb', vals);\r\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n\t\t\tthis.setValues('hsl', vals);\r\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\r\n\t\t\tthis.setValues('hsv', vals);\r\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n\t\t\tthis.setValues('hwb', vals);\r\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n\t\t\tthis.setValues('cmyk', vals);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nColor.prototype = {\r\n\tisValid: function () {\r\n\t\treturn this.valid;\r\n\t},\r\n\trgb: function () {\r\n\t\treturn this.setSpace('rgb', arguments);\r\n\t},\r\n\thsl: function () {\r\n\t\treturn this.setSpace('hsl', arguments);\r\n\t},\r\n\thsv: function () {\r\n\t\treturn this.setSpace('hsv', arguments);\r\n\t},\r\n\thwb: function () {\r\n\t\treturn this.setSpace('hwb', arguments);\r\n\t},\r\n\tcmyk: function () {\r\n\t\treturn this.setSpace('cmyk', arguments);\r\n\t},\r\n\r\n\trgbArray: function () {\r\n\t\treturn this.values.rgb;\r\n\t},\r\n\thslArray: function () {\r\n\t\treturn this.values.hsl;\r\n\t},\r\n\thsvArray: function () {\r\n\t\treturn this.values.hsv;\r\n\t},\r\n\thwbArray: function () {\r\n\t\tvar values = this.values;\r\n\t\tif (values.alpha !== 1) {\r\n\t\t\treturn values.hwb.concat([values.alpha]);\r\n\t\t}\r\n\t\treturn values.hwb;\r\n\t},\r\n\tcmykArray: function () {\r\n\t\treturn this.values.cmyk;\r\n\t},\r\n\trgbaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.rgb.concat([values.alpha]);\r\n\t},\r\n\thslaArray: function () {\r\n\t\tvar values = this.values;\r\n\t\treturn values.hsl.concat([values.alpha]);\r\n\t},\r\n\talpha: function (val) {\r\n\t\tif (val === undefined) {\r\n\t\t\treturn this.values.alpha;\r\n\t\t}\r\n\t\tthis.setValues('alpha', val);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tred: function (val) {\r\n\t\treturn this.setChannel('rgb', 0, val);\r\n\t},\r\n\tgreen: function (val) {\r\n\t\treturn this.setChannel('rgb', 1, val);\r\n\t},\r\n\tblue: function (val) {\r\n\t\treturn this.setChannel('rgb', 2, val);\r\n\t},\r\n\thue: function (val) {\r\n\t\tif (val) {\r\n\t\t\tval %= 360;\r\n\t\t\tval = val < 0 ? 360 + val : val;\r\n\t\t}\r\n\t\treturn this.setChannel('hsl', 0, val);\r\n\t},\r\n\tsaturation: function (val) {\r\n\t\treturn this.setChannel('hsl', 1, val);\r\n\t},\r\n\tlightness: function (val) {\r\n\t\treturn this.setChannel('hsl', 2, val);\r\n\t},\r\n\tsaturationv: function (val) {\r\n\t\treturn this.setChannel('hsv', 1, val);\r\n\t},\r\n\twhiteness: function (val) {\r\n\t\treturn this.setChannel('hwb', 1, val);\r\n\t},\r\n\tblackness: function (val) {\r\n\t\treturn this.setChannel('hwb', 2, val);\r\n\t},\r\n\tvalue: function (val) {\r\n\t\treturn this.setChannel('hsv', 2, val);\r\n\t},\r\n\tcyan: function (val) {\r\n\t\treturn this.setChannel('cmyk', 0, val);\r\n\t},\r\n\tmagenta: function (val) {\r\n\t\treturn this.setChannel('cmyk', 1, val);\r\n\t},\r\n\tyellow: function (val) {\r\n\t\treturn this.setChannel('cmyk', 2, val);\r\n\t},\r\n\tblack: function (val) {\r\n\t\treturn this.setChannel('cmyk', 3, val);\r\n\t},\r\n\r\n\thexString: function () {\r\n\t\treturn string.hexString(this.values.rgb);\r\n\t},\r\n\trgbString: function () {\r\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\trgbaString: function () {\r\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\tpercentString: function () {\r\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\r\n\t},\r\n\thslString: function () {\r\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thslaString: function () {\r\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\r\n\t},\r\n\thwbString: function () {\r\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\r\n\t},\r\n\tkeyword: function () {\r\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\r\n\t},\r\n\r\n\trgbNumber: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n\t},\r\n\r\n\tluminosity: function () {\r\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar lum = [];\r\n\t\tfor (var i = 0; i < rgb.length; i++) {\r\n\t\t\tvar chan = rgb[i] / 255;\r\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n\t\t}\r\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n\t},\r\n\r\n\tcontrast: function (color2) {\r\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n\t\tvar lum1 = this.luminosity();\r\n\t\tvar lum2 = color2.luminosity();\r\n\t\tif (lum1 > lum2) {\r\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\r\n\t\t}\r\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\r\n\t},\r\n\r\n\tlevel: function (color2) {\r\n\t\tvar contrastRatio = this.contrast(color2);\r\n\t\tif (contrastRatio >= 7.1) {\r\n\t\t\treturn 'AAA';\r\n\t\t}\r\n\r\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\r\n\t},\r\n\r\n\tdark: function () {\r\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n\t\tvar rgb = this.values.rgb;\r\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n\t\treturn yiq < 128;\r\n\t},\r\n\r\n\tlight: function () {\r\n\t\treturn !this.dark();\r\n\t},\r\n\r\n\tnegate: function () {\r\n\t\tvar rgb = [];\r\n\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = 255 - this.values.rgb[i];\r\n\t\t}\r\n\t\tthis.setValues('rgb', rgb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tlighten: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] += hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdarken: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[2] -= hsl[2] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] += hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tdesaturate: function (ratio) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\thsl[1] -= hsl[1] * ratio;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\twhiten: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[1] += hwb[1] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tblacken: function (ratio) {\r\n\t\tvar hwb = this.values.hwb;\r\n\t\thwb[2] += hwb[2] * ratio;\r\n\t\tthis.setValues('hwb', hwb);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgreyscale: function () {\r\n\t\tvar rgb = this.values.rgb;\r\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n\t\tthis.setValues('rgb', [val, val, val]);\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclearer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\topaquer: function (ratio) {\r\n\t\tvar alpha = this.values.alpha;\r\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\r\n\t\treturn this;\r\n\t},\r\n\r\n\trotate: function (degrees) {\r\n\t\tvar hsl = this.values.hsl;\r\n\t\tvar hue = (hsl[0] + degrees) % 360;\r\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\r\n\t\tthis.setValues('hsl', hsl);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Ported from sass implementation in C\r\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n\t */\r\n\tmix: function (mixinColor, weight) {\r\n\t\tvar color1 = this;\r\n\t\tvar color2 = mixinColor;\r\n\t\tvar p = weight === undefined ? 0.5 : weight;\r\n\r\n\t\tvar w = 2 * p - 1;\r\n\t\tvar a = color1.alpha() - color2.alpha();\r\n\r\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n\t\tvar w2 = 1 - w1;\r\n\r\n\t\treturn this\r\n\t\t\t.rgb(\r\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\r\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\r\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\r\n\t\t\t)\r\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\t\treturn this.rgb();\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\r\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\r\n\t\t// except 'alpha' which is a number.\r\n\t\tvar result = new Color();\r\n\t\tvar source = this.values;\r\n\t\tvar target = result.values;\r\n\t\tvar value, type;\r\n\r\n\t\tfor (var prop in source) {\r\n\t\t\tif (source.hasOwnProperty(prop)) {\r\n\t\t\t\tvalue = source[prop];\r\n\t\t\t\ttype = ({}).toString.call(value);\r\n\t\t\t\tif (type === '[object Array]') {\r\n\t\t\t\t\ttarget[prop] = value.slice(0);\r\n\t\t\t\t} else if (type === '[object Number]') {\r\n\t\t\t\t\ttarget[prop] = value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('unexpected color value:', value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nColor.prototype.spaces = {\r\n\trgb: ['red', 'green', 'blue'],\r\n\thsl: ['hue', 'saturation', 'lightness'],\r\n\thsv: ['hue', 'saturation', 'value'],\r\n\thwb: ['hue', 'whiteness', 'blackness'],\r\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n};\r\n\r\nColor.prototype.maxes = {\r\n\trgb: [255, 255, 255],\r\n\thsl: [360, 100, 100],\r\n\thsv: [360, 100, 100],\r\n\thwb: [360, 100, 100],\r\n\tcmyk: [100, 100, 100, 100]\r\n};\r\n\r\nColor.prototype.getValues = function (space) {\r\n\tvar values = this.values;\r\n\tvar vals = {};\r\n\r\n\tfor (var i = 0; i < space.length; i++) {\r\n\t\tvals[space.charAt(i)] = values[space][i];\r\n\t}\r\n\r\n\tif (values.alpha !== 1) {\r\n\t\tvals.a = values.alpha;\r\n\t}\r\n\r\n\t// {r: 255, g: 255, b: 255, a: 0.4}\r\n\treturn vals;\r\n};\r\n\r\nColor.prototype.setValues = function (space, vals) {\r\n\tvar values = this.values;\r\n\tvar spaces = this.spaces;\r\n\tvar maxes = this.maxes;\r\n\tvar alpha = 1;\r\n\tvar i;\r\n\r\n\tthis.valid = true;\r\n\r\n\tif (space === 'alpha') {\r\n\t\talpha = vals;\r\n\t} else if (vals.length) {\r\n\t\t// [10, 10, 10]\r\n\t\tvalues[space] = vals.slice(0, space.length);\r\n\t\talpha = vals[space.length];\r\n\t} else if (vals[space.charAt(0)] !== undefined) {\r\n\t\t// {r: 10, g: 10, b: 10}\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\r\n\t\t}\r\n\r\n\t\talpha = vals.a;\r\n\t} else if (vals[spaces[space][0]] !== undefined) {\r\n\t\t// {red: 10, green: 10, blue: 10}\r\n\t\tvar chans = spaces[space];\r\n\r\n\t\tfor (i = 0; i < space.length; i++) {\r\n\t\t\tvalues[space][i] = vals[chans[i]];\r\n\t\t}\r\n\r\n\t\talpha = vals.alpha;\r\n\t}\r\n\r\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n\tif (space === 'alpha') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar capped;\r\n\r\n\t// cap values of the space prior converting all values\r\n\tfor (i = 0; i < space.length; i++) {\r\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n\t\tvalues[space][i] = Math.round(capped);\r\n\t}\r\n\r\n\t// convert to all the other color spaces\r\n\tfor (var sname in spaces) {\r\n\t\tif (sname !== space) {\r\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nColor.prototype.setSpace = function (space, args) {\r\n\tvar vals = args[0];\r\n\r\n\tif (vals === undefined) {\r\n\t\t// color.rgb()\r\n\t\treturn this.getValues(space);\r\n\t}\r\n\r\n\t// color.rgb(10, 10, 10)\r\n\tif (typeof vals === 'number') {\r\n\t\tvals = Array.prototype.slice.call(args);\r\n\t}\r\n\r\n\tthis.setValues(space, vals);\r\n\treturn this;\r\n};\r\n\r\nColor.prototype.setChannel = function (space, index, val) {\r\n\tvar svalues = this.values[space];\r\n\tif (val === undefined) {\r\n\t\t// color.red()\r\n\t\treturn svalues[index];\r\n\t} else if (val === svalues[index]) {\r\n\t\t// color.red(color.red())\r\n\t\treturn this;\r\n\t}\r\n\r\n\t// color.red(100)\r\n\tsvalues[index] = val;\r\n\tthis.setValues(space, svalues);\r\n\r\n\treturn this;\r\n};\r\n\r\nif (typeof window !== 'undefined') {\r\n\twindow.Color = Color;\r\n}\r\n\r\nmodule.exports = Color;\r\n\r\n},{\"1\":1,\"4\":4}],3:[function(require,module,exports){\r\n/* MIT license */\r\n\r\nmodule.exports = {\r\n  rgb2hsl: rgb2hsl,\r\n  rgb2hsv: rgb2hsv,\r\n  rgb2hwb: rgb2hwb,\r\n  rgb2cmyk: rgb2cmyk,\r\n  rgb2keyword: rgb2keyword,\r\n  rgb2xyz: rgb2xyz,\r\n  rgb2lab: rgb2lab,\r\n  rgb2lch: rgb2lch,\r\n\r\n  hsl2rgb: hsl2rgb,\r\n  hsl2hsv: hsl2hsv,\r\n  hsl2hwb: hsl2hwb,\r\n  hsl2cmyk: hsl2cmyk,\r\n  hsl2keyword: hsl2keyword,\r\n\r\n  hsv2rgb: hsv2rgb,\r\n  hsv2hsl: hsv2hsl,\r\n  hsv2hwb: hsv2hwb,\r\n  hsv2cmyk: hsv2cmyk,\r\n  hsv2keyword: hsv2keyword,\r\n\r\n  hwb2rgb: hwb2rgb,\r\n  hwb2hsl: hwb2hsl,\r\n  hwb2hsv: hwb2hsv,\r\n  hwb2cmyk: hwb2cmyk,\r\n  hwb2keyword: hwb2keyword,\r\n\r\n  cmyk2rgb: cmyk2rgb,\r\n  cmyk2hsl: cmyk2hsl,\r\n  cmyk2hsv: cmyk2hsv,\r\n  cmyk2hwb: cmyk2hwb,\r\n  cmyk2keyword: cmyk2keyword,\r\n\r\n  keyword2rgb: keyword2rgb,\r\n  keyword2hsl: keyword2hsl,\r\n  keyword2hsv: keyword2hsv,\r\n  keyword2hwb: keyword2hwb,\r\n  keyword2cmyk: keyword2cmyk,\r\n  keyword2lab: keyword2lab,\r\n  keyword2xyz: keyword2xyz,\r\n\r\n  xyz2rgb: xyz2rgb,\r\n  xyz2lab: xyz2lab,\r\n  xyz2lch: xyz2lch,\r\n\r\n  lab2xyz: lab2xyz,\r\n  lab2rgb: lab2rgb,\r\n  lab2lch: lab2lch,\r\n\r\n  lch2lab: lch2lab,\r\n  lch2xyz: lch2xyz,\r\n  lch2rgb: lch2rgb\r\n}\r\n\r\n\r\nfunction rgb2hsl(rgb) {\r\n  var r = rgb[0]/255,\r\n      g = rgb[1]/255,\r\n      b = rgb[2]/255,\r\n      min = Math.min(r, g, b),\r\n      max = Math.max(r, g, b),\r\n      delta = max - min,\r\n      h, s, l;\r\n\r\n  if (max == min)\r\n    h = 0;\r\n  else if (r == max)\r\n    h = (g - b) / delta;\r\n  else if (g == max)\r\n    h = 2 + (b - r) / delta;\r\n  else if (b == max)\r\n    h = 4 + (r - g)/ delta;\r\n\r\n  h = Math.min(h * 60, 360);\r\n\r\n  if (h < 0)\r\n    h += 360;\r\n\r\n  l = (min + max) / 2;\r\n\r\n  if (max == min)\r\n    s = 0;\r\n  else if (l <= 0.5)\r\n    s = delta / (max + min);\r\n  else\r\n    s = delta / (2 - max - min);\r\n\r\n  return [h, s * 100, l * 100];\r\n}\r\n\r\nfunction rgb2hsv(rgb) {\r\n  var r = rgb[0],\r\n      g = rgb[1],\r\n      b = rgb[2],\r\n      min = Math.min(r, g, b),\r\n      max = Math.max(r, g, b),\r\n      delta = max - min,\r\n      h, s, v;\r\n\r\n  if (max == 0)\r\n    s = 0;\r\n  else\r\n    s = (delta/max * 1000)/10;\r\n\r\n  if (max == min)\r\n    h = 0;\r\n  else if (r == max)\r\n    h = (g - b) / delta;\r\n  else if (g == max)\r\n    h = 2 + (b - r) / delta;\r\n  else if (b == max)\r\n    h = 4 + (r - g) / delta;\r\n\r\n  h = Math.min(h * 60, 360);\r\n\r\n  if (h < 0)\r\n    h += 360;\r\n\r\n  v = ((max / 255) * 1000) / 10;\r\n\r\n  return [h, s, v];\r\n}\r\n\r\nfunction rgb2hwb(rgb) {\r\n  var r = rgb[0],\r\n      g = rgb[1],\r\n      b = rgb[2],\r\n      h = rgb2hsl(rgb)[0],\r\n      w = 1/255 * Math.min(r, Math.min(g, b)),\r\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\r\n\r\n  return [h, w * 100, b * 100];\r\n}\r\n\r\nfunction rgb2cmyk(rgb) {\r\n  var r = rgb[0] / 255,\r\n      g = rgb[1] / 255,\r\n      b = rgb[2] / 255,\r\n      c, m, y, k;\r\n\r\n  k = Math.min(1 - r, 1 - g, 1 - b);\r\n  c = (1 - r - k) / (1 - k) || 0;\r\n  m = (1 - g - k) / (1 - k) || 0;\r\n  y = (1 - b - k) / (1 - k) || 0;\r\n  return [c * 100, m * 100, y * 100, k * 100];\r\n}\r\n\r\nfunction rgb2keyword(rgb) {\r\n  return reverseKeywords[JSON.stringify(rgb)];\r\n}\r\n\r\nfunction rgb2xyz(rgb) {\r\n  var r = rgb[0] / 255,\r\n      g = rgb[1] / 255,\r\n      b = rgb[2] / 255;\r\n\r\n  // assume sRGB\r\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n  return [x * 100, y *100, z * 100];\r\n}\r\n\r\nfunction rgb2lab(rgb) {\r\n  var xyz = rgb2xyz(rgb),\r\n        x = xyz[0],\r\n        y = xyz[1],\r\n        z = xyz[2],\r\n        l, a, b;\r\n\r\n  x /= 95.047;\r\n  y /= 100;\r\n  z /= 108.883;\r\n\r\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\r\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\r\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\r\n\r\n  l = (116 * y) - 16;\r\n  a = 500 * (x - y);\r\n  b = 200 * (y - z);\r\n\r\n  return [l, a, b];\r\n}\r\n\r\nfunction rgb2lch(args) {\r\n  return lab2lch(rgb2lab(args));\r\n}\r\n\r\nfunction hsl2rgb(hsl) {\r\n  var h = hsl[0] / 360,\r\n      s = hsl[1] / 100,\r\n      l = hsl[2] / 100,\r\n      t1, t2, t3, rgb, val;\r\n\r\n  if (s == 0) {\r\n    val = l * 255;\r\n    return [val, val, val];\r\n  }\r\n\r\n  if (l < 0.5)\r\n    t2 = l * (1 + s);\r\n  else\r\n    t2 = l + s - l * s;\r\n  t1 = 2 * l - t2;\r\n\r\n  rgb = [0, 0, 0];\r\n  for (var i = 0; i < 3; i++) {\r\n    t3 = h + 1 / 3 * - (i - 1);\r\n    t3 < 0 && t3++;\r\n    t3 > 1 && t3--;\r\n\r\n    if (6 * t3 < 1)\r\n      val = t1 + (t2 - t1) * 6 * t3;\r\n    else if (2 * t3 < 1)\r\n      val = t2;\r\n    else if (3 * t3 < 2)\r\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n    else\r\n      val = t1;\r\n\r\n    rgb[i] = val * 255;\r\n  }\r\n\r\n  return rgb;\r\n}\r\n\r\nfunction hsl2hsv(hsl) {\r\n  var h = hsl[0],\r\n      s = hsl[1] / 100,\r\n      l = hsl[2] / 100,\r\n      sv, v;\r\n\r\n  if(l === 0) {\r\n      // no need to do calc on black\r\n      // also avoids divide by 0 error\r\n      return [0, 0, 0];\r\n  }\r\n\r\n  l *= 2;\r\n  s *= (l <= 1) ? l : 2 - l;\r\n  v = (l + s) / 2;\r\n  sv = (2 * s) / (l + s);\r\n  return [h, sv * 100, v * 100];\r\n}\r\n\r\nfunction hsl2hwb(args) {\r\n  return rgb2hwb(hsl2rgb(args));\r\n}\r\n\r\nfunction hsl2cmyk(args) {\r\n  return rgb2cmyk(hsl2rgb(args));\r\n}\r\n\r\nfunction hsl2keyword(args) {\r\n  return rgb2keyword(hsl2rgb(args));\r\n}\r\n\r\n\r\nfunction hsv2rgb(hsv) {\r\n  var h = hsv[0] / 60,\r\n      s = hsv[1] / 100,\r\n      v = hsv[2] / 100,\r\n      hi = Math.floor(h) % 6;\r\n\r\n  var f = h - Math.floor(h),\r\n      p = 255 * v * (1 - s),\r\n      q = 255 * v * (1 - (s * f)),\r\n      t = 255 * v * (1 - (s * (1 - f))),\r\n      v = 255 * v;\r\n\r\n  switch(hi) {\r\n    case 0:\r\n      return [v, t, p];\r\n    case 1:\r\n      return [q, v, p];\r\n    case 2:\r\n      return [p, v, t];\r\n    case 3:\r\n      return [p, q, v];\r\n    case 4:\r\n      return [t, p, v];\r\n    case 5:\r\n      return [v, p, q];\r\n  }\r\n}\r\n\r\nfunction hsv2hsl(hsv) {\r\n  var h = hsv[0],\r\n      s = hsv[1] / 100,\r\n      v = hsv[2] / 100,\r\n      sl, l;\r\n\r\n  l = (2 - s) * v;\r\n  sl = s * v;\r\n  sl /= (l <= 1) ? l : 2 - l;\r\n  sl = sl || 0;\r\n  l /= 2;\r\n  return [h, sl * 100, l * 100];\r\n}\r\n\r\nfunction hsv2hwb(args) {\r\n  return rgb2hwb(hsv2rgb(args))\r\n}\r\n\r\nfunction hsv2cmyk(args) {\r\n  return rgb2cmyk(hsv2rgb(args));\r\n}\r\n\r\nfunction hsv2keyword(args) {\r\n  return rgb2keyword(hsv2rgb(args));\r\n}\r\n\r\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\nfunction hwb2rgb(hwb) {\r\n  var h = hwb[0] / 360,\r\n      wh = hwb[1] / 100,\r\n      bl = hwb[2] / 100,\r\n      ratio = wh + bl,\r\n      i, v, f, n;\r\n\r\n  // wh + bl cant be > 1\r\n  if (ratio > 1) {\r\n    wh /= ratio;\r\n    bl /= ratio;\r\n  }\r\n\r\n  i = Math.floor(6 * h);\r\n  v = 1 - bl;\r\n  f = 6 * h - i;\r\n  if ((i & 0x01) != 0) {\r\n    f = 1 - f;\r\n  }\r\n  n = wh + f * (v - wh);  // linear interpolation\r\n\r\n  switch (i) {\r\n    default:\r\n    case 6:\r\n    case 0: r = v; g = n; b = wh; break;\r\n    case 1: r = n; g = v; b = wh; break;\r\n    case 2: r = wh; g = v; b = n; break;\r\n    case 3: r = wh; g = n; b = v; break;\r\n    case 4: r = n; g = wh; b = v; break;\r\n    case 5: r = v; g = wh; b = n; break;\r\n  }\r\n\r\n  return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction hwb2hsl(args) {\r\n  return rgb2hsl(hwb2rgb(args));\r\n}\r\n\r\nfunction hwb2hsv(args) {\r\n  return rgb2hsv(hwb2rgb(args));\r\n}\r\n\r\nfunction hwb2cmyk(args) {\r\n  return rgb2cmyk(hwb2rgb(args));\r\n}\r\n\r\nfunction hwb2keyword(args) {\r\n  return rgb2keyword(hwb2rgb(args));\r\n}\r\n\r\nfunction cmyk2rgb(cmyk) {\r\n  var c = cmyk[0] / 100,\r\n      m = cmyk[1] / 100,\r\n      y = cmyk[2] / 100,\r\n      k = cmyk[3] / 100,\r\n      r, g, b;\r\n\r\n  r = 1 - Math.min(1, c * (1 - k) + k);\r\n  g = 1 - Math.min(1, m * (1 - k) + k);\r\n  b = 1 - Math.min(1, y * (1 - k) + k);\r\n  return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction cmyk2hsl(args) {\r\n  return rgb2hsl(cmyk2rgb(args));\r\n}\r\n\r\nfunction cmyk2hsv(args) {\r\n  return rgb2hsv(cmyk2rgb(args));\r\n}\r\n\r\nfunction cmyk2hwb(args) {\r\n  return rgb2hwb(cmyk2rgb(args));\r\n}\r\n\r\nfunction cmyk2keyword(args) {\r\n  return rgb2keyword(cmyk2rgb(args));\r\n}\r\n\r\n\r\nfunction xyz2rgb(xyz) {\r\n  var x = xyz[0] / 100,\r\n      y = xyz[1] / 100,\r\n      z = xyz[2] / 100,\r\n      r, g, b;\r\n\r\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n  // assume sRGB\r\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\r\n    : r = (r * 12.92);\r\n\r\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\r\n    : g = (g * 12.92);\r\n\r\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\r\n    : b = (b * 12.92);\r\n\r\n  r = Math.min(Math.max(0, r), 1);\r\n  g = Math.min(Math.max(0, g), 1);\r\n  b = Math.min(Math.max(0, b), 1);\r\n\r\n  return [r * 255, g * 255, b * 255];\r\n}\r\n\r\nfunction xyz2lab(xyz) {\r\n  var x = xyz[0],\r\n      y = xyz[1],\r\n      z = xyz[2],\r\n      l, a, b;\r\n\r\n  x /= 95.047;\r\n  y /= 100;\r\n  z /= 108.883;\r\n\r\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\r\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\r\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\r\n\r\n  l = (116 * y) - 16;\r\n  a = 500 * (x - y);\r\n  b = 200 * (y - z);\r\n\r\n  return [l, a, b];\r\n}\r\n\r\nfunction xyz2lch(args) {\r\n  return lab2lch(xyz2lab(args));\r\n}\r\n\r\nfunction lab2xyz(lab) {\r\n  var l = lab[0],\r\n      a = lab[1],\r\n      b = lab[2],\r\n      x, y, z, y2;\r\n\r\n  if (l <= 8) {\r\n    y = (l * 100) / 903.3;\r\n    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n  } else {\r\n    y = 100 * Math.pow((l + 16) / 116, 3);\r\n    y2 = Math.pow(y / 100, 1/3);\r\n  }\r\n\r\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n  return [x, y, z];\r\n}\r\n\r\nfunction lab2lch(lab) {\r\n  var l = lab[0],\r\n      a = lab[1],\r\n      b = lab[2],\r\n      hr, h, c;\r\n\r\n  hr = Math.atan2(b, a);\r\n  h = hr * 360 / 2 / Math.PI;\r\n  if (h < 0) {\r\n    h += 360;\r\n  }\r\n  c = Math.sqrt(a * a + b * b);\r\n  return [l, c, h];\r\n}\r\n\r\nfunction lab2rgb(args) {\r\n  return xyz2rgb(lab2xyz(args));\r\n}\r\n\r\nfunction lch2lab(lch) {\r\n  var l = lch[0],\r\n      c = lch[1],\r\n      h = lch[2],\r\n      a, b, hr;\r\n\r\n  hr = h / 360 * 2 * Math.PI;\r\n  a = c * Math.cos(hr);\r\n  b = c * Math.sin(hr);\r\n  return [l, a, b];\r\n}\r\n\r\nfunction lch2xyz(args) {\r\n  return lab2xyz(lch2lab(args));\r\n}\r\n\r\nfunction lch2rgb(args) {\r\n  return lab2rgb(lch2lab(args));\r\n}\r\n\r\nfunction keyword2rgb(keyword) {\r\n  return cssKeywords[keyword];\r\n}\r\n\r\nfunction keyword2hsl(args) {\r\n  return rgb2hsl(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2hsv(args) {\r\n  return rgb2hsv(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2hwb(args) {\r\n  return rgb2hwb(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2cmyk(args) {\r\n  return rgb2cmyk(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2lab(args) {\r\n  return rgb2lab(keyword2rgb(args));\r\n}\r\n\r\nfunction keyword2xyz(args) {\r\n  return rgb2xyz(keyword2rgb(args));\r\n}\r\n\r\nvar cssKeywords = {\r\n  aliceblue:  [240,248,255],\r\n  antiquewhite: [250,235,215],\r\n  aqua: [0,255,255],\r\n  aquamarine: [127,255,212],\r\n  azure:  [240,255,255],\r\n  beige:  [245,245,220],\r\n  bisque: [255,228,196],\r\n  black:  [0,0,0],\r\n  blanchedalmond: [255,235,205],\r\n  blue: [0,0,255],\r\n  blueviolet: [138,43,226],\r\n  brown:  [165,42,42],\r\n  burlywood:  [222,184,135],\r\n  cadetblue:  [95,158,160],\r\n  chartreuse: [127,255,0],\r\n  chocolate:  [210,105,30],\r\n  coral:  [255,127,80],\r\n  cornflowerblue: [100,149,237],\r\n  cornsilk: [255,248,220],\r\n  crimson:  [220,20,60],\r\n  cyan: [0,255,255],\r\n  darkblue: [0,0,139],\r\n  darkcyan: [0,139,139],\r\n  darkgoldenrod:  [184,134,11],\r\n  darkgray: [169,169,169],\r\n  darkgreen:  [0,100,0],\r\n  darkgrey: [169,169,169],\r\n  darkkhaki:  [189,183,107],\r\n  darkmagenta:  [139,0,139],\r\n  darkolivegreen: [85,107,47],\r\n  darkorange: [255,140,0],\r\n  darkorchid: [153,50,204],\r\n  darkred:  [139,0,0],\r\n  darksalmon: [233,150,122],\r\n  darkseagreen: [143,188,143],\r\n  darkslateblue:  [72,61,139],\r\n  darkslategray:  [47,79,79],\r\n  darkslategrey:  [47,79,79],\r\n  darkturquoise:  [0,206,209],\r\n  darkviolet: [148,0,211],\r\n  deeppink: [255,20,147],\r\n  deepskyblue:  [0,191,255],\r\n  dimgray:  [105,105,105],\r\n  dimgrey:  [105,105,105],\r\n  dodgerblue: [30,144,255],\r\n  firebrick:  [178,34,34],\r\n  floralwhite:  [255,250,240],\r\n  forestgreen:  [34,139,34],\r\n  fuchsia:  [255,0,255],\r\n  gainsboro:  [220,220,220],\r\n  ghostwhite: [248,248,255],\r\n  gold: [255,215,0],\r\n  goldenrod:  [218,165,32],\r\n  gray: [128,128,128],\r\n  green:  [0,128,0],\r\n  greenyellow:  [173,255,47],\r\n  grey: [128,128,128],\r\n  honeydew: [240,255,240],\r\n  hotpink:  [255,105,180],\r\n  indianred:  [205,92,92],\r\n  indigo: [75,0,130],\r\n  ivory:  [255,255,240],\r\n  khaki:  [240,230,140],\r\n  lavender: [230,230,250],\r\n  lavenderblush:  [255,240,245],\r\n  lawngreen:  [124,252,0],\r\n  lemonchiffon: [255,250,205],\r\n  lightblue:  [173,216,230],\r\n  lightcoral: [240,128,128],\r\n  lightcyan:  [224,255,255],\r\n  lightgoldenrodyellow: [250,250,210],\r\n  lightgray:  [211,211,211],\r\n  lightgreen: [144,238,144],\r\n  lightgrey:  [211,211,211],\r\n  lightpink:  [255,182,193],\r\n  lightsalmon:  [255,160,122],\r\n  lightseagreen:  [32,178,170],\r\n  lightskyblue: [135,206,250],\r\n  lightslategray: [119,136,153],\r\n  lightslategrey: [119,136,153],\r\n  lightsteelblue: [176,196,222],\r\n  lightyellow:  [255,255,224],\r\n  lime: [0,255,0],\r\n  limegreen:  [50,205,50],\r\n  linen:  [250,240,230],\r\n  magenta:  [255,0,255],\r\n  maroon: [128,0,0],\r\n  mediumaquamarine: [102,205,170],\r\n  mediumblue: [0,0,205],\r\n  mediumorchid: [186,85,211],\r\n  mediumpurple: [147,112,219],\r\n  mediumseagreen: [60,179,113],\r\n  mediumslateblue:  [123,104,238],\r\n  mediumspringgreen:  [0,250,154],\r\n  mediumturquoise:  [72,209,204],\r\n  mediumvioletred:  [199,21,133],\r\n  midnightblue: [25,25,112],\r\n  mintcream:  [245,255,250],\r\n  mistyrose:  [255,228,225],\r\n  moccasin: [255,228,181],\r\n  navajowhite:  [255,222,173],\r\n  navy: [0,0,128],\r\n  oldlace:  [253,245,230],\r\n  olive:  [128,128,0],\r\n  olivedrab:  [107,142,35],\r\n  orange: [255,165,0],\r\n  orangered:  [255,69,0],\r\n  orchid: [218,112,214],\r\n  palegoldenrod:  [238,232,170],\r\n  palegreen:  [152,251,152],\r\n  paleturquoise:  [175,238,238],\r\n  palevioletred:  [219,112,147],\r\n  papayawhip: [255,239,213],\r\n  peachpuff:  [255,218,185],\r\n  peru: [205,133,63],\r\n  pink: [255,192,203],\r\n  plum: [221,160,221],\r\n  powderblue: [176,224,230],\r\n  purple: [128,0,128],\r\n  rebeccapurple: [102, 51, 153],\r\n  red:  [255,0,0],\r\n  rosybrown:  [188,143,143],\r\n  royalblue:  [65,105,225],\r\n  saddlebrown:  [139,69,19],\r\n  salmon: [250,128,114],\r\n  sandybrown: [244,164,96],\r\n  seagreen: [46,139,87],\r\n  seashell: [255,245,238],\r\n  sienna: [160,82,45],\r\n  silver: [192,192,192],\r\n  skyblue:  [135,206,235],\r\n  slateblue:  [106,90,205],\r\n  slategray:  [112,128,144],\r\n  slategrey:  [112,128,144],\r\n  snow: [255,250,250],\r\n  springgreen:  [0,255,127],\r\n  steelblue:  [70,130,180],\r\n  tan:  [210,180,140],\r\n  teal: [0,128,128],\r\n  thistle:  [216,191,216],\r\n  tomato: [255,99,71],\r\n  turquoise:  [64,224,208],\r\n  violet: [238,130,238],\r\n  wheat:  [245,222,179],\r\n  white:  [255,255,255],\r\n  whitesmoke: [245,245,245],\r\n  yellow: [255,255,0],\r\n  yellowgreen:  [154,205,50]\r\n};\r\n\r\nvar reverseKeywords = {};\r\nfor (var key in cssKeywords) {\r\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n}\r\n\r\n},{}],4:[function(require,module,exports){\r\nvar conversions = require(3);\r\n\r\nvar convert = function() {\r\n   return new Converter();\r\n}\r\n\r\nfor (var func in conversions) {\r\n  // export Raw versions\r\n  convert[func + \"Raw\"] =  (function(func) {\r\n    // accept array or plain args\r\n    return function(arg) {\r\n      if (typeof arg == \"number\")\r\n        arg = Array.prototype.slice.call(arguments);\r\n      return conversions[func](arg);\r\n    }\r\n  })(func);\r\n\r\n  var pair = /(\\w+)2(\\w+)/.exec(func),\r\n      from = pair[1],\r\n      to = pair[2];\r\n\r\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n  convert[from] = convert[from] || {};\r\n\r\n  convert[from][to] = convert[func] = (function(func) { \r\n    return function(arg) {\r\n      if (typeof arg == \"number\")\r\n        arg = Array.prototype.slice.call(arguments);\r\n      \r\n      var val = conversions[func](arg);\r\n      if (typeof val == \"string\" || val === undefined)\r\n        return val; // keyword\r\n\r\n      for (var i = 0; i < val.length; i++)\r\n        val[i] = Math.round(val[i]);\r\n      return val;\r\n    }\r\n  })(func);\r\n}\r\n\r\n\r\n/* Converter does lazy conversion and caching */\r\nvar Converter = function() {\r\n   this.convs = {};\r\n};\r\n\r\n/* Either get the values for a space or\r\n  set the values for a space, depending on args */\r\nConverter.prototype.routeSpace = function(space, args) {\r\n   var values = args[0];\r\n   if (values === undefined) {\r\n      // color.rgb()\r\n      return this.getValues(space);\r\n   }\r\n   // color.rgb(10, 10, 10)\r\n   if (typeof values == \"number\") {\r\n      values = Array.prototype.slice.call(args);        \r\n   }\r\n\r\n   return this.setValues(space, values);\r\n};\r\n  \r\n/* Set the values for a space, invalidating cache */\r\nConverter.prototype.setValues = function(space, values) {\r\n   this.space = space;\r\n   this.convs = {};\r\n   this.convs[space] = values;\r\n   return this;\r\n};\r\n\r\n/* Get the values for a space. If there's already\r\n  a conversion for the space, fetch it, otherwise\r\n  compute it */\r\nConverter.prototype.getValues = function(space) {\r\n   var vals = this.convs[space];\r\n   if (!vals) {\r\n      var fspace = this.space,\r\n          from = this.convs[fspace];\r\n      vals = convert[fspace][space](from);\r\n\r\n      this.convs[space] = vals;\r\n   }\r\n  return vals;\r\n};\r\n\r\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n   Converter.prototype[space] = function(vals) {\r\n      return this.routeSpace(space, arguments);\r\n   }\r\n});\r\n\r\nmodule.exports = convert;\r\n},{\"3\":3}],5:[function(require,module,exports){\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n},{}],6:[function(require,module,exports){\r\n//! moment.js\r\n//! version : 2.18.1\r\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\r\n//! license : MIT\r\n//! momentjs.com\r\n\r\n;(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    global.moment = factory()\r\n}(this, (function () { 'use strict';\r\n\r\nvar hookCallback;\r\n\r\nfunction hooks () {\r\n    return hookCallback.apply(null, arguments);\r\n}\r\n\r\n// This is done to register the method called with moment()\r\n// without creating circular dependencies.\r\nfunction setHookCallback (callback) {\r\n    hookCallback = callback;\r\n}\r\n\r\nfunction isArray(input) {\r\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\r\n}\r\n\r\nfunction isObject(input) {\r\n    // IE8 will treat undefined and null as object if it wasn't for\r\n    // input != null\r\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\r\n}\r\n\r\nfunction isObjectEmpty(obj) {\r\n    var k;\r\n    for (k in obj) {\r\n        // even if its not own property I'd still call it non-empty\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction isUndefined(input) {\r\n    return input === void 0;\r\n}\r\n\r\nfunction isNumber(input) {\r\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\r\n}\r\n\r\nfunction isDate(input) {\r\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\r\n}\r\n\r\nfunction map(arr, fn) {\r\n    var res = [], i;\r\n    for (i = 0; i < arr.length; ++i) {\r\n        res.push(fn(arr[i], i));\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction hasOwnProp(a, b) {\r\n    return Object.prototype.hasOwnProperty.call(a, b);\r\n}\r\n\r\nfunction extend(a, b) {\r\n    for (var i in b) {\r\n        if (hasOwnProp(b, i)) {\r\n            a[i] = b[i];\r\n        }\r\n    }\r\n\r\n    if (hasOwnProp(b, 'toString')) {\r\n        a.toString = b.toString;\r\n    }\r\n\r\n    if (hasOwnProp(b, 'valueOf')) {\r\n        a.valueOf = b.valueOf;\r\n    }\r\n\r\n    return a;\r\n}\r\n\r\nfunction createUTC (input, format, locale, strict) {\r\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\r\n}\r\n\r\nfunction defaultParsingFlags() {\r\n    // We need to deep clone this object.\r\n    return {\r\n        empty           : false,\r\n        unusedTokens    : [],\r\n        unusedInput     : [],\r\n        overflow        : -2,\r\n        charsLeftOver   : 0,\r\n        nullInput       : false,\r\n        invalidMonth    : null,\r\n        invalidFormat   : false,\r\n        userInvalidated : false,\r\n        iso             : false,\r\n        parsedDateParts : [],\r\n        meridiem        : null,\r\n        rfc2822         : false,\r\n        weekdayMismatch : false\r\n    };\r\n}\r\n\r\nfunction getParsingFlags(m) {\r\n    if (m._pf == null) {\r\n        m._pf = defaultParsingFlags();\r\n    }\r\n    return m._pf;\r\n}\r\n\r\nvar some;\r\nif (Array.prototype.some) {\r\n    some = Array.prototype.some;\r\n} else {\r\n    some = function (fun) {\r\n        var t = Object(this);\r\n        var len = t.length >>> 0;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            if (i in t && fun.call(this, t[i], i, t)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n}\r\n\r\nvar some$1 = some;\r\n\r\nfunction isValid(m) {\r\n    if (m._isValid == null) {\r\n        var flags = getParsingFlags(m);\r\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\r\n            return i != null;\r\n        });\r\n        var isNowValid = !isNaN(m._d.getTime()) &&\r\n            flags.overflow < 0 &&\r\n            !flags.empty &&\r\n            !flags.invalidMonth &&\r\n            !flags.invalidWeekday &&\r\n            !flags.nullInput &&\r\n            !flags.invalidFormat &&\r\n            !flags.userInvalidated &&\r\n            (!flags.meridiem || (flags.meridiem && parsedParts));\r\n\r\n        if (m._strict) {\r\n            isNowValid = isNowValid &&\r\n                flags.charsLeftOver === 0 &&\r\n                flags.unusedTokens.length === 0 &&\r\n                flags.bigHour === undefined;\r\n        }\r\n\r\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\r\n            m._isValid = isNowValid;\r\n        }\r\n        else {\r\n            return isNowValid;\r\n        }\r\n    }\r\n    return m._isValid;\r\n}\r\n\r\nfunction createInvalid (flags) {\r\n    var m = createUTC(NaN);\r\n    if (flags != null) {\r\n        extend(getParsingFlags(m), flags);\r\n    }\r\n    else {\r\n        getParsingFlags(m).userInvalidated = true;\r\n    }\r\n\r\n    return m;\r\n}\r\n\r\n// Plugins that add properties should also add the key here (null value),\r\n// so we can properly clone ourselves.\r\nvar momentProperties = hooks.momentProperties = [];\r\n\r\nfunction copyConfig(to, from) {\r\n    var i, prop, val;\r\n\r\n    if (!isUndefined(from._isAMomentObject)) {\r\n        to._isAMomentObject = from._isAMomentObject;\r\n    }\r\n    if (!isUndefined(from._i)) {\r\n        to._i = from._i;\r\n    }\r\n    if (!isUndefined(from._f)) {\r\n        to._f = from._f;\r\n    }\r\n    if (!isUndefined(from._l)) {\r\n        to._l = from._l;\r\n    }\r\n    if (!isUndefined(from._strict)) {\r\n        to._strict = from._strict;\r\n    }\r\n    if (!isUndefined(from._tzm)) {\r\n        to._tzm = from._tzm;\r\n    }\r\n    if (!isUndefined(from._isUTC)) {\r\n        to._isUTC = from._isUTC;\r\n    }\r\n    if (!isUndefined(from._offset)) {\r\n        to._offset = from._offset;\r\n    }\r\n    if (!isUndefined(from._pf)) {\r\n        to._pf = getParsingFlags(from);\r\n    }\r\n    if (!isUndefined(from._locale)) {\r\n        to._locale = from._locale;\r\n    }\r\n\r\n    if (momentProperties.length > 0) {\r\n        for (i = 0; i < momentProperties.length; i++) {\r\n            prop = momentProperties[i];\r\n            val = from[prop];\r\n            if (!isUndefined(val)) {\r\n                to[prop] = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    return to;\r\n}\r\n\r\nvar updateInProgress = false;\r\n\r\n// Moment prototype object\r\nfunction Moment(config) {\r\n    copyConfig(this, config);\r\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\r\n    if (!this.isValid()) {\r\n        this._d = new Date(NaN);\r\n    }\r\n    // Prevent infinite loop in case updateOffset creates new moment\r\n    // objects.\r\n    if (updateInProgress === false) {\r\n        updateInProgress = true;\r\n        hooks.updateOffset(this);\r\n        updateInProgress = false;\r\n    }\r\n}\r\n\r\nfunction isMoment (obj) {\r\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\r\n}\r\n\r\nfunction absFloor (number) {\r\n    if (number < 0) {\r\n        // -0 -> 0\r\n        return Math.ceil(number) || 0;\r\n    } else {\r\n        return Math.floor(number);\r\n    }\r\n}\r\n\r\nfunction toInt(argumentForCoercion) {\r\n    var coercedNumber = +argumentForCoercion,\r\n        value = 0;\r\n\r\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\r\n        value = absFloor(coercedNumber);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n// compare two arrays, return the number of differences\r\nfunction compareArrays(array1, array2, dontConvert) {\r\n    var len = Math.min(array1.length, array2.length),\r\n        lengthDiff = Math.abs(array1.length - array2.length),\r\n        diffs = 0,\r\n        i;\r\n    for (i = 0; i < len; i++) {\r\n        if ((dontConvert && array1[i] !== array2[i]) ||\r\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\r\n            diffs++;\r\n        }\r\n    }\r\n    return diffs + lengthDiff;\r\n}\r\n\r\nfunction warn(msg) {\r\n    if (hooks.suppressDeprecationWarnings === false &&\r\n            (typeof console !==  'undefined') && console.warn) {\r\n        console.warn('Deprecation warning: ' + msg);\r\n    }\r\n}\r\n\r\nfunction deprecate(msg, fn) {\r\n    var firstTime = true;\r\n\r\n    return extend(function () {\r\n        if (hooks.deprecationHandler != null) {\r\n            hooks.deprecationHandler(null, msg);\r\n        }\r\n        if (firstTime) {\r\n            var args = [];\r\n            var arg;\r\n            for (var i = 0; i < arguments.length; i++) {\r\n                arg = '';\r\n                if (typeof arguments[i] === 'object') {\r\n                    arg += '\\n[' + i + '] ';\r\n                    for (var key in arguments[0]) {\r\n                        arg += key + ': ' + arguments[0][key] + ', ';\r\n                    }\r\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\r\n                } else {\r\n                    arg = arguments[i];\r\n                }\r\n                args.push(arg);\r\n            }\r\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\r\n            firstTime = false;\r\n        }\r\n        return fn.apply(this, arguments);\r\n    }, fn);\r\n}\r\n\r\nvar deprecations = {};\r\n\r\nfunction deprecateSimple(name, msg) {\r\n    if (hooks.deprecationHandler != null) {\r\n        hooks.deprecationHandler(name, msg);\r\n    }\r\n    if (!deprecations[name]) {\r\n        warn(msg);\r\n        deprecations[name] = true;\r\n    }\r\n}\r\n\r\nhooks.suppressDeprecationWarnings = false;\r\nhooks.deprecationHandler = null;\r\n\r\nfunction isFunction(input) {\r\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\r\n}\r\n\r\nfunction set (config) {\r\n    var prop, i;\r\n    for (i in config) {\r\n        prop = config[i];\r\n        if (isFunction(prop)) {\r\n            this[i] = prop;\r\n        } else {\r\n            this['_' + i] = prop;\r\n        }\r\n    }\r\n    this._config = config;\r\n    // Lenient ordinal parsing accepts just a number in addition to\r\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\r\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\r\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\r\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\r\n            '|' + (/\\d{1,2}/).source);\r\n}\r\n\r\nfunction mergeConfigs(parentConfig, childConfig) {\r\n    var res = extend({}, parentConfig), prop;\r\n    for (prop in childConfig) {\r\n        if (hasOwnProp(childConfig, prop)) {\r\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\r\n                res[prop] = {};\r\n                extend(res[prop], parentConfig[prop]);\r\n                extend(res[prop], childConfig[prop]);\r\n            } else if (childConfig[prop] != null) {\r\n                res[prop] = childConfig[prop];\r\n            } else {\r\n                delete res[prop];\r\n            }\r\n        }\r\n    }\r\n    for (prop in parentConfig) {\r\n        if (hasOwnProp(parentConfig, prop) &&\r\n                !hasOwnProp(childConfig, prop) &&\r\n                isObject(parentConfig[prop])) {\r\n            // make sure changes to properties don't modify parent config\r\n            res[prop] = extend({}, res[prop]);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction Locale(config) {\r\n    if (config != null) {\r\n        this.set(config);\r\n    }\r\n}\r\n\r\nvar keys;\r\n\r\nif (Object.keys) {\r\n    keys = Object.keys;\r\n} else {\r\n    keys = function (obj) {\r\n        var i, res = [];\r\n        for (i in obj) {\r\n            if (hasOwnProp(obj, i)) {\r\n                res.push(i);\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n}\r\n\r\nvar keys$1 = keys;\r\n\r\nvar defaultCalendar = {\r\n    sameDay : '[Today at] LT',\r\n    nextDay : '[Tomorrow at] LT',\r\n    nextWeek : 'dddd [at] LT',\r\n    lastDay : '[Yesterday at] LT',\r\n    lastWeek : '[Last] dddd [at] LT',\r\n    sameElse : 'L'\r\n};\r\n\r\nfunction calendar (key, mom, now) {\r\n    var output = this._calendar[key] || this._calendar['sameElse'];\r\n    return isFunction(output) ? output.call(mom, now) : output;\r\n}\r\n\r\nvar defaultLongDateFormat = {\r\n    LTS  : 'h:mm:ss A',\r\n    LT   : 'h:mm A',\r\n    L    : 'MM/DD/YYYY',\r\n    LL   : 'MMMM D, YYYY',\r\n    LLL  : 'MMMM D, YYYY h:mm A',\r\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\r\n};\r\n\r\nfunction longDateFormat (key) {\r\n    var format = this._longDateFormat[key],\r\n        formatUpper = this._longDateFormat[key.toUpperCase()];\r\n\r\n    if (format || !formatUpper) {\r\n        return format;\r\n    }\r\n\r\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\r\n        return val.slice(1);\r\n    });\r\n\r\n    return this._longDateFormat[key];\r\n}\r\n\r\nvar defaultInvalidDate = 'Invalid date';\r\n\r\nfunction invalidDate () {\r\n    return this._invalidDate;\r\n}\r\n\r\nvar defaultOrdinal = '%d';\r\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\r\n\r\nfunction ordinal (number) {\r\n    return this._ordinal.replace('%d', number);\r\n}\r\n\r\nvar defaultRelativeTime = {\r\n    future : 'in %s',\r\n    past   : '%s ago',\r\n    s  : 'a few seconds',\r\n    ss : '%d seconds',\r\n    m  : 'a minute',\r\n    mm : '%d minutes',\r\n    h  : 'an hour',\r\n    hh : '%d hours',\r\n    d  : 'a day',\r\n    dd : '%d days',\r\n    M  : 'a month',\r\n    MM : '%d months',\r\n    y  : 'a year',\r\n    yy : '%d years'\r\n};\r\n\r\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\r\n    var output = this._relativeTime[string];\r\n    return (isFunction(output)) ?\r\n        output(number, withoutSuffix, string, isFuture) :\r\n        output.replace(/%d/i, number);\r\n}\r\n\r\nfunction pastFuture (diff, output) {\r\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\r\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\r\n}\r\n\r\nvar aliases = {};\r\n\r\nfunction addUnitAlias (unit, shorthand) {\r\n    var lowerCase = unit.toLowerCase();\r\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\r\n}\r\n\r\nfunction normalizeUnits(units) {\r\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\r\n}\r\n\r\nfunction normalizeObjectUnits(inputObject) {\r\n    var normalizedInput = {},\r\n        normalizedProp,\r\n        prop;\r\n\r\n    for (prop in inputObject) {\r\n        if (hasOwnProp(inputObject, prop)) {\r\n            normalizedProp = normalizeUnits(prop);\r\n            if (normalizedProp) {\r\n                normalizedInput[normalizedProp] = inputObject[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    return normalizedInput;\r\n}\r\n\r\nvar priorities = {};\r\n\r\nfunction addUnitPriority(unit, priority) {\r\n    priorities[unit] = priority;\r\n}\r\n\r\nfunction getPrioritizedUnits(unitsObj) {\r\n    var units = [];\r\n    for (var u in unitsObj) {\r\n        units.push({unit: u, priority: priorities[u]});\r\n    }\r\n    units.sort(function (a, b) {\r\n        return a.priority - b.priority;\r\n    });\r\n    return units;\r\n}\r\n\r\nfunction makeGetSet (unit, keepTime) {\r\n    return function (value) {\r\n        if (value != null) {\r\n            set$1(this, unit, value);\r\n            hooks.updateOffset(this, keepTime);\r\n            return this;\r\n        } else {\r\n            return get(this, unit);\r\n        }\r\n    };\r\n}\r\n\r\nfunction get (mom, unit) {\r\n    return mom.isValid() ?\r\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\r\n}\r\n\r\nfunction set$1 (mom, unit, value) {\r\n    if (mom.isValid()) {\r\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\r\n    }\r\n}\r\n\r\n// MOMENTS\r\n\r\nfunction stringGet (units) {\r\n    units = normalizeUnits(units);\r\n    if (isFunction(this[units])) {\r\n        return this[units]();\r\n    }\r\n    return this;\r\n}\r\n\r\n\r\nfunction stringSet (units, value) {\r\n    if (typeof units === 'object') {\r\n        units = normalizeObjectUnits(units);\r\n        var prioritized = getPrioritizedUnits(units);\r\n        for (var i = 0; i < prioritized.length; i++) {\r\n            this[prioritized[i].unit](units[prioritized[i].unit]);\r\n        }\r\n    } else {\r\n        units = normalizeUnits(units);\r\n        if (isFunction(this[units])) {\r\n            return this[units](value);\r\n        }\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction zeroFill(number, targetLength, forceSign) {\r\n    var absNumber = '' + Math.abs(number),\r\n        zerosToFill = targetLength - absNumber.length,\r\n        sign = number >= 0;\r\n    return (sign ? (forceSign ? '+' : '') : '-') +\r\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\r\n}\r\n\r\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\r\n\r\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\r\n\r\nvar formatFunctions = {};\r\n\r\nvar formatTokenFunctions = {};\r\n\r\n// token:    'M'\r\n// padded:   ['MM', 2]\r\n// ordinal:  'Mo'\r\n// callback: function () { this.month() + 1 }\r\nfunction addFormatToken (token, padded, ordinal, callback) {\r\n    var func = callback;\r\n    if (typeof callback === 'string') {\r\n        func = function () {\r\n            return this[callback]();\r\n        };\r\n    }\r\n    if (token) {\r\n        formatTokenFunctions[token] = func;\r\n    }\r\n    if (padded) {\r\n        formatTokenFunctions[padded[0]] = function () {\r\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\r\n        };\r\n    }\r\n    if (ordinal) {\r\n        formatTokenFunctions[ordinal] = function () {\r\n            return this.localeData().ordinal(func.apply(this, arguments), token);\r\n        };\r\n    }\r\n}\r\n\r\nfunction removeFormattingTokens(input) {\r\n    if (input.match(/\\[[\\s\\S]/)) {\r\n        return input.replace(/^\\[|\\]$/g, '');\r\n    }\r\n    return input.replace(/\\\\/g, '');\r\n}\r\n\r\nfunction makeFormatFunction(format) {\r\n    var array = format.match(formattingTokens), i, length;\r\n\r\n    for (i = 0, length = array.length; i < length; i++) {\r\n        if (formatTokenFunctions[array[i]]) {\r\n            array[i] = formatTokenFunctions[array[i]];\r\n        } else {\r\n            array[i] = removeFormattingTokens(array[i]);\r\n        }\r\n    }\r\n\r\n    return function (mom) {\r\n        var output = '', i;\r\n        for (i = 0; i < length; i++) {\r\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\r\n        }\r\n        return output;\r\n    };\r\n}\r\n\r\n// format date using native date object\r\nfunction formatMoment(m, format) {\r\n    if (!m.isValid()) {\r\n        return m.localeData().invalidDate();\r\n    }\r\n\r\n    format = expandFormat(format, m.localeData());\r\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\r\n\r\n    return formatFunctions[format](m);\r\n}\r\n\r\nfunction expandFormat(format, locale) {\r\n    var i = 5;\r\n\r\n    function replaceLongDateFormatTokens(input) {\r\n        return locale.longDateFormat(input) || input;\r\n    }\r\n\r\n    localFormattingTokens.lastIndex = 0;\r\n    while (i >= 0 && localFormattingTokens.test(format)) {\r\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\r\n        localFormattingTokens.lastIndex = 0;\r\n        i -= 1;\r\n    }\r\n\r\n    return format;\r\n}\r\n\r\nvar match1         = /\\d/;            //       0 - 9\r\nvar match2         = /\\d\\d/;          //      00 - 99\r\nvar match3         = /\\d{3}/;         //     000 - 999\r\nvar match4         = /\\d{4}/;         //    0000 - 9999\r\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\r\nvar match1to2      = /\\d\\d?/;         //       0 - 99\r\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\r\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\r\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\r\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\r\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\r\n\r\nvar matchUnsigned  = /\\d+/;           //       0 - inf\r\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\r\n\r\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\r\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\r\n\r\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\r\n\r\n// any word (or two) characters or numbers including two/three word month in arabic.\r\n// includes scottish gaelic two word and hyphenated months\r\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n\r\n\r\nvar regexes = {};\r\n\r\nfunction addRegexToken (token, regex, strictRegex) {\r\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\r\n        return (isStrict && strictRegex) ? strictRegex : regex;\r\n    };\r\n}\r\n\r\nfunction getParseRegexForToken (token, config) {\r\n    if (!hasOwnProp(regexes, token)) {\r\n        return new RegExp(unescapeFormat(token));\r\n    }\r\n\r\n    return regexes[token](config._strict, config._locale);\r\n}\r\n\r\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\r\nfunction unescapeFormat(s) {\r\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\r\n        return p1 || p2 || p3 || p4;\r\n    }));\r\n}\r\n\r\nfunction regexEscape(s) {\r\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n}\r\n\r\nvar tokens = {};\r\n\r\nfunction addParseToken (token, callback) {\r\n    var i, func = callback;\r\n    if (typeof token === 'string') {\r\n        token = [token];\r\n    }\r\n    if (isNumber(callback)) {\r\n        func = function (input, array) {\r\n            array[callback] = toInt(input);\r\n        };\r\n    }\r\n    for (i = 0; i < token.length; i++) {\r\n        tokens[token[i]] = func;\r\n    }\r\n}\r\n\r\nfunction addWeekParseToken (token, callback) {\r\n    addParseToken(token, function (input, array, config, token) {\r\n        config._w = config._w || {};\r\n        callback(input, config._w, config, token);\r\n    });\r\n}\r\n\r\nfunction addTimeToArrayFromToken(token, input, config) {\r\n    if (input != null && hasOwnProp(tokens, token)) {\r\n        tokens[token](input, config._a, config, token);\r\n    }\r\n}\r\n\r\nvar YEAR = 0;\r\nvar MONTH = 1;\r\nvar DATE = 2;\r\nvar HOUR = 3;\r\nvar MINUTE = 4;\r\nvar SECOND = 5;\r\nvar MILLISECOND = 6;\r\nvar WEEK = 7;\r\nvar WEEKDAY = 8;\r\n\r\nvar indexOf;\r\n\r\nif (Array.prototype.indexOf) {\r\n    indexOf = Array.prototype.indexOf;\r\n} else {\r\n    indexOf = function (o) {\r\n        // I know\r\n        var i;\r\n        for (i = 0; i < this.length; ++i) {\r\n            if (this[i] === o) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n}\r\n\r\nvar indexOf$1 = indexOf;\r\n\r\nfunction daysInMonth(year, month) {\r\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('M', ['MM', 2], 'Mo', function () {\r\n    return this.month() + 1;\r\n});\r\n\r\naddFormatToken('MMM', 0, 0, function (format) {\r\n    return this.localeData().monthsShort(this, format);\r\n});\r\n\r\naddFormatToken('MMMM', 0, 0, function (format) {\r\n    return this.localeData().months(this, format);\r\n});\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('month', 'M');\r\n\r\n// PRIORITY\r\n\r\naddUnitPriority('month', 8);\r\n\r\n// PARSING\r\n\r\naddRegexToken('M',    match1to2);\r\naddRegexToken('MM',   match1to2, match2);\r\naddRegexToken('MMM',  function (isStrict, locale) {\r\n    return locale.monthsShortRegex(isStrict);\r\n});\r\naddRegexToken('MMMM', function (isStrict, locale) {\r\n    return locale.monthsRegex(isStrict);\r\n});\r\n\r\naddParseToken(['M', 'MM'], function (input, array) {\r\n    array[MONTH] = toInt(input) - 1;\r\n});\r\n\r\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\r\n    var month = config._locale.monthsParse(input, token, config._strict);\r\n    // if we didn't find a month name, mark the date as invalid.\r\n    if (month != null) {\r\n        array[MONTH] = month;\r\n    } else {\r\n        getParsingFlags(config).invalidMonth = input;\r\n    }\r\n});\r\n\r\n// LOCALES\r\n\r\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\r\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\r\nfunction localeMonths (m, format) {\r\n    if (!m) {\r\n        return isArray(this._months) ? this._months :\r\n            this._months['standalone'];\r\n    }\r\n    return isArray(this._months) ? this._months[m.month()] :\r\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\r\n}\r\n\r\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\r\nfunction localeMonthsShort (m, format) {\r\n    if (!m) {\r\n        return isArray(this._monthsShort) ? this._monthsShort :\r\n            this._monthsShort['standalone'];\r\n    }\r\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\r\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\r\n}\r\n\r\nfunction handleStrictParse(monthName, format, strict) {\r\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\r\n    if (!this._monthsParse) {\r\n        // this is not used\r\n        this._monthsParse = [];\r\n        this._longMonthsParse = [];\r\n        this._shortMonthsParse = [];\r\n        for (i = 0; i < 12; ++i) {\r\n            mom = createUTC([2000, i]);\r\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\r\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\r\n        }\r\n    }\r\n\r\n    if (strict) {\r\n        if (format === 'MMM') {\r\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        } else {\r\n            ii = indexOf$1.call(this._longMonthsParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        }\r\n    } else {\r\n        if (format === 'MMM') {\r\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._longMonthsParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        } else {\r\n            ii = indexOf$1.call(this._longMonthsParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        }\r\n    }\r\n}\r\n\r\nfunction localeMonthsParse (monthName, format, strict) {\r\n    var i, mom, regex;\r\n\r\n    if (this._monthsParseExact) {\r\n        return handleStrictParse.call(this, monthName, format, strict);\r\n    }\r\n\r\n    if (!this._monthsParse) {\r\n        this._monthsParse = [];\r\n        this._longMonthsParse = [];\r\n        this._shortMonthsParse = [];\r\n    }\r\n\r\n    // TODO: add sorting\r\n    // Sorting makes sure if one month (or abbr) is a prefix of another\r\n    // see sorting in computeMonthsParse\r\n    for (i = 0; i < 12; i++) {\r\n        // make the regex if we don't have it already\r\n        mom = createUTC([2000, i]);\r\n        if (strict && !this._longMonthsParse[i]) {\r\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\r\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\r\n        }\r\n        if (!strict && !this._monthsParse[i]) {\r\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\r\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n        }\r\n        // test the regex\r\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\r\n            return i;\r\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\r\n            return i;\r\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\r\n            return i;\r\n        }\r\n    }\r\n}\r\n\r\n// MOMENTS\r\n\r\nfunction setMonth (mom, value) {\r\n    var dayOfMonth;\r\n\r\n    if (!mom.isValid()) {\r\n        // No op\r\n        return mom;\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n        if (/^\\d+$/.test(value)) {\r\n            value = toInt(value);\r\n        } else {\r\n            value = mom.localeData().monthsParse(value);\r\n            // TODO: Another silent failure?\r\n            if (!isNumber(value)) {\r\n                return mom;\r\n            }\r\n        }\r\n    }\r\n\r\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\r\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\r\n    return mom;\r\n}\r\n\r\nfunction getSetMonth (value) {\r\n    if (value != null) {\r\n        setMonth(this, value);\r\n        hooks.updateOffset(this, true);\r\n        return this;\r\n    } else {\r\n        return get(this, 'Month');\r\n    }\r\n}\r\n\r\nfunction getDaysInMonth () {\r\n    return daysInMonth(this.year(), this.month());\r\n}\r\n\r\nvar defaultMonthsShortRegex = matchWord;\r\nfunction monthsShortRegex (isStrict) {\r\n    if (this._monthsParseExact) {\r\n        if (!hasOwnProp(this, '_monthsRegex')) {\r\n            computeMonthsParse.call(this);\r\n        }\r\n        if (isStrict) {\r\n            return this._monthsShortStrictRegex;\r\n        } else {\r\n            return this._monthsShortRegex;\r\n        }\r\n    } else {\r\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\r\n            this._monthsShortRegex = defaultMonthsShortRegex;\r\n        }\r\n        return this._monthsShortStrictRegex && isStrict ?\r\n            this._monthsShortStrictRegex : this._monthsShortRegex;\r\n    }\r\n}\r\n\r\nvar defaultMonthsRegex = matchWord;\r\nfunction monthsRegex (isStrict) {\r\n    if (this._monthsParseExact) {\r\n        if (!hasOwnProp(this, '_monthsRegex')) {\r\n            computeMonthsParse.call(this);\r\n        }\r\n        if (isStrict) {\r\n            return this._monthsStrictRegex;\r\n        } else {\r\n            return this._monthsRegex;\r\n        }\r\n    } else {\r\n        if (!hasOwnProp(this, '_monthsRegex')) {\r\n            this._monthsRegex = defaultMonthsRegex;\r\n        }\r\n        return this._monthsStrictRegex && isStrict ?\r\n            this._monthsStrictRegex : this._monthsRegex;\r\n    }\r\n}\r\n\r\nfunction computeMonthsParse () {\r\n    function cmpLenRev(a, b) {\r\n        return b.length - a.length;\r\n    }\r\n\r\n    var shortPieces = [], longPieces = [], mixedPieces = [],\r\n        i, mom;\r\n    for (i = 0; i < 12; i++) {\r\n        // make the regex if we don't have it already\r\n        mom = createUTC([2000, i]);\r\n        shortPieces.push(this.monthsShort(mom, ''));\r\n        longPieces.push(this.months(mom, ''));\r\n        mixedPieces.push(this.months(mom, ''));\r\n        mixedPieces.push(this.monthsShort(mom, ''));\r\n    }\r\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\r\n    // will match the longer piece.\r\n    shortPieces.sort(cmpLenRev);\r\n    longPieces.sort(cmpLenRev);\r\n    mixedPieces.sort(cmpLenRev);\r\n    for (i = 0; i < 12; i++) {\r\n        shortPieces[i] = regexEscape(shortPieces[i]);\r\n        longPieces[i] = regexEscape(longPieces[i]);\r\n    }\r\n    for (i = 0; i < 24; i++) {\r\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n    }\r\n\r\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\r\n    this._monthsShortRegex = this._monthsRegex;\r\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\r\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('Y', 0, 0, function () {\r\n    var y = this.year();\r\n    return y <= 9999 ? '' + y : '+' + y;\r\n});\r\n\r\naddFormatToken(0, ['YY', 2], 0, function () {\r\n    return this.year() % 100;\r\n});\r\n\r\naddFormatToken(0, ['YYYY',   4],       0, 'year');\r\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\r\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('year', 'y');\r\n\r\n// PRIORITIES\r\n\r\naddUnitPriority('year', 1);\r\n\r\n// PARSING\r\n\r\naddRegexToken('Y',      matchSigned);\r\naddRegexToken('YY',     match1to2, match2);\r\naddRegexToken('YYYY',   match1to4, match4);\r\naddRegexToken('YYYYY',  match1to6, match6);\r\naddRegexToken('YYYYYY', match1to6, match6);\r\n\r\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\r\naddParseToken('YYYY', function (input, array) {\r\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\r\n});\r\naddParseToken('YY', function (input, array) {\r\n    array[YEAR] = hooks.parseTwoDigitYear(input);\r\n});\r\naddParseToken('Y', function (input, array) {\r\n    array[YEAR] = parseInt(input, 10);\r\n});\r\n\r\n// HELPERS\r\n\r\nfunction daysInYear(year) {\r\n    return isLeapYear(year) ? 366 : 365;\r\n}\r\n\r\nfunction isLeapYear(year) {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n}\r\n\r\n// HOOKS\r\n\r\nhooks.parseTwoDigitYear = function (input) {\r\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\r\n};\r\n\r\n// MOMENTS\r\n\r\nvar getSetYear = makeGetSet('FullYear', true);\r\n\r\nfunction getIsLeapYear () {\r\n    return isLeapYear(this.year());\r\n}\r\n\r\nfunction createDate (y, m, d, h, M, s, ms) {\r\n    // can't just apply() to create a date:\r\n    // https://stackoverflow.com/q/181348\r\n    var date = new Date(y, m, d, h, M, s, ms);\r\n\r\n    // the date constructor remaps years 0-99 to 1900-1999\r\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\r\n        date.setFullYear(y);\r\n    }\r\n    return date;\r\n}\r\n\r\nfunction createUTCDate (y) {\r\n    var date = new Date(Date.UTC.apply(null, arguments));\r\n\r\n    // the Date.UTC function remaps years 0-99 to 1900-1999\r\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\r\n        date.setUTCFullYear(y);\r\n    }\r\n    return date;\r\n}\r\n\r\n// start-of-first-week - start-of-year\r\nfunction firstWeekOffset(year, dow, doy) {\r\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\r\n        fwd = 7 + dow - doy,\r\n        // first-week day local weekday -- which local weekday is fwd\r\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\r\n\r\n    return -fwdlw + fwd - 1;\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\r\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\r\n    var localWeekday = (7 + weekday - dow) % 7,\r\n        weekOffset = firstWeekOffset(year, dow, doy),\r\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\r\n        resYear, resDayOfYear;\r\n\r\n    if (dayOfYear <= 0) {\r\n        resYear = year - 1;\r\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\r\n    } else if (dayOfYear > daysInYear(year)) {\r\n        resYear = year + 1;\r\n        resDayOfYear = dayOfYear - daysInYear(year);\r\n    } else {\r\n        resYear = year;\r\n        resDayOfYear = dayOfYear;\r\n    }\r\n\r\n    return {\r\n        year: resYear,\r\n        dayOfYear: resDayOfYear\r\n    };\r\n}\r\n\r\nfunction weekOfYear(mom, dow, doy) {\r\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\r\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\r\n        resWeek, resYear;\r\n\r\n    if (week < 1) {\r\n        resYear = mom.year() - 1;\r\n        resWeek = week + weeksInYear(resYear, dow, doy);\r\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\r\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\r\n        resYear = mom.year() + 1;\r\n    } else {\r\n        resYear = mom.year();\r\n        resWeek = week;\r\n    }\r\n\r\n    return {\r\n        week: resWeek,\r\n        year: resYear\r\n    };\r\n}\r\n\r\nfunction weeksInYear(year, dow, doy) {\r\n    var weekOffset = firstWeekOffset(year, dow, doy),\r\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\r\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('w', ['ww', 2], 'wo', 'week');\r\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('week', 'w');\r\naddUnitAlias('isoWeek', 'W');\r\n\r\n// PRIORITIES\r\n\r\naddUnitPriority('week', 5);\r\naddUnitPriority('isoWeek', 5);\r\n\r\n// PARSING\r\n\r\naddRegexToken('w',  match1to2);\r\naddRegexToken('ww', match1to2, match2);\r\naddRegexToken('W',  match1to2);\r\naddRegexToken('WW', match1to2, match2);\r\n\r\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\r\n    week[token.substr(0, 1)] = toInt(input);\r\n});\r\n\r\n// HELPERS\r\n\r\n// LOCALES\r\n\r\nfunction localeWeek (mom) {\r\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\r\n}\r\n\r\nvar defaultLocaleWeek = {\r\n    dow : 0, // Sunday is the first day of the week.\r\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\r\n};\r\n\r\nfunction localeFirstDayOfWeek () {\r\n    return this._week.dow;\r\n}\r\n\r\nfunction localeFirstDayOfYear () {\r\n    return this._week.doy;\r\n}\r\n\r\n// MOMENTS\r\n\r\nfunction getSetWeek (input) {\r\n    var week = this.localeData().week(this);\r\n    return input == null ? week : this.add((input - week) * 7, 'd');\r\n}\r\n\r\nfunction getSetISOWeek (input) {\r\n    var week = weekOfYear(this, 1, 4).week;\r\n    return input == null ? week : this.add((input - week) * 7, 'd');\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('d', 0, 'do', 'day');\r\n\r\naddFormatToken('dd', 0, 0, function (format) {\r\n    return this.localeData().weekdaysMin(this, format);\r\n});\r\n\r\naddFormatToken('ddd', 0, 0, function (format) {\r\n    return this.localeData().weekdaysShort(this, format);\r\n});\r\n\r\naddFormatToken('dddd', 0, 0, function (format) {\r\n    return this.localeData().weekdays(this, format);\r\n});\r\n\r\naddFormatToken('e', 0, 0, 'weekday');\r\naddFormatToken('E', 0, 0, 'isoWeekday');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('day', 'd');\r\naddUnitAlias('weekday', 'e');\r\naddUnitAlias('isoWeekday', 'E');\r\n\r\n// PRIORITY\r\naddUnitPriority('day', 11);\r\naddUnitPriority('weekday', 11);\r\naddUnitPriority('isoWeekday', 11);\r\n\r\n// PARSING\r\n\r\naddRegexToken('d',    match1to2);\r\naddRegexToken('e',    match1to2);\r\naddRegexToken('E',    match1to2);\r\naddRegexToken('dd',   function (isStrict, locale) {\r\n    return locale.weekdaysMinRegex(isStrict);\r\n});\r\naddRegexToken('ddd',   function (isStrict, locale) {\r\n    return locale.weekdaysShortRegex(isStrict);\r\n});\r\naddRegexToken('dddd',   function (isStrict, locale) {\r\n    return locale.weekdaysRegex(isStrict);\r\n});\r\n\r\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\r\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\r\n    // if we didn't get a weekday name, mark the date as invalid\r\n    if (weekday != null) {\r\n        week.d = weekday;\r\n    } else {\r\n        getParsingFlags(config).invalidWeekday = input;\r\n    }\r\n});\r\n\r\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\r\n    week[token] = toInt(input);\r\n});\r\n\r\n// HELPERS\r\n\r\nfunction parseWeekday(input, locale) {\r\n    if (typeof input !== 'string') {\r\n        return input;\r\n    }\r\n\r\n    if (!isNaN(input)) {\r\n        return parseInt(input, 10);\r\n    }\r\n\r\n    input = locale.weekdaysParse(input);\r\n    if (typeof input === 'number') {\r\n        return input;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction parseIsoWeekday(input, locale) {\r\n    if (typeof input === 'string') {\r\n        return locale.weekdaysParse(input) % 7 || 7;\r\n    }\r\n    return isNaN(input) ? null : input;\r\n}\r\n\r\n// LOCALES\r\n\r\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\r\nfunction localeWeekdays (m, format) {\r\n    if (!m) {\r\n        return isArray(this._weekdays) ? this._weekdays :\r\n            this._weekdays['standalone'];\r\n    }\r\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\r\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\r\n}\r\n\r\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\r\nfunction localeWeekdaysShort (m) {\r\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\r\n}\r\n\r\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\r\nfunction localeWeekdaysMin (m) {\r\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\r\n}\r\n\r\nfunction handleStrictParse$1(weekdayName, format, strict) {\r\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\r\n    if (!this._weekdaysParse) {\r\n        this._weekdaysParse = [];\r\n        this._shortWeekdaysParse = [];\r\n        this._minWeekdaysParse = [];\r\n\r\n        for (i = 0; i < 7; ++i) {\r\n            mom = createUTC([2000, 1]).day(i);\r\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\r\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\r\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\r\n        }\r\n    }\r\n\r\n    if (strict) {\r\n        if (format === 'dddd') {\r\n            ii = indexOf$1.call(this._weekdaysParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        } else if (format === 'ddd') {\r\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        } else {\r\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        }\r\n    } else {\r\n        if (format === 'dddd') {\r\n            ii = indexOf$1.call(this._weekdaysParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        } else if (format === 'ddd') {\r\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._weekdaysParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        } else {\r\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._weekdaysParse, llc);\r\n            if (ii !== -1) {\r\n                return ii;\r\n            }\r\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\r\n            return ii !== -1 ? ii : null;\r\n        }\r\n    }\r\n}\r\n\r\nfunction localeWeekdaysParse (weekdayName, format, strict) {\r\n    var i, mom, regex;\r\n\r\n    if (this._weekdaysParseExact) {\r\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\r\n    }\r\n\r\n    if (!this._weekdaysParse) {\r\n        this._weekdaysParse = [];\r\n        this._minWeekdaysParse = [];\r\n        this._shortWeekdaysParse = [];\r\n        this._fullWeekdaysParse = [];\r\n    }\r\n\r\n    for (i = 0; i < 7; i++) {\r\n        // make the regex if we don't have it already\r\n\r\n        mom = createUTC([2000, 1]).day(i);\r\n        if (strict && !this._fullWeekdaysParse[i]) {\r\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\r\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\r\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\r\n        }\r\n        if (!this._weekdaysParse[i]) {\r\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\r\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\r\n        }\r\n        // test the regex\r\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\r\n            return i;\r\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\r\n            return i;\r\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\r\n            return i;\r\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\r\n            return i;\r\n        }\r\n    }\r\n}\r\n\r\n// MOMENTS\r\n\r\nfunction getSetDayOfWeek (input) {\r\n    if (!this.isValid()) {\r\n        return input != null ? this : NaN;\r\n    }\r\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\r\n    if (input != null) {\r\n        input = parseWeekday(input, this.localeData());\r\n        return this.add(input - day, 'd');\r\n    } else {\r\n        return day;\r\n    }\r\n}\r\n\r\nfunction getSetLocaleDayOfWeek (input) {\r\n    if (!this.isValid()) {\r\n        return input != null ? this : NaN;\r\n    }\r\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\r\n    return input == null ? weekday : this.add(input - weekday, 'd');\r\n}\r\n\r\nfunction getSetISODayOfWeek (input) {\r\n    if (!this.isValid()) {\r\n        return input != null ? this : NaN;\r\n    }\r\n\r\n    // behaves the same as moment#day except\r\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\r\n    // as a setter, sunday should belong to the previous week.\r\n\r\n    if (input != null) {\r\n        var weekday = parseIsoWeekday(input, this.localeData());\r\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\r\n    } else {\r\n        return this.day() || 7;\r\n    }\r\n}\r\n\r\nvar defaultWeekdaysRegex = matchWord;\r\nfunction weekdaysRegex (isStrict) {\r\n    if (this._weekdaysParseExact) {\r\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n            computeWeekdaysParse.call(this);\r\n        }\r\n        if (isStrict) {\r\n            return this._weekdaysStrictRegex;\r\n        } else {\r\n            return this._weekdaysRegex;\r\n        }\r\n    } else {\r\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n            this._weekdaysRegex = defaultWeekdaysRegex;\r\n        }\r\n        return this._weekdaysStrictRegex && isStrict ?\r\n            this._weekdaysStrictRegex : this._weekdaysRegex;\r\n    }\r\n}\r\n\r\nvar defaultWeekdaysShortRegex = matchWord;\r\nfunction weekdaysShortRegex (isStrict) {\r\n    if (this._weekdaysParseExact) {\r\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n            computeWeekdaysParse.call(this);\r\n        }\r\n        if (isStrict) {\r\n            return this._weekdaysShortStrictRegex;\r\n        } else {\r\n            return this._weekdaysShortRegex;\r\n        }\r\n    } else {\r\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\r\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\r\n        }\r\n        return this._weekdaysShortStrictRegex && isStrict ?\r\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\r\n    }\r\n}\r\n\r\nvar defaultWeekdaysMinRegex = matchWord;\r\nfunction weekdaysMinRegex (isStrict) {\r\n    if (this._weekdaysParseExact) {\r\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\r\n            computeWeekdaysParse.call(this);\r\n        }\r\n        if (isStrict) {\r\n            return this._weekdaysMinStrictRegex;\r\n        } else {\r\n            return this._weekdaysMinRegex;\r\n        }\r\n    } else {\r\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\r\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\r\n        }\r\n        return this._weekdaysMinStrictRegex && isStrict ?\r\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\r\n    }\r\n}\r\n\r\n\r\nfunction computeWeekdaysParse () {\r\n    function cmpLenRev(a, b) {\r\n        return b.length - a.length;\r\n    }\r\n\r\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\r\n        i, mom, minp, shortp, longp;\r\n    for (i = 0; i < 7; i++) {\r\n        // make the regex if we don't have it already\r\n        mom = createUTC([2000, 1]).day(i);\r\n        minp = this.weekdaysMin(mom, '');\r\n        shortp = this.weekdaysShort(mom, '');\r\n        longp = this.weekdays(mom, '');\r\n        minPieces.push(minp);\r\n        shortPieces.push(shortp);\r\n        longPieces.push(longp);\r\n        mixedPieces.push(minp);\r\n        mixedPieces.push(shortp);\r\n        mixedPieces.push(longp);\r\n    }\r\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\r\n    // will match the longer piece.\r\n    minPieces.sort(cmpLenRev);\r\n    shortPieces.sort(cmpLenRev);\r\n    longPieces.sort(cmpLenRev);\r\n    mixedPieces.sort(cmpLenRev);\r\n    for (i = 0; i < 7; i++) {\r\n        shortPieces[i] = regexEscape(shortPieces[i]);\r\n        longPieces[i] = regexEscape(longPieces[i]);\r\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\r\n    }\r\n\r\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\r\n    this._weekdaysShortRegex = this._weekdaysRegex;\r\n    this._weekdaysMinRegex = this._weekdaysRegex;\r\n\r\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\r\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\r\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\r\n}\r\n\r\n// FORMATTING\r\n\r\nfunction hFormat() {\r\n    return this.hours() % 12 || 12;\r\n}\r\n\r\nfunction kFormat() {\r\n    return this.hours() || 24;\r\n}\r\n\r\naddFormatToken('H', ['HH', 2], 0, 'hour');\r\naddFormatToken('h', ['hh', 2], 0, hFormat);\r\naddFormatToken('k', ['kk', 2], 0, kFormat);\r\n\r\naddFormatToken('hmm', 0, 0, function () {\r\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\r\n});\r\n\r\naddFormatToken('hmmss', 0, 0, function () {\r\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\r\n        zeroFill(this.seconds(), 2);\r\n});\r\n\r\naddFormatToken('Hmm', 0, 0, function () {\r\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\r\n});\r\n\r\naddFormatToken('Hmmss', 0, 0, function () {\r\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\r\n        zeroFill(this.seconds(), 2);\r\n});\r\n\r\nfunction meridiem (token, lowercase) {\r\n    addFormatToken(token, 0, 0, function () {\r\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\r\n    });\r\n}\r\n\r\nmeridiem('a', true);\r\nmeridiem('A', false);\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('hour', 'h');\r\n\r\n// PRIORITY\r\naddUnitPriority('hour', 13);\r\n\r\n// PARSING\r\n\r\nfunction matchMeridiem (isStrict, locale) {\r\n    return locale._meridiemParse;\r\n}\r\n\r\naddRegexToken('a',  matchMeridiem);\r\naddRegexToken('A',  matchMeridiem);\r\naddRegexToken('H',  match1to2);\r\naddRegexToken('h',  match1to2);\r\naddRegexToken('k',  match1to2);\r\naddRegexToken('HH', match1to2, match2);\r\naddRegexToken('hh', match1to2, match2);\r\naddRegexToken('kk', match1to2, match2);\r\n\r\naddRegexToken('hmm', match3to4);\r\naddRegexToken('hmmss', match5to6);\r\naddRegexToken('Hmm', match3to4);\r\naddRegexToken('Hmmss', match5to6);\r\n\r\naddParseToken(['H', 'HH'], HOUR);\r\naddParseToken(['k', 'kk'], function (input, array, config) {\r\n    var kInput = toInt(input);\r\n    array[HOUR] = kInput === 24 ? 0 : kInput;\r\n});\r\naddParseToken(['a', 'A'], function (input, array, config) {\r\n    config._isPm = config._locale.isPM(input);\r\n    config._meridiem = input;\r\n});\r\naddParseToken(['h', 'hh'], function (input, array, config) {\r\n    array[HOUR] = toInt(input);\r\n    getParsingFlags(config).bigHour = true;\r\n});\r\naddParseToken('hmm', function (input, array, config) {\r\n    var pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n    getParsingFlags(config).bigHour = true;\r\n});\r\naddParseToken('hmmss', function (input, array, config) {\r\n    var pos1 = input.length - 4;\r\n    var pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n    getParsingFlags(config).bigHour = true;\r\n});\r\naddParseToken('Hmm', function (input, array, config) {\r\n    var pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n});\r\naddParseToken('Hmmss', function (input, array, config) {\r\n    var pos1 = input.length - 4;\r\n    var pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n});\r\n\r\n// LOCALES\r\n\r\nfunction localeIsPM (input) {\r\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\r\n    // Using charAt should be more compatible.\r\n    return ((input + '').toLowerCase().charAt(0) === 'p');\r\n}\r\n\r\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\r\nfunction localeMeridiem (hours, minutes, isLower) {\r\n    if (hours > 11) {\r\n        return isLower ? 'pm' : 'PM';\r\n    } else {\r\n        return isLower ? 'am' : 'AM';\r\n    }\r\n}\r\n\r\n\r\n// MOMENTS\r\n\r\n// Setting the hour should keep the time, because the user explicitly\r\n// specified which hour he wants. So trying to maintain the same hour (in\r\n// a new timezone) makes sense. Adding/subtracting hours does not follow\r\n// this rule.\r\nvar getSetHour = makeGetSet('Hours', true);\r\n\r\n// months\r\n// week\r\n// weekdays\r\n// meridiem\r\nvar baseConfig = {\r\n    calendar: defaultCalendar,\r\n    longDateFormat: defaultLongDateFormat,\r\n    invalidDate: defaultInvalidDate,\r\n    ordinal: defaultOrdinal,\r\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\r\n    relativeTime: defaultRelativeTime,\r\n\r\n    months: defaultLocaleMonths,\r\n    monthsShort: defaultLocaleMonthsShort,\r\n\r\n    week: defaultLocaleWeek,\r\n\r\n    weekdays: defaultLocaleWeekdays,\r\n    weekdaysMin: defaultLocaleWeekdaysMin,\r\n    weekdaysShort: defaultLocaleWeekdaysShort,\r\n\r\n    meridiemParse: defaultLocaleMeridiemParse\r\n};\r\n\r\n// internal storage for locale config files\r\nvar locales = {};\r\nvar localeFamilies = {};\r\nvar globalLocale;\r\n\r\nfunction normalizeLocale(key) {\r\n    return key ? key.toLowerCase().replace('_', '-') : key;\r\n}\r\n\r\n// pick the locale from the array\r\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\r\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\r\nfunction chooseLocale(names) {\r\n    var i = 0, j, next, locale, split;\r\n\r\n    while (i < names.length) {\r\n        split = normalizeLocale(names[i]).split('-');\r\n        j = split.length;\r\n        next = normalizeLocale(names[i + 1]);\r\n        next = next ? next.split('-') : null;\r\n        while (j > 0) {\r\n            locale = loadLocale(split.slice(0, j).join('-'));\r\n            if (locale) {\r\n                return locale;\r\n            }\r\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\r\n                //the next array item is better than a shallower substring of this one\r\n                break;\r\n            }\r\n            j--;\r\n        }\r\n        i++;\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction loadLocale(name) {\r\n    var oldLocale = null;\r\n    // TODO: Find a better way to register and load all the locales in Node\r\n    if (!locales[name] && (typeof module !== 'undefined') &&\r\n            module && module.exports) {\r\n        try {\r\n            oldLocale = globalLocale._abbr;\r\n            require('./locale/' + name);\r\n            // because defineLocale currently also sets the global locale, we\r\n            // want to undo that for lazy loaded locales\r\n            getSetGlobalLocale(oldLocale);\r\n        } catch (e) { }\r\n    }\r\n    return locales[name];\r\n}\r\n\r\n// This function will load locale and then set the global locale.  If\r\n// no arguments are passed in, it will simply return the current global\r\n// locale key.\r\nfunction getSetGlobalLocale (key, values) {\r\n    var data;\r\n    if (key) {\r\n        if (isUndefined(values)) {\r\n            data = getLocale(key);\r\n        }\r\n        else {\r\n            data = defineLocale(key, values);\r\n        }\r\n\r\n        if (data) {\r\n            // moment.duration._locale = moment._locale = data;\r\n            globalLocale = data;\r\n        }\r\n    }\r\n\r\n    return globalLocale._abbr;\r\n}\r\n\r\nfunction defineLocale (name, config) {\r\n    if (config !== null) {\r\n        var parentConfig = baseConfig;\r\n        config.abbr = name;\r\n        if (locales[name] != null) {\r\n            deprecateSimple('defineLocaleOverride',\r\n                    'use moment.updateLocale(localeName, config) to change ' +\r\n                    'an existing locale. moment.defineLocale(localeName, ' +\r\n                    'config) should only be used for creating a new locale ' +\r\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\r\n            parentConfig = locales[name]._config;\r\n        } else if (config.parentLocale != null) {\r\n            if (locales[config.parentLocale] != null) {\r\n                parentConfig = locales[config.parentLocale]._config;\r\n            } else {\r\n                if (!localeFamilies[config.parentLocale]) {\r\n                    localeFamilies[config.parentLocale] = [];\r\n                }\r\n                localeFamilies[config.parentLocale].push({\r\n                    name: name,\r\n                    config: config\r\n                });\r\n                return null;\r\n            }\r\n        }\r\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\r\n\r\n        if (localeFamilies[name]) {\r\n            localeFamilies[name].forEach(function (x) {\r\n                defineLocale(x.name, x.config);\r\n            });\r\n        }\r\n\r\n        // backwards compat for now: also set the locale\r\n        // make sure we set the locale AFTER all child locales have been\r\n        // created, so we won't end up with the child locale set.\r\n        getSetGlobalLocale(name);\r\n\r\n\r\n        return locales[name];\r\n    } else {\r\n        // useful for testing\r\n        delete locales[name];\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction updateLocale(name, config) {\r\n    if (config != null) {\r\n        var locale, parentConfig = baseConfig;\r\n        // MERGE\r\n        if (locales[name] != null) {\r\n            parentConfig = locales[name]._config;\r\n        }\r\n        config = mergeConfigs(parentConfig, config);\r\n        locale = new Locale(config);\r\n        locale.parentLocale = locales[name];\r\n        locales[name] = locale;\r\n\r\n        // backwards compat for now: also set the locale\r\n        getSetGlobalLocale(name);\r\n    } else {\r\n        // pass null for config to unupdate, useful for tests\r\n        if (locales[name] != null) {\r\n            if (locales[name].parentLocale != null) {\r\n                locales[name] = locales[name].parentLocale;\r\n            } else if (locales[name] != null) {\r\n                delete locales[name];\r\n            }\r\n        }\r\n    }\r\n    return locales[name];\r\n}\r\n\r\n// returns locale data\r\nfunction getLocale (key) {\r\n    var locale;\r\n\r\n    if (key && key._locale && key._locale._abbr) {\r\n        key = key._locale._abbr;\r\n    }\r\n\r\n    if (!key) {\r\n        return globalLocale;\r\n    }\r\n\r\n    if (!isArray(key)) {\r\n        //short-circuit everything else\r\n        locale = loadLocale(key);\r\n        if (locale) {\r\n            return locale;\r\n        }\r\n        key = [key];\r\n    }\r\n\r\n    return chooseLocale(key);\r\n}\r\n\r\nfunction listLocales() {\r\n    return keys$1(locales);\r\n}\r\n\r\nfunction checkOverflow (m) {\r\n    var overflow;\r\n    var a = m._a;\r\n\r\n    if (a && getParsingFlags(m).overflow === -2) {\r\n        overflow =\r\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\r\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\r\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\r\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\r\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\r\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\r\n            -1;\r\n\r\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\r\n            overflow = DATE;\r\n        }\r\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\r\n            overflow = WEEK;\r\n        }\r\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\r\n            overflow = WEEKDAY;\r\n        }\r\n\r\n        getParsingFlags(m).overflow = overflow;\r\n    }\r\n\r\n    return m;\r\n}\r\n\r\n// iso 8601 regex\r\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\r\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\r\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\r\n\r\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\r\n\r\nvar isoDates = [\r\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\r\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\r\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\r\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\r\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\r\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\r\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\r\n    ['YYYYMMDD', /\\d{8}/],\r\n    // YYYYMM is NOT allowed by the standard\r\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\r\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\r\n    ['YYYYDDD', /\\d{7}/]\r\n];\r\n\r\n// iso time formats and regexes\r\nvar isoTimes = [\r\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\r\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\r\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\r\n    ['HH:mm', /\\d\\d:\\d\\d/],\r\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\r\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\r\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\r\n    ['HHmm', /\\d\\d\\d\\d/],\r\n    ['HH', /\\d\\d/]\r\n];\r\n\r\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\r\n\r\n// date from iso format\r\nfunction configFromISO(config) {\r\n    var i, l,\r\n        string = config._i,\r\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\r\n        allowTime, dateFormat, timeFormat, tzFormat;\r\n\r\n    if (match) {\r\n        getParsingFlags(config).iso = true;\r\n\r\n        for (i = 0, l = isoDates.length; i < l; i++) {\r\n            if (isoDates[i][1].exec(match[1])) {\r\n                dateFormat = isoDates[i][0];\r\n                allowTime = isoDates[i][2] !== false;\r\n                break;\r\n            }\r\n        }\r\n        if (dateFormat == null) {\r\n            config._isValid = false;\r\n            return;\r\n        }\r\n        if (match[3]) {\r\n            for (i = 0, l = isoTimes.length; i < l; i++) {\r\n                if (isoTimes[i][1].exec(match[3])) {\r\n                    // match[2] should be 'T' or space\r\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\r\n                    break;\r\n                }\r\n            }\r\n            if (timeFormat == null) {\r\n                config._isValid = false;\r\n                return;\r\n            }\r\n        }\r\n        if (!allowTime && timeFormat != null) {\r\n            config._isValid = false;\r\n            return;\r\n        }\r\n        if (match[4]) {\r\n            if (tzRegex.exec(match[4])) {\r\n                tzFormat = 'Z';\r\n            } else {\r\n                config._isValid = false;\r\n                return;\r\n            }\r\n        }\r\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\r\n        configFromStringAndFormat(config);\r\n    } else {\r\n        config._isValid = false;\r\n    }\r\n}\r\n\r\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\r\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\r\n\r\n// date and time from ref 2822 format\r\nfunction configFromRFC2822(config) {\r\n    var string, match, dayFormat,\r\n        dateFormat, timeFormat, tzFormat;\r\n    var timezones = {\r\n        ' GMT': ' +0000',\r\n        ' EDT': ' -0400',\r\n        ' EST': ' -0500',\r\n        ' CDT': ' -0500',\r\n        ' CST': ' -0600',\r\n        ' MDT': ' -0600',\r\n        ' MST': ' -0700',\r\n        ' PDT': ' -0700',\r\n        ' PST': ' -0800'\r\n    };\r\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\r\n    var timezone, timezoneIndex;\r\n\r\n    string = config._i\r\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\r\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\r\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\r\n    match = basicRfcRegex.exec(string);\r\n\r\n    if (match) {\r\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\r\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\r\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\r\n\r\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\r\n        if (match[1]) { // day of week given\r\n            var momentDate = new Date(match[2]);\r\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\r\n\r\n            if (match[1].substr(0,3) !== momentDay) {\r\n                getParsingFlags(config).weekdayMismatch = true;\r\n                config._isValid = false;\r\n                return;\r\n            }\r\n        }\r\n\r\n        switch (match[5].length) {\r\n            case 2: // military\r\n                if (timezoneIndex === 0) {\r\n                    timezone = ' +0000';\r\n                } else {\r\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\r\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\r\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\r\n                }\r\n                break;\r\n            case 4: // Zone\r\n                timezone = timezones[match[5]];\r\n                break;\r\n            default: // UT or +/-9999\r\n                timezone = timezones[' GMT'];\r\n        }\r\n        match[5] = timezone;\r\n        config._i = match.splice(1).join('');\r\n        tzFormat = ' ZZ';\r\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\r\n        configFromStringAndFormat(config);\r\n        getParsingFlags(config).rfc2822 = true;\r\n    } else {\r\n        config._isValid = false;\r\n    }\r\n}\r\n\r\n// date from iso format or fallback\r\nfunction configFromString(config) {\r\n    var matched = aspNetJsonRegex.exec(config._i);\r\n\r\n    if (matched !== null) {\r\n        config._d = new Date(+matched[1]);\r\n        return;\r\n    }\r\n\r\n    configFromISO(config);\r\n    if (config._isValid === false) {\r\n        delete config._isValid;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    configFromRFC2822(config);\r\n    if (config._isValid === false) {\r\n        delete config._isValid;\r\n    } else {\r\n        return;\r\n    }\r\n\r\n    // Final attempt, use Input Fallback\r\n    hooks.createFromInputFallback(config);\r\n}\r\n\r\nhooks.createFromInputFallback = deprecate(\r\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\r\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\r\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\r\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\r\n    function (config) {\r\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\r\n    }\r\n);\r\n\r\n// Pick the first defined of two or three arguments.\r\nfunction defaults(a, b, c) {\r\n    if (a != null) {\r\n        return a;\r\n    }\r\n    if (b != null) {\r\n        return b;\r\n    }\r\n    return c;\r\n}\r\n\r\nfunction currentDateArray(config) {\r\n    // hooks is actually the exported moment object\r\n    var nowValue = new Date(hooks.now());\r\n    if (config._useUTC) {\r\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\r\n    }\r\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\r\n}\r\n\r\n// convert an array to a date.\r\n// the array should mirror the parameters below\r\n// note: all values past the year are optional and will default to the lowest possible value.\r\n// [year, month, day , hour, minute, second, millisecond]\r\nfunction configFromArray (config) {\r\n    var i, date, input = [], currentDate, yearToUse;\r\n\r\n    if (config._d) {\r\n        return;\r\n    }\r\n\r\n    currentDate = currentDateArray(config);\r\n\r\n    //compute day of the year from weeks and weekdays\r\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\r\n        dayOfYearFromWeekInfo(config);\r\n    }\r\n\r\n    //if the day of the year is set, figure out what it is\r\n    if (config._dayOfYear != null) {\r\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\r\n\r\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\r\n            getParsingFlags(config)._overflowDayOfYear = true;\r\n        }\r\n\r\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\r\n        config._a[MONTH] = date.getUTCMonth();\r\n        config._a[DATE] = date.getUTCDate();\r\n    }\r\n\r\n    // Default to current date.\r\n    // * if no year, month, day of month are given, default to today\r\n    // * if day of month is given, default month and year\r\n    // * if month is given, default only year\r\n    // * if year is given, don't default anything\r\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\r\n        config._a[i] = input[i] = currentDate[i];\r\n    }\r\n\r\n    // Zero out whatever was not defaulted, including time\r\n    for (; i < 7; i++) {\r\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\r\n    }\r\n\r\n    // Check for 24:00:00.000\r\n    if (config._a[HOUR] === 24 &&\r\n            config._a[MINUTE] === 0 &&\r\n            config._a[SECOND] === 0 &&\r\n            config._a[MILLISECOND] === 0) {\r\n        config._nextDay = true;\r\n        config._a[HOUR] = 0;\r\n    }\r\n\r\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\r\n    // Apply timezone offset from input. The actual utcOffset can be changed\r\n    // with parseZone.\r\n    if (config._tzm != null) {\r\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\r\n    }\r\n\r\n    if (config._nextDay) {\r\n        config._a[HOUR] = 24;\r\n    }\r\n}\r\n\r\nfunction dayOfYearFromWeekInfo(config) {\r\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\r\n\r\n    w = config._w;\r\n    if (w.GG != null || w.W != null || w.E != null) {\r\n        dow = 1;\r\n        doy = 4;\r\n\r\n        // TODO: We need to take the current isoWeekYear, but that depends on\r\n        // how we interpret now (local, utc, fixed offset). So create\r\n        // a now version of current config (take local/utc/offset flags, and\r\n        // create now).\r\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\r\n        week = defaults(w.W, 1);\r\n        weekday = defaults(w.E, 1);\r\n        if (weekday < 1 || weekday > 7) {\r\n            weekdayOverflow = true;\r\n        }\r\n    } else {\r\n        dow = config._locale._week.dow;\r\n        doy = config._locale._week.doy;\r\n\r\n        var curWeek = weekOfYear(createLocal(), dow, doy);\r\n\r\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\r\n\r\n        // Default to current week.\r\n        week = defaults(w.w, curWeek.week);\r\n\r\n        if (w.d != null) {\r\n            // weekday -- low day numbers are considered next week\r\n            weekday = w.d;\r\n            if (weekday < 0 || weekday > 6) {\r\n                weekdayOverflow = true;\r\n            }\r\n        } else if (w.e != null) {\r\n            // local weekday -- counting starts from begining of week\r\n            weekday = w.e + dow;\r\n            if (w.e < 0 || w.e > 6) {\r\n                weekdayOverflow = true;\r\n            }\r\n        } else {\r\n            // default to begining of week\r\n            weekday = dow;\r\n        }\r\n    }\r\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\r\n        getParsingFlags(config)._overflowWeeks = true;\r\n    } else if (weekdayOverflow != null) {\r\n        getParsingFlags(config)._overflowWeekday = true;\r\n    } else {\r\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\r\n        config._a[YEAR] = temp.year;\r\n        config._dayOfYear = temp.dayOfYear;\r\n    }\r\n}\r\n\r\n// constant that refers to the ISO standard\r\nhooks.ISO_8601 = function () {};\r\n\r\n// constant that refers to the RFC 2822 form\r\nhooks.RFC_2822 = function () {};\r\n\r\n// date from string and format string\r\nfunction configFromStringAndFormat(config) {\r\n    // TODO: Move this to another part of the creation flow to prevent circular deps\r\n    if (config._f === hooks.ISO_8601) {\r\n        configFromISO(config);\r\n        return;\r\n    }\r\n    if (config._f === hooks.RFC_2822) {\r\n        configFromRFC2822(config);\r\n        return;\r\n    }\r\n    config._a = [];\r\n    getParsingFlags(config).empty = true;\r\n\r\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\r\n    var string = '' + config._i,\r\n        i, parsedInput, tokens, token, skipped,\r\n        stringLength = string.length,\r\n        totalParsedInputLength = 0;\r\n\r\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\r\n\r\n    for (i = 0; i < tokens.length; i++) {\r\n        token = tokens[i];\r\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\r\n        //         'regex', getParseRegexForToken(token, config));\r\n        if (parsedInput) {\r\n            skipped = string.substr(0, string.indexOf(parsedInput));\r\n            if (skipped.length > 0) {\r\n                getParsingFlags(config).unusedInput.push(skipped);\r\n            }\r\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\r\n            totalParsedInputLength += parsedInput.length;\r\n        }\r\n        // don't parse if it's not a known token\r\n        if (formatTokenFunctions[token]) {\r\n            if (parsedInput) {\r\n                getParsingFlags(config).empty = false;\r\n            }\r\n            else {\r\n                getParsingFlags(config).unusedTokens.push(token);\r\n            }\r\n            addTimeToArrayFromToken(token, parsedInput, config);\r\n        }\r\n        else if (config._strict && !parsedInput) {\r\n            getParsingFlags(config).unusedTokens.push(token);\r\n        }\r\n    }\r\n\r\n    // add remaining unparsed input length to the string\r\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\r\n    if (string.length > 0) {\r\n        getParsingFlags(config).unusedInput.push(string);\r\n    }\r\n\r\n    // clear _12h flag if hour is <= 12\r\n    if (config._a[HOUR] <= 12 &&\r\n        getParsingFlags(config).bigHour === true &&\r\n        config._a[HOUR] > 0) {\r\n        getParsingFlags(config).bigHour = undefined;\r\n    }\r\n\r\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\r\n    getParsingFlags(config).meridiem = config._meridiem;\r\n    // handle meridiem\r\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\r\n\r\n    configFromArray(config);\r\n    checkOverflow(config);\r\n}\r\n\r\n\r\nfunction meridiemFixWrap (locale, hour, meridiem) {\r\n    var isPm;\r\n\r\n    if (meridiem == null) {\r\n        // nothing to do\r\n        return hour;\r\n    }\r\n    if (locale.meridiemHour != null) {\r\n        return locale.meridiemHour(hour, meridiem);\r\n    } else if (locale.isPM != null) {\r\n        // Fallback\r\n        isPm = locale.isPM(meridiem);\r\n        if (isPm && hour < 12) {\r\n            hour += 12;\r\n        }\r\n        if (!isPm && hour === 12) {\r\n            hour = 0;\r\n        }\r\n        return hour;\r\n    } else {\r\n        // this is not supposed to happen\r\n        return hour;\r\n    }\r\n}\r\n\r\n// date from string and array of format strings\r\nfunction configFromStringAndArray(config) {\r\n    var tempConfig,\r\n        bestMoment,\r\n\r\n        scoreToBeat,\r\n        i,\r\n        currentScore;\r\n\r\n    if (config._f.length === 0) {\r\n        getParsingFlags(config).invalidFormat = true;\r\n        config._d = new Date(NaN);\r\n        return;\r\n    }\r\n\r\n    for (i = 0; i < config._f.length; i++) {\r\n        currentScore = 0;\r\n        tempConfig = copyConfig({}, config);\r\n        if (config._useUTC != null) {\r\n            tempConfig._useUTC = config._useUTC;\r\n        }\r\n        tempConfig._f = config._f[i];\r\n        configFromStringAndFormat(tempConfig);\r\n\r\n        if (!isValid(tempConfig)) {\r\n            continue;\r\n        }\r\n\r\n        // if there is any input that was not parsed add a penalty for that format\r\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\r\n\r\n        //or tokens\r\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\r\n\r\n        getParsingFlags(tempConfig).score = currentScore;\r\n\r\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\r\n            scoreToBeat = currentScore;\r\n            bestMoment = tempConfig;\r\n        }\r\n    }\r\n\r\n    extend(config, bestMoment || tempConfig);\r\n}\r\n\r\nfunction configFromObject(config) {\r\n    if (config._d) {\r\n        return;\r\n    }\r\n\r\n    var i = normalizeObjectUnits(config._i);\r\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\r\n        return obj && parseInt(obj, 10);\r\n    });\r\n\r\n    configFromArray(config);\r\n}\r\n\r\nfunction createFromConfig (config) {\r\n    var res = new Moment(checkOverflow(prepareConfig(config)));\r\n    if (res._nextDay) {\r\n        // Adding is smart enough around DST\r\n        res.add(1, 'd');\r\n        res._nextDay = undefined;\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nfunction prepareConfig (config) {\r\n    var input = config._i,\r\n        format = config._f;\r\n\r\n    config._locale = config._locale || getLocale(config._l);\r\n\r\n    if (input === null || (format === undefined && input === '')) {\r\n        return createInvalid({nullInput: true});\r\n    }\r\n\r\n    if (typeof input === 'string') {\r\n        config._i = input = config._locale.preparse(input);\r\n    }\r\n\r\n    if (isMoment(input)) {\r\n        return new Moment(checkOverflow(input));\r\n    } else if (isDate(input)) {\r\n        config._d = input;\r\n    } else if (isArray(format)) {\r\n        configFromStringAndArray(config);\r\n    } else if (format) {\r\n        configFromStringAndFormat(config);\r\n    }  else {\r\n        configFromInput(config);\r\n    }\r\n\r\n    if (!isValid(config)) {\r\n        config._d = null;\r\n    }\r\n\r\n    return config;\r\n}\r\n\r\nfunction configFromInput(config) {\r\n    var input = config._i;\r\n    if (isUndefined(input)) {\r\n        config._d = new Date(hooks.now());\r\n    } else if (isDate(input)) {\r\n        config._d = new Date(input.valueOf());\r\n    } else if (typeof input === 'string') {\r\n        configFromString(config);\r\n    } else if (isArray(input)) {\r\n        config._a = map(input.slice(0), function (obj) {\r\n            return parseInt(obj, 10);\r\n        });\r\n        configFromArray(config);\r\n    } else if (isObject(input)) {\r\n        configFromObject(config);\r\n    } else if (isNumber(input)) {\r\n        // from milliseconds\r\n        config._d = new Date(input);\r\n    } else {\r\n        hooks.createFromInputFallback(config);\r\n    }\r\n}\r\n\r\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\r\n    var c = {};\r\n\r\n    if (locale === true || locale === false) {\r\n        strict = locale;\r\n        locale = undefined;\r\n    }\r\n\r\n    if ((isObject(input) && isObjectEmpty(input)) ||\r\n            (isArray(input) && input.length === 0)) {\r\n        input = undefined;\r\n    }\r\n    // object construction must be done this way.\r\n    // https://github.com/moment/moment/issues/1423\r\n    c._isAMomentObject = true;\r\n    c._useUTC = c._isUTC = isUTC;\r\n    c._l = locale;\r\n    c._i = input;\r\n    c._f = format;\r\n    c._strict = strict;\r\n\r\n    return createFromConfig(c);\r\n}\r\n\r\nfunction createLocal (input, format, locale, strict) {\r\n    return createLocalOrUTC(input, format, locale, strict, false);\r\n}\r\n\r\nvar prototypeMin = deprecate(\r\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\r\n    function () {\r\n        var other = createLocal.apply(null, arguments);\r\n        if (this.isValid() && other.isValid()) {\r\n            return other < this ? this : other;\r\n        } else {\r\n            return createInvalid();\r\n        }\r\n    }\r\n);\r\n\r\nvar prototypeMax = deprecate(\r\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\r\n    function () {\r\n        var other = createLocal.apply(null, arguments);\r\n        if (this.isValid() && other.isValid()) {\r\n            return other > this ? this : other;\r\n        } else {\r\n            return createInvalid();\r\n        }\r\n    }\r\n);\r\n\r\n// Pick a moment m from moments so that m[fn](other) is true for all\r\n// other. This relies on the function fn to be transitive.\r\n//\r\n// moments should either be an array of moment objects or an array, whose\r\n// first element is an array of moment objects.\r\nfunction pickBy(fn, moments) {\r\n    var res, i;\r\n    if (moments.length === 1 && isArray(moments[0])) {\r\n        moments = moments[0];\r\n    }\r\n    if (!moments.length) {\r\n        return createLocal();\r\n    }\r\n    res = moments[0];\r\n    for (i = 1; i < moments.length; ++i) {\r\n        if (!moments[i].isValid() || moments[i][fn](res)) {\r\n            res = moments[i];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n// TODO: Use [].sort instead?\r\nfunction min () {\r\n    var args = [].slice.call(arguments, 0);\r\n\r\n    return pickBy('isBefore', args);\r\n}\r\n\r\nfunction max () {\r\n    var args = [].slice.call(arguments, 0);\r\n\r\n    return pickBy('isAfter', args);\r\n}\r\n\r\nvar now = function () {\r\n    return Date.now ? Date.now() : +(new Date());\r\n};\r\n\r\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\r\n\r\nfunction isDurationValid(m) {\r\n    for (var key in m) {\r\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var unitHasDecimal = false;\r\n    for (var i = 0; i < ordering.length; ++i) {\r\n        if (m[ordering[i]]) {\r\n            if (unitHasDecimal) {\r\n                return false; // only allow non-integers for smallest unit\r\n            }\r\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\r\n                unitHasDecimal = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isValid$1() {\r\n    return this._isValid;\r\n}\r\n\r\nfunction createInvalid$1() {\r\n    return createDuration(NaN);\r\n}\r\n\r\nfunction Duration (duration) {\r\n    var normalizedInput = normalizeObjectUnits(duration),\r\n        years = normalizedInput.year || 0,\r\n        quarters = normalizedInput.quarter || 0,\r\n        months = normalizedInput.month || 0,\r\n        weeks = normalizedInput.week || 0,\r\n        days = normalizedInput.day || 0,\r\n        hours = normalizedInput.hour || 0,\r\n        minutes = normalizedInput.minute || 0,\r\n        seconds = normalizedInput.second || 0,\r\n        milliseconds = normalizedInput.millisecond || 0;\r\n\r\n    this._isValid = isDurationValid(normalizedInput);\r\n\r\n    // representation for dateAddRemove\r\n    this._milliseconds = +milliseconds +\r\n        seconds * 1e3 + // 1000\r\n        minutes * 6e4 + // 1000 * 60\r\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\r\n    // Because of dateAddRemove treats 24 hours as different from a\r\n    // day when working around DST, we need to store them separately\r\n    this._days = +days +\r\n        weeks * 7;\r\n    // It is impossible translate months into days without knowing\r\n    // which months you are are talking about, so we have to store\r\n    // it separately.\r\n    this._months = +months +\r\n        quarters * 3 +\r\n        years * 12;\r\n\r\n    this._data = {};\r\n\r\n    this._locale = getLocale();\r\n\r\n    this._bubble();\r\n}\r\n\r\nfunction isDuration (obj) {\r\n    return obj instanceof Duration;\r\n}\r\n\r\nfunction absRound (number) {\r\n    if (number < 0) {\r\n        return Math.round(-1 * number) * -1;\r\n    } else {\r\n        return Math.round(number);\r\n    }\r\n}\r\n\r\n// FORMATTING\r\n\r\nfunction offset (token, separator) {\r\n    addFormatToken(token, 0, 0, function () {\r\n        var offset = this.utcOffset();\r\n        var sign = '+';\r\n        if (offset < 0) {\r\n            offset = -offset;\r\n            sign = '-';\r\n        }\r\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\r\n    });\r\n}\r\n\r\noffset('Z', ':');\r\noffset('ZZ', '');\r\n\r\n// PARSING\r\n\r\naddRegexToken('Z',  matchShortOffset);\r\naddRegexToken('ZZ', matchShortOffset);\r\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\r\n    config._useUTC = true;\r\n    config._tzm = offsetFromString(matchShortOffset, input);\r\n});\r\n\r\n// HELPERS\r\n\r\n// timezone chunker\r\n// '+10:00' > ['10',  '00']\r\n// '-1530'  > ['-15', '30']\r\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\r\n\r\nfunction offsetFromString(matcher, string) {\r\n    var matches = (string || '').match(matcher);\r\n\r\n    if (matches === null) {\r\n        return null;\r\n    }\r\n\r\n    var chunk   = matches[matches.length - 1] || [];\r\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\r\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\r\n\r\n    return minutes === 0 ?\r\n      0 :\r\n      parts[0] === '+' ? minutes : -minutes;\r\n}\r\n\r\n// Return a moment from input, that is local/utc/zone equivalent to model.\r\nfunction cloneWithOffset(input, model) {\r\n    var res, diff;\r\n    if (model._isUTC) {\r\n        res = model.clone();\r\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\r\n        // Use low-level api, because this fn is low-level api.\r\n        res._d.setTime(res._d.valueOf() + diff);\r\n        hooks.updateOffset(res, false);\r\n        return res;\r\n    } else {\r\n        return createLocal(input).local();\r\n    }\r\n}\r\n\r\nfunction getDateOffset (m) {\r\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\r\n    // https://github.com/moment/moment/pull/1871\r\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\r\n}\r\n\r\n// HOOKS\r\n\r\n// This function will be called whenever a moment is mutated.\r\n// It is intended to keep the offset in sync with the timezone.\r\nhooks.updateOffset = function () {};\r\n\r\n// MOMENTS\r\n\r\n// keepLocalTime = true means only change the timezone, without\r\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\r\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\r\n// +0200, so we adjust the time as needed, to be valid.\r\n//\r\n// Keeping the time actually adds/subtracts (one hour)\r\n// from the actual represented time. That is why we call updateOffset\r\n// a second time. In case it wants us to change the offset again\r\n// _changeInProgress == true case, then we have to adjust, because\r\n// there is no such time in the given timezone.\r\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\r\n    var offset = this._offset || 0,\r\n        localAdjust;\r\n    if (!this.isValid()) {\r\n        return input != null ? this : NaN;\r\n    }\r\n    if (input != null) {\r\n        if (typeof input === 'string') {\r\n            input = offsetFromString(matchShortOffset, input);\r\n            if (input === null) {\r\n                return this;\r\n            }\r\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\r\n            input = input * 60;\r\n        }\r\n        if (!this._isUTC && keepLocalTime) {\r\n            localAdjust = getDateOffset(this);\r\n        }\r\n        this._offset = input;\r\n        this._isUTC = true;\r\n        if (localAdjust != null) {\r\n            this.add(localAdjust, 'm');\r\n        }\r\n        if (offset !== input) {\r\n            if (!keepLocalTime || this._changeInProgress) {\r\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\r\n            } else if (!this._changeInProgress) {\r\n                this._changeInProgress = true;\r\n                hooks.updateOffset(this, true);\r\n                this._changeInProgress = null;\r\n            }\r\n        }\r\n        return this;\r\n    } else {\r\n        return this._isUTC ? offset : getDateOffset(this);\r\n    }\r\n}\r\n\r\nfunction getSetZone (input, keepLocalTime) {\r\n    if (input != null) {\r\n        if (typeof input !== 'string') {\r\n            input = -input;\r\n        }\r\n\r\n        this.utcOffset(input, keepLocalTime);\r\n\r\n        return this;\r\n    } else {\r\n        return -this.utcOffset();\r\n    }\r\n}\r\n\r\nfunction setOffsetToUTC (keepLocalTime) {\r\n    return this.utcOffset(0, keepLocalTime);\r\n}\r\n\r\nfunction setOffsetToLocal (keepLocalTime) {\r\n    if (this._isUTC) {\r\n        this.utcOffset(0, keepLocalTime);\r\n        this._isUTC = false;\r\n\r\n        if (keepLocalTime) {\r\n            this.subtract(getDateOffset(this), 'm');\r\n        }\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction setOffsetToParsedOffset () {\r\n    if (this._tzm != null) {\r\n        this.utcOffset(this._tzm, false, true);\r\n    } else if (typeof this._i === 'string') {\r\n        var tZone = offsetFromString(matchOffset, this._i);\r\n        if (tZone != null) {\r\n            this.utcOffset(tZone);\r\n        }\r\n        else {\r\n            this.utcOffset(0, true);\r\n        }\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction hasAlignedHourOffset (input) {\r\n    if (!this.isValid()) {\r\n        return false;\r\n    }\r\n    input = input ? createLocal(input).utcOffset() : 0;\r\n\r\n    return (this.utcOffset() - input) % 60 === 0;\r\n}\r\n\r\nfunction isDaylightSavingTime () {\r\n    return (\r\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\r\n        this.utcOffset() > this.clone().month(5).utcOffset()\r\n    );\r\n}\r\n\r\nfunction isDaylightSavingTimeShifted () {\r\n    if (!isUndefined(this._isDSTShifted)) {\r\n        return this._isDSTShifted;\r\n    }\r\n\r\n    var c = {};\r\n\r\n    copyConfig(c, this);\r\n    c = prepareConfig(c);\r\n\r\n    if (c._a) {\r\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\r\n        this._isDSTShifted = this.isValid() &&\r\n            compareArrays(c._a, other.toArray()) > 0;\r\n    } else {\r\n        this._isDSTShifted = false;\r\n    }\r\n\r\n    return this._isDSTShifted;\r\n}\r\n\r\nfunction isLocal () {\r\n    return this.isValid() ? !this._isUTC : false;\r\n}\r\n\r\nfunction isUtcOffset () {\r\n    return this.isValid() ? this._isUTC : false;\r\n}\r\n\r\nfunction isUtc () {\r\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\r\n}\r\n\r\n// ASP.NET json date format regex\r\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\r\n\r\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\r\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\r\n// and further modified to allow for strings containing both week and day\r\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\r\n\r\nfunction createDuration (input, key) {\r\n    var duration = input,\r\n        // matching against regexp is expensive, do it on demand\r\n        match = null,\r\n        sign,\r\n        ret,\r\n        diffRes;\r\n\r\n    if (isDuration(input)) {\r\n        duration = {\r\n            ms : input._milliseconds,\r\n            d  : input._days,\r\n            M  : input._months\r\n        };\r\n    } else if (isNumber(input)) {\r\n        duration = {};\r\n        if (key) {\r\n            duration[key] = input;\r\n        } else {\r\n            duration.milliseconds = input;\r\n        }\r\n    } else if (!!(match = aspNetRegex.exec(input))) {\r\n        sign = (match[1] === '-') ? -1 : 1;\r\n        duration = {\r\n            y  : 0,\r\n            d  : toInt(match[DATE])                         * sign,\r\n            h  : toInt(match[HOUR])                         * sign,\r\n            m  : toInt(match[MINUTE])                       * sign,\r\n            s  : toInt(match[SECOND])                       * sign,\r\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\r\n        };\r\n    } else if (!!(match = isoRegex.exec(input))) {\r\n        sign = (match[1] === '-') ? -1 : 1;\r\n        duration = {\r\n            y : parseIso(match[2], sign),\r\n            M : parseIso(match[3], sign),\r\n            w : parseIso(match[4], sign),\r\n            d : parseIso(match[5], sign),\r\n            h : parseIso(match[6], sign),\r\n            m : parseIso(match[7], sign),\r\n            s : parseIso(match[8], sign)\r\n        };\r\n    } else if (duration == null) {// checks for null or undefined\r\n        duration = {};\r\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\r\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\r\n\r\n        duration = {};\r\n        duration.ms = diffRes.milliseconds;\r\n        duration.M = diffRes.months;\r\n    }\r\n\r\n    ret = new Duration(duration);\r\n\r\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\r\n        ret._locale = input._locale;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\ncreateDuration.fn = Duration.prototype;\r\ncreateDuration.invalid = createInvalid$1;\r\n\r\nfunction parseIso (inp, sign) {\r\n    // We'd normally use ~~inp for this, but unfortunately it also\r\n    // converts floats to ints.\r\n    // inp may be undefined, so careful calling replace on it.\r\n    var res = inp && parseFloat(inp.replace(',', '.'));\r\n    // apply sign while we're at it\r\n    return (isNaN(res) ? 0 : res) * sign;\r\n}\r\n\r\nfunction positiveMomentsDifference(base, other) {\r\n    var res = {milliseconds: 0, months: 0};\r\n\r\n    res.months = other.month() - base.month() +\r\n        (other.year() - base.year()) * 12;\r\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\r\n        --res.months;\r\n    }\r\n\r\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\r\n\r\n    return res;\r\n}\r\n\r\nfunction momentsDifference(base, other) {\r\n    var res;\r\n    if (!(base.isValid() && other.isValid())) {\r\n        return {milliseconds: 0, months: 0};\r\n    }\r\n\r\n    other = cloneWithOffset(other, base);\r\n    if (base.isBefore(other)) {\r\n        res = positiveMomentsDifference(base, other);\r\n    } else {\r\n        res = positiveMomentsDifference(other, base);\r\n        res.milliseconds = -res.milliseconds;\r\n        res.months = -res.months;\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n// TODO: remove 'name' arg after deprecation is removed\r\nfunction createAdder(direction, name) {\r\n    return function (val, period) {\r\n        var dur, tmp;\r\n        //invert the arguments, but complain about it\r\n        if (period !== null && !isNaN(+period)) {\r\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\r\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\r\n            tmp = val; val = period; period = tmp;\r\n        }\r\n\r\n        val = typeof val === 'string' ? +val : val;\r\n        dur = createDuration(val, period);\r\n        addSubtract(this, dur, direction);\r\n        return this;\r\n    };\r\n}\r\n\r\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\r\n    var milliseconds = duration._milliseconds,\r\n        days = absRound(duration._days),\r\n        months = absRound(duration._months);\r\n\r\n    if (!mom.isValid()) {\r\n        // No op\r\n        return;\r\n    }\r\n\r\n    updateOffset = updateOffset == null ? true : updateOffset;\r\n\r\n    if (milliseconds) {\r\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\r\n    }\r\n    if (days) {\r\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\r\n    }\r\n    if (months) {\r\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\r\n    }\r\n    if (updateOffset) {\r\n        hooks.updateOffset(mom, days || months);\r\n    }\r\n}\r\n\r\nvar add      = createAdder(1, 'add');\r\nvar subtract = createAdder(-1, 'subtract');\r\n\r\nfunction getCalendarFormat(myMoment, now) {\r\n    var diff = myMoment.diff(now, 'days', true);\r\n    return diff < -6 ? 'sameElse' :\r\n            diff < -1 ? 'lastWeek' :\r\n            diff < 0 ? 'lastDay' :\r\n            diff < 1 ? 'sameDay' :\r\n            diff < 2 ? 'nextDay' :\r\n            diff < 7 ? 'nextWeek' : 'sameElse';\r\n}\r\n\r\nfunction calendar$1 (time, formats) {\r\n    // We want to compare the start of today, vs this.\r\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\r\n    var now = time || createLocal(),\r\n        sod = cloneWithOffset(now, this).startOf('day'),\r\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\r\n\r\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\r\n\r\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\r\n}\r\n\r\nfunction clone () {\r\n    return new Moment(this);\r\n}\r\n\r\nfunction isAfter (input, units) {\r\n    var localInput = isMoment(input) ? input : createLocal(input);\r\n    if (!(this.isValid() && localInput.isValid())) {\r\n        return false;\r\n    }\r\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\r\n    if (units === 'millisecond') {\r\n        return this.valueOf() > localInput.valueOf();\r\n    } else {\r\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\r\n    }\r\n}\r\n\r\nfunction isBefore (input, units) {\r\n    var localInput = isMoment(input) ? input : createLocal(input);\r\n    if (!(this.isValid() && localInput.isValid())) {\r\n        return false;\r\n    }\r\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\r\n    if (units === 'millisecond') {\r\n        return this.valueOf() < localInput.valueOf();\r\n    } else {\r\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\r\n    }\r\n}\r\n\r\nfunction isBetween (from, to, units, inclusivity) {\r\n    inclusivity = inclusivity || '()';\r\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\r\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\r\n}\r\n\r\nfunction isSame (input, units) {\r\n    var localInput = isMoment(input) ? input : createLocal(input),\r\n        inputMs;\r\n    if (!(this.isValid() && localInput.isValid())) {\r\n        return false;\r\n    }\r\n    units = normalizeUnits(units || 'millisecond');\r\n    if (units === 'millisecond') {\r\n        return this.valueOf() === localInput.valueOf();\r\n    } else {\r\n        inputMs = localInput.valueOf();\r\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\r\n    }\r\n}\r\n\r\nfunction isSameOrAfter (input, units) {\r\n    return this.isSame(input, units) || this.isAfter(input,units);\r\n}\r\n\r\nfunction isSameOrBefore (input, units) {\r\n    return this.isSame(input, units) || this.isBefore(input,units);\r\n}\r\n\r\nfunction diff (input, units, asFloat) {\r\n    var that,\r\n        zoneDelta,\r\n        delta, output;\r\n\r\n    if (!this.isValid()) {\r\n        return NaN;\r\n    }\r\n\r\n    that = cloneWithOffset(input, this);\r\n\r\n    if (!that.isValid()) {\r\n        return NaN;\r\n    }\r\n\r\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\r\n\r\n    units = normalizeUnits(units);\r\n\r\n    if (units === 'year' || units === 'month' || units === 'quarter') {\r\n        output = monthDiff(this, that);\r\n        if (units === 'quarter') {\r\n            output = output / 3;\r\n        } else if (units === 'year') {\r\n            output = output / 12;\r\n        }\r\n    } else {\r\n        delta = this - that;\r\n        output = units === 'second' ? delta / 1e3 : // 1000\r\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\r\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\r\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\r\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\r\n            delta;\r\n    }\r\n    return asFloat ? output : absFloor(output);\r\n}\r\n\r\nfunction monthDiff (a, b) {\r\n    // difference in months\r\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\r\n        // b is in (anchor - 1 month, anchor + 1 month)\r\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\r\n        anchor2, adjust;\r\n\r\n    if (b - anchor < 0) {\r\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\r\n        // linear across the month\r\n        adjust = (b - anchor) / (anchor - anchor2);\r\n    } else {\r\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\r\n        // linear across the month\r\n        adjust = (b - anchor) / (anchor2 - anchor);\r\n    }\r\n\r\n    //check for negative zero, return zero if negative zero\r\n    return -(wholeMonthDiff + adjust) || 0;\r\n}\r\n\r\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\r\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\r\n\r\nfunction toString () {\r\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\r\n}\r\n\r\nfunction toISOString() {\r\n    if (!this.isValid()) {\r\n        return null;\r\n    }\r\n    var m = this.clone().utc();\r\n    if (m.year() < 0 || m.year() > 9999) {\r\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\r\n    }\r\n    if (isFunction(Date.prototype.toISOString)) {\r\n        // native implementation is ~50x faster, use it when we can\r\n        return this.toDate().toISOString();\r\n    }\r\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\r\n}\r\n\r\n/**\r\n * Return a human readable representation of a moment that can\r\n * also be evaluated to get a new moment which is the same\r\n *\r\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\r\n */\r\nfunction inspect () {\r\n    if (!this.isValid()) {\r\n        return 'moment.invalid(/* ' + this._i + ' */)';\r\n    }\r\n    var func = 'moment';\r\n    var zone = '';\r\n    if (!this.isLocal()) {\r\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\r\n        zone = 'Z';\r\n    }\r\n    var prefix = '[' + func + '(\"]';\r\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\r\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\r\n    var suffix = zone + '[\")]';\r\n\r\n    return this.format(prefix + year + datetime + suffix);\r\n}\r\n\r\nfunction format (inputString) {\r\n    if (!inputString) {\r\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\r\n    }\r\n    var output = formatMoment(this, inputString);\r\n    return this.localeData().postformat(output);\r\n}\r\n\r\nfunction from (time, withoutSuffix) {\r\n    if (this.isValid() &&\r\n            ((isMoment(time) && time.isValid()) ||\r\n             createLocal(time).isValid())) {\r\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\r\n    } else {\r\n        return this.localeData().invalidDate();\r\n    }\r\n}\r\n\r\nfunction fromNow (withoutSuffix) {\r\n    return this.from(createLocal(), withoutSuffix);\r\n}\r\n\r\nfunction to (time, withoutSuffix) {\r\n    if (this.isValid() &&\r\n            ((isMoment(time) && time.isValid()) ||\r\n             createLocal(time).isValid())) {\r\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\r\n    } else {\r\n        return this.localeData().invalidDate();\r\n    }\r\n}\r\n\r\nfunction toNow (withoutSuffix) {\r\n    return this.to(createLocal(), withoutSuffix);\r\n}\r\n\r\n// If passed a locale key, it will set the locale for this\r\n// instance.  Otherwise, it will return the locale configuration\r\n// variables for this instance.\r\nfunction locale (key) {\r\n    var newLocaleData;\r\n\r\n    if (key === undefined) {\r\n        return this._locale._abbr;\r\n    } else {\r\n        newLocaleData = getLocale(key);\r\n        if (newLocaleData != null) {\r\n            this._locale = newLocaleData;\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\nvar lang = deprecate(\r\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\r\n    function (key) {\r\n        if (key === undefined) {\r\n            return this.localeData();\r\n        } else {\r\n            return this.locale(key);\r\n        }\r\n    }\r\n);\r\n\r\nfunction localeData () {\r\n    return this._locale;\r\n}\r\n\r\nfunction startOf (units) {\r\n    units = normalizeUnits(units);\r\n    // the following switch intentionally omits break keywords\r\n    // to utilize falling through the cases.\r\n    switch (units) {\r\n        case 'year':\r\n            this.month(0);\r\n            /* falls through */\r\n        case 'quarter':\r\n        case 'month':\r\n            this.date(1);\r\n            /* falls through */\r\n        case 'week':\r\n        case 'isoWeek':\r\n        case 'day':\r\n        case 'date':\r\n            this.hours(0);\r\n            /* falls through */\r\n        case 'hour':\r\n            this.minutes(0);\r\n            /* falls through */\r\n        case 'minute':\r\n            this.seconds(0);\r\n            /* falls through */\r\n        case 'second':\r\n            this.milliseconds(0);\r\n    }\r\n\r\n    // weeks are a special case\r\n    if (units === 'week') {\r\n        this.weekday(0);\r\n    }\r\n    if (units === 'isoWeek') {\r\n        this.isoWeekday(1);\r\n    }\r\n\r\n    // quarters are also special\r\n    if (units === 'quarter') {\r\n        this.month(Math.floor(this.month() / 3) * 3);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction endOf (units) {\r\n    units = normalizeUnits(units);\r\n    if (units === undefined || units === 'millisecond') {\r\n        return this;\r\n    }\r\n\r\n    // 'date' is an alias for 'day', so it should be considered as such.\r\n    if (units === 'date') {\r\n        units = 'day';\r\n    }\r\n\r\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\r\n}\r\n\r\nfunction valueOf () {\r\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\r\n}\r\n\r\nfunction unix () {\r\n    return Math.floor(this.valueOf() / 1000);\r\n}\r\n\r\nfunction toDate () {\r\n    return new Date(this.valueOf());\r\n}\r\n\r\nfunction toArray () {\r\n    var m = this;\r\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\r\n}\r\n\r\nfunction toObject () {\r\n    var m = this;\r\n    return {\r\n        years: m.year(),\r\n        months: m.month(),\r\n        date: m.date(),\r\n        hours: m.hours(),\r\n        minutes: m.minutes(),\r\n        seconds: m.seconds(),\r\n        milliseconds: m.milliseconds()\r\n    };\r\n}\r\n\r\nfunction toJSON () {\r\n    // new Date(NaN).toJSON() === null\r\n    return this.isValid() ? this.toISOString() : null;\r\n}\r\n\r\nfunction isValid$2 () {\r\n    return isValid(this);\r\n}\r\n\r\nfunction parsingFlags () {\r\n    return extend({}, getParsingFlags(this));\r\n}\r\n\r\nfunction invalidAt () {\r\n    return getParsingFlags(this).overflow;\r\n}\r\n\r\nfunction creationData() {\r\n    return {\r\n        input: this._i,\r\n        format: this._f,\r\n        locale: this._locale,\r\n        isUTC: this._isUTC,\r\n        strict: this._strict\r\n    };\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken(0, ['gg', 2], 0, function () {\r\n    return this.weekYear() % 100;\r\n});\r\n\r\naddFormatToken(0, ['GG', 2], 0, function () {\r\n    return this.isoWeekYear() % 100;\r\n});\r\n\r\nfunction addWeekYearFormatToken (token, getter) {\r\n    addFormatToken(0, [token, token.length], 0, getter);\r\n}\r\n\r\naddWeekYearFormatToken('gggg',     'weekYear');\r\naddWeekYearFormatToken('ggggg',    'weekYear');\r\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\r\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('weekYear', 'gg');\r\naddUnitAlias('isoWeekYear', 'GG');\r\n\r\n// PRIORITY\r\n\r\naddUnitPriority('weekYear', 1);\r\naddUnitPriority('isoWeekYear', 1);\r\n\r\n\r\n// PARSING\r\n\r\naddRegexToken('G',      matchSigned);\r\naddRegexToken('g',      matchSigned);\r\naddRegexToken('GG',     match1to2, match2);\r\naddRegexToken('gg',     match1to2, match2);\r\naddRegexToken('GGGG',   match1to4, match4);\r\naddRegexToken('gggg',   match1to4, match4);\r\naddRegexToken('GGGGG',  match1to6, match6);\r\naddRegexToken('ggggg',  match1to6, match6);\r\n\r\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\r\n    week[token.substr(0, 2)] = toInt(input);\r\n});\r\n\r\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\r\n    week[token] = hooks.parseTwoDigitYear(input);\r\n});\r\n\r\n// MOMENTS\r\n\r\nfunction getSetWeekYear (input) {\r\n    return getSetWeekYearHelper.call(this,\r\n            input,\r\n            this.week(),\r\n            this.weekday(),\r\n            this.localeData()._week.dow,\r\n            this.localeData()._week.doy);\r\n}\r\n\r\nfunction getSetISOWeekYear (input) {\r\n    return getSetWeekYearHelper.call(this,\r\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\r\n}\r\n\r\nfunction getISOWeeksInYear () {\r\n    return weeksInYear(this.year(), 1, 4);\r\n}\r\n\r\nfunction getWeeksInYear () {\r\n    var weekInfo = this.localeData()._week;\r\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\r\n}\r\n\r\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\r\n    var weeksTarget;\r\n    if (input == null) {\r\n        return weekOfYear(this, dow, doy).year;\r\n    } else {\r\n        weeksTarget = weeksInYear(input, dow, doy);\r\n        if (week > weeksTarget) {\r\n            week = weeksTarget;\r\n        }\r\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\r\n    }\r\n}\r\n\r\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\r\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\r\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\r\n\r\n    this.year(date.getUTCFullYear());\r\n    this.month(date.getUTCMonth());\r\n    this.date(date.getUTCDate());\r\n    return this;\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('Q', 0, 'Qo', 'quarter');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('quarter', 'Q');\r\n\r\n// PRIORITY\r\n\r\naddUnitPriority('quarter', 7);\r\n\r\n// PARSING\r\n\r\naddRegexToken('Q', match1);\r\naddParseToken('Q', function (input, array) {\r\n    array[MONTH] = (toInt(input) - 1) * 3;\r\n});\r\n\r\n// MOMENTS\r\n\r\nfunction getSetQuarter (input) {\r\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('D', ['DD', 2], 'Do', 'date');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('date', 'D');\r\n\r\n// PRIOROITY\r\naddUnitPriority('date', 9);\r\n\r\n// PARSING\r\n\r\naddRegexToken('D',  match1to2);\r\naddRegexToken('DD', match1to2, match2);\r\naddRegexToken('Do', function (isStrict, locale) {\r\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\r\n    return isStrict ?\r\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\r\n      locale._dayOfMonthOrdinalParseLenient;\r\n});\r\n\r\naddParseToken(['D', 'DD'], DATE);\r\naddParseToken('Do', function (input, array) {\r\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\r\n});\r\n\r\n// MOMENTS\r\n\r\nvar getSetDayOfMonth = makeGetSet('Date', true);\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('dayOfYear', 'DDD');\r\n\r\n// PRIORITY\r\naddUnitPriority('dayOfYear', 4);\r\n\r\n// PARSING\r\n\r\naddRegexToken('DDD',  match1to3);\r\naddRegexToken('DDDD', match3);\r\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\r\n    config._dayOfYear = toInt(input);\r\n});\r\n\r\n// HELPERS\r\n\r\n// MOMENTS\r\n\r\nfunction getSetDayOfYear (input) {\r\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\r\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\r\n}\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('m', ['mm', 2], 0, 'minute');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('minute', 'm');\r\n\r\n// PRIORITY\r\n\r\naddUnitPriority('minute', 14);\r\n\r\n// PARSING\r\n\r\naddRegexToken('m',  match1to2);\r\naddRegexToken('mm', match1to2, match2);\r\naddParseToken(['m', 'mm'], MINUTE);\r\n\r\n// MOMENTS\r\n\r\nvar getSetMinute = makeGetSet('Minutes', false);\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('s', ['ss', 2], 0, 'second');\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('second', 's');\r\n\r\n// PRIORITY\r\n\r\naddUnitPriority('second', 15);\r\n\r\n// PARSING\r\n\r\naddRegexToken('s',  match1to2);\r\naddRegexToken('ss', match1to2, match2);\r\naddParseToken(['s', 'ss'], SECOND);\r\n\r\n// MOMENTS\r\n\r\nvar getSetSecond = makeGetSet('Seconds', false);\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('S', 0, 0, function () {\r\n    return ~~(this.millisecond() / 100);\r\n});\r\n\r\naddFormatToken(0, ['SS', 2], 0, function () {\r\n    return ~~(this.millisecond() / 10);\r\n});\r\n\r\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\r\naddFormatToken(0, ['SSSS', 4], 0, function () {\r\n    return this.millisecond() * 10;\r\n});\r\naddFormatToken(0, ['SSSSS', 5], 0, function () {\r\n    return this.millisecond() * 100;\r\n});\r\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\r\n    return this.millisecond() * 1000;\r\n});\r\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\r\n    return this.millisecond() * 10000;\r\n});\r\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\r\n    return this.millisecond() * 100000;\r\n});\r\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\r\n    return this.millisecond() * 1000000;\r\n});\r\n\r\n\r\n// ALIASES\r\n\r\naddUnitAlias('millisecond', 'ms');\r\n\r\n// PRIORITY\r\n\r\naddUnitPriority('millisecond', 16);\r\n\r\n// PARSING\r\n\r\naddRegexToken('S',    match1to3, match1);\r\naddRegexToken('SS',   match1to3, match2);\r\naddRegexToken('SSS',  match1to3, match3);\r\n\r\nvar token;\r\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\r\n    addRegexToken(token, matchUnsigned);\r\n}\r\n\r\nfunction parseMs(input, array) {\r\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\r\n}\r\n\r\nfor (token = 'S'; token.length <= 9; token += 'S') {\r\n    addParseToken(token, parseMs);\r\n}\r\n// MOMENTS\r\n\r\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('z',  0, 0, 'zoneAbbr');\r\naddFormatToken('zz', 0, 0, 'zoneName');\r\n\r\n// MOMENTS\r\n\r\nfunction getZoneAbbr () {\r\n    return this._isUTC ? 'UTC' : '';\r\n}\r\n\r\nfunction getZoneName () {\r\n    return this._isUTC ? 'Coordinated Universal Time' : '';\r\n}\r\n\r\nvar proto = Moment.prototype;\r\n\r\nproto.add               = add;\r\nproto.calendar          = calendar$1;\r\nproto.clone             = clone;\r\nproto.diff              = diff;\r\nproto.endOf             = endOf;\r\nproto.format            = format;\r\nproto.from              = from;\r\nproto.fromNow           = fromNow;\r\nproto.to                = to;\r\nproto.toNow             = toNow;\r\nproto.get               = stringGet;\r\nproto.invalidAt         = invalidAt;\r\nproto.isAfter           = isAfter;\r\nproto.isBefore          = isBefore;\r\nproto.isBetween         = isBetween;\r\nproto.isSame            = isSame;\r\nproto.isSameOrAfter     = isSameOrAfter;\r\nproto.isSameOrBefore    = isSameOrBefore;\r\nproto.isValid           = isValid$2;\r\nproto.lang              = lang;\r\nproto.locale            = locale;\r\nproto.localeData        = localeData;\r\nproto.max               = prototypeMax;\r\nproto.min               = prototypeMin;\r\nproto.parsingFlags      = parsingFlags;\r\nproto.set               = stringSet;\r\nproto.startOf           = startOf;\r\nproto.subtract          = subtract;\r\nproto.toArray           = toArray;\r\nproto.toObject          = toObject;\r\nproto.toDate            = toDate;\r\nproto.toISOString       = toISOString;\r\nproto.inspect           = inspect;\r\nproto.toJSON            = toJSON;\r\nproto.toString          = toString;\r\nproto.unix              = unix;\r\nproto.valueOf           = valueOf;\r\nproto.creationData      = creationData;\r\n\r\n// Year\r\nproto.year       = getSetYear;\r\nproto.isLeapYear = getIsLeapYear;\r\n\r\n// Week Year\r\nproto.weekYear    = getSetWeekYear;\r\nproto.isoWeekYear = getSetISOWeekYear;\r\n\r\n// Quarter\r\nproto.quarter = proto.quarters = getSetQuarter;\r\n\r\n// Month\r\nproto.month       = getSetMonth;\r\nproto.daysInMonth = getDaysInMonth;\r\n\r\n// Week\r\nproto.week           = proto.weeks        = getSetWeek;\r\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\r\nproto.weeksInYear    = getWeeksInYear;\r\nproto.isoWeeksInYear = getISOWeeksInYear;\r\n\r\n// Day\r\nproto.date       = getSetDayOfMonth;\r\nproto.day        = proto.days             = getSetDayOfWeek;\r\nproto.weekday    = getSetLocaleDayOfWeek;\r\nproto.isoWeekday = getSetISODayOfWeek;\r\nproto.dayOfYear  = getSetDayOfYear;\r\n\r\n// Hour\r\nproto.hour = proto.hours = getSetHour;\r\n\r\n// Minute\r\nproto.minute = proto.minutes = getSetMinute;\r\n\r\n// Second\r\nproto.second = proto.seconds = getSetSecond;\r\n\r\n// Millisecond\r\nproto.millisecond = proto.milliseconds = getSetMillisecond;\r\n\r\n// Offset\r\nproto.utcOffset            = getSetOffset;\r\nproto.utc                  = setOffsetToUTC;\r\nproto.local                = setOffsetToLocal;\r\nproto.parseZone            = setOffsetToParsedOffset;\r\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\r\nproto.isDST                = isDaylightSavingTime;\r\nproto.isLocal              = isLocal;\r\nproto.isUtcOffset          = isUtcOffset;\r\nproto.isUtc                = isUtc;\r\nproto.isUTC                = isUtc;\r\n\r\n// Timezone\r\nproto.zoneAbbr = getZoneAbbr;\r\nproto.zoneName = getZoneName;\r\n\r\n// Deprecations\r\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\r\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\r\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\r\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\r\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\r\n\r\nfunction createUnix (input) {\r\n    return createLocal(input * 1000);\r\n}\r\n\r\nfunction createInZone () {\r\n    return createLocal.apply(null, arguments).parseZone();\r\n}\r\n\r\nfunction preParsePostFormat (string) {\r\n    return string;\r\n}\r\n\r\nvar proto$1 = Locale.prototype;\r\n\r\nproto$1.calendar        = calendar;\r\nproto$1.longDateFormat  = longDateFormat;\r\nproto$1.invalidDate     = invalidDate;\r\nproto$1.ordinal         = ordinal;\r\nproto$1.preparse        = preParsePostFormat;\r\nproto$1.postformat      = preParsePostFormat;\r\nproto$1.relativeTime    = relativeTime;\r\nproto$1.pastFuture      = pastFuture;\r\nproto$1.set             = set;\r\n\r\n// Month\r\nproto$1.months            =        localeMonths;\r\nproto$1.monthsShort       =        localeMonthsShort;\r\nproto$1.monthsParse       =        localeMonthsParse;\r\nproto$1.monthsRegex       = monthsRegex;\r\nproto$1.monthsShortRegex  = monthsShortRegex;\r\n\r\n// Week\r\nproto$1.week = localeWeek;\r\nproto$1.firstDayOfYear = localeFirstDayOfYear;\r\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\r\n\r\n// Day of Week\r\nproto$1.weekdays       =        localeWeekdays;\r\nproto$1.weekdaysMin    =        localeWeekdaysMin;\r\nproto$1.weekdaysShort  =        localeWeekdaysShort;\r\nproto$1.weekdaysParse  =        localeWeekdaysParse;\r\n\r\nproto$1.weekdaysRegex       =        weekdaysRegex;\r\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\r\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\r\n\r\n// Hours\r\nproto$1.isPM = localeIsPM;\r\nproto$1.meridiem = localeMeridiem;\r\n\r\nfunction get$1 (format, index, field, setter) {\r\n    var locale = getLocale();\r\n    var utc = createUTC().set(setter, index);\r\n    return locale[field](utc, format);\r\n}\r\n\r\nfunction listMonthsImpl (format, index, field) {\r\n    if (isNumber(format)) {\r\n        index = format;\r\n        format = undefined;\r\n    }\r\n\r\n    format = format || '';\r\n\r\n    if (index != null) {\r\n        return get$1(format, index, field, 'month');\r\n    }\r\n\r\n    var i;\r\n    var out = [];\r\n    for (i = 0; i < 12; i++) {\r\n        out[i] = get$1(format, i, field, 'month');\r\n    }\r\n    return out;\r\n}\r\n\r\n// ()\r\n// (5)\r\n// (fmt, 5)\r\n// (fmt)\r\n// (true)\r\n// (true, 5)\r\n// (true, fmt, 5)\r\n// (true, fmt)\r\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\r\n    if (typeof localeSorted === 'boolean') {\r\n        if (isNumber(format)) {\r\n            index = format;\r\n            format = undefined;\r\n        }\r\n\r\n        format = format || '';\r\n    } else {\r\n        format = localeSorted;\r\n        index = format;\r\n        localeSorted = false;\r\n\r\n        if (isNumber(format)) {\r\n            index = format;\r\n            format = undefined;\r\n        }\r\n\r\n        format = format || '';\r\n    }\r\n\r\n    var locale = getLocale(),\r\n        shift = localeSorted ? locale._week.dow : 0;\r\n\r\n    if (index != null) {\r\n        return get$1(format, (index + shift) % 7, field, 'day');\r\n    }\r\n\r\n    var i;\r\n    var out = [];\r\n    for (i = 0; i < 7; i++) {\r\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\r\n    }\r\n    return out;\r\n}\r\n\r\nfunction listMonths (format, index) {\r\n    return listMonthsImpl(format, index, 'months');\r\n}\r\n\r\nfunction listMonthsShort (format, index) {\r\n    return listMonthsImpl(format, index, 'monthsShort');\r\n}\r\n\r\nfunction listWeekdays (localeSorted, format, index) {\r\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\r\n}\r\n\r\nfunction listWeekdaysShort (localeSorted, format, index) {\r\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\r\n}\r\n\r\nfunction listWeekdaysMin (localeSorted, format, index) {\r\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\r\n}\r\n\r\ngetSetGlobalLocale('en', {\r\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\r\n    ordinal : function (number) {\r\n        var b = number % 10,\r\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\r\n            (b === 1) ? 'st' :\r\n            (b === 2) ? 'nd' :\r\n            (b === 3) ? 'rd' : 'th';\r\n        return number + output;\r\n    }\r\n});\r\n\r\n// Side effect imports\r\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\r\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\r\n\r\nvar mathAbs = Math.abs;\r\n\r\nfunction abs () {\r\n    var data           = this._data;\r\n\r\n    this._milliseconds = mathAbs(this._milliseconds);\r\n    this._days         = mathAbs(this._days);\r\n    this._months       = mathAbs(this._months);\r\n\r\n    data.milliseconds  = mathAbs(data.milliseconds);\r\n    data.seconds       = mathAbs(data.seconds);\r\n    data.minutes       = mathAbs(data.minutes);\r\n    data.hours         = mathAbs(data.hours);\r\n    data.months        = mathAbs(data.months);\r\n    data.years         = mathAbs(data.years);\r\n\r\n    return this;\r\n}\r\n\r\nfunction addSubtract$1 (duration, input, value, direction) {\r\n    var other = createDuration(input, value);\r\n\r\n    duration._milliseconds += direction * other._milliseconds;\r\n    duration._days         += direction * other._days;\r\n    duration._months       += direction * other._months;\r\n\r\n    return duration._bubble();\r\n}\r\n\r\n// supports only 2.0-style add(1, 's') or add(duration)\r\nfunction add$1 (input, value) {\r\n    return addSubtract$1(this, input, value, 1);\r\n}\r\n\r\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\r\nfunction subtract$1 (input, value) {\r\n    return addSubtract$1(this, input, value, -1);\r\n}\r\n\r\nfunction absCeil (number) {\r\n    if (number < 0) {\r\n        return Math.floor(number);\r\n    } else {\r\n        return Math.ceil(number);\r\n    }\r\n}\r\n\r\nfunction bubble () {\r\n    var milliseconds = this._milliseconds;\r\n    var days         = this._days;\r\n    var months       = this._months;\r\n    var data         = this._data;\r\n    var seconds, minutes, hours, years, monthsFromDays;\r\n\r\n    // if we have a mix of positive and negative values, bubble down first\r\n    // check: https://github.com/moment/moment/issues/2166\r\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\r\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\r\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\r\n        days = 0;\r\n        months = 0;\r\n    }\r\n\r\n    // The following code bubbles up values, see the tests for\r\n    // examples of what that means.\r\n    data.milliseconds = milliseconds % 1000;\r\n\r\n    seconds           = absFloor(milliseconds / 1000);\r\n    data.seconds      = seconds % 60;\r\n\r\n    minutes           = absFloor(seconds / 60);\r\n    data.minutes      = minutes % 60;\r\n\r\n    hours             = absFloor(minutes / 60);\r\n    data.hours        = hours % 24;\r\n\r\n    days += absFloor(hours / 24);\r\n\r\n    // convert days to months\r\n    monthsFromDays = absFloor(daysToMonths(days));\r\n    months += monthsFromDays;\r\n    days -= absCeil(monthsToDays(monthsFromDays));\r\n\r\n    // 12 months -> 1 year\r\n    years = absFloor(months / 12);\r\n    months %= 12;\r\n\r\n    data.days   = days;\r\n    data.months = months;\r\n    data.years  = years;\r\n\r\n    return this;\r\n}\r\n\r\nfunction daysToMonths (days) {\r\n    // 400 years have 146097 days (taking into account leap year rules)\r\n    // 400 years have 12 months === 4800\r\n    return days * 4800 / 146097;\r\n}\r\n\r\nfunction monthsToDays (months) {\r\n    // the reverse of daysToMonths\r\n    return months * 146097 / 4800;\r\n}\r\n\r\nfunction as (units) {\r\n    if (!this.isValid()) {\r\n        return NaN;\r\n    }\r\n    var days;\r\n    var months;\r\n    var milliseconds = this._milliseconds;\r\n\r\n    units = normalizeUnits(units);\r\n\r\n    if (units === 'month' || units === 'year') {\r\n        days   = this._days   + milliseconds / 864e5;\r\n        months = this._months + daysToMonths(days);\r\n        return units === 'month' ? months : months / 12;\r\n    } else {\r\n        // handle milliseconds separately because of floating point math errors (issue #1867)\r\n        days = this._days + Math.round(monthsToDays(this._months));\r\n        switch (units) {\r\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\r\n            case 'day'    : return days         + milliseconds / 864e5;\r\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\r\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\r\n            case 'second' : return days * 86400 + milliseconds / 1000;\r\n            // Math.floor prevents floating point math errors here\r\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\r\n            default: throw new Error('Unknown unit ' + units);\r\n        }\r\n    }\r\n}\r\n\r\n// TODO: Use this.as('ms')?\r\nfunction valueOf$1 () {\r\n    if (!this.isValid()) {\r\n        return NaN;\r\n    }\r\n    return (\r\n        this._milliseconds +\r\n        this._days * 864e5 +\r\n        (this._months % 12) * 2592e6 +\r\n        toInt(this._months / 12) * 31536e6\r\n    );\r\n}\r\n\r\nfunction makeAs (alias) {\r\n    return function () {\r\n        return this.as(alias);\r\n    };\r\n}\r\n\r\nvar asMilliseconds = makeAs('ms');\r\nvar asSeconds      = makeAs('s');\r\nvar asMinutes      = makeAs('m');\r\nvar asHours        = makeAs('h');\r\nvar asDays         = makeAs('d');\r\nvar asWeeks        = makeAs('w');\r\nvar asMonths       = makeAs('M');\r\nvar asYears        = makeAs('y');\r\n\r\nfunction get$2 (units) {\r\n    units = normalizeUnits(units);\r\n    return this.isValid() ? this[units + 's']() : NaN;\r\n}\r\n\r\nfunction makeGetter(name) {\r\n    return function () {\r\n        return this.isValid() ? this._data[name] : NaN;\r\n    };\r\n}\r\n\r\nvar milliseconds = makeGetter('milliseconds');\r\nvar seconds      = makeGetter('seconds');\r\nvar minutes      = makeGetter('minutes');\r\nvar hours        = makeGetter('hours');\r\nvar days         = makeGetter('days');\r\nvar months       = makeGetter('months');\r\nvar years        = makeGetter('years');\r\n\r\nfunction weeks () {\r\n    return absFloor(this.days() / 7);\r\n}\r\n\r\nvar round = Math.round;\r\nvar thresholds = {\r\n    ss: 44,         // a few seconds to seconds\r\n    s : 45,         // seconds to minute\r\n    m : 45,         // minutes to hour\r\n    h : 22,         // hours to day\r\n    d : 26,         // days to month\r\n    M : 11          // months to year\r\n};\r\n\r\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\r\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\r\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\r\n}\r\n\r\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\r\n    var duration = createDuration(posNegDuration).abs();\r\n    var seconds  = round(duration.as('s'));\r\n    var minutes  = round(duration.as('m'));\r\n    var hours    = round(duration.as('h'));\r\n    var days     = round(duration.as('d'));\r\n    var months   = round(duration.as('M'));\r\n    var years    = round(duration.as('y'));\r\n\r\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\r\n            seconds < thresholds.s   && ['ss', seconds] ||\r\n            minutes <= 1             && ['m']           ||\r\n            minutes < thresholds.m   && ['mm', minutes] ||\r\n            hours   <= 1             && ['h']           ||\r\n            hours   < thresholds.h   && ['hh', hours]   ||\r\n            days    <= 1             && ['d']           ||\r\n            days    < thresholds.d   && ['dd', days]    ||\r\n            months  <= 1             && ['M']           ||\r\n            months  < thresholds.M   && ['MM', months]  ||\r\n            years   <= 1             && ['y']           || ['yy', years];\r\n\r\n    a[2] = withoutSuffix;\r\n    a[3] = +posNegDuration > 0;\r\n    a[4] = locale;\r\n    return substituteTimeAgo.apply(null, a);\r\n}\r\n\r\n// This function allows you to set the rounding function for relative time strings\r\nfunction getSetRelativeTimeRounding (roundingFunction) {\r\n    if (roundingFunction === undefined) {\r\n        return round;\r\n    }\r\n    if (typeof(roundingFunction) === 'function') {\r\n        round = roundingFunction;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// This function allows you to set a threshold for relative time strings\r\nfunction getSetRelativeTimeThreshold (threshold, limit) {\r\n    if (thresholds[threshold] === undefined) {\r\n        return false;\r\n    }\r\n    if (limit === undefined) {\r\n        return thresholds[threshold];\r\n    }\r\n    thresholds[threshold] = limit;\r\n    if (threshold === 's') {\r\n        thresholds.ss = limit - 1;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction humanize (withSuffix) {\r\n    if (!this.isValid()) {\r\n        return this.localeData().invalidDate();\r\n    }\r\n\r\n    var locale = this.localeData();\r\n    var output = relativeTime$1(this, !withSuffix, locale);\r\n\r\n    if (withSuffix) {\r\n        output = locale.pastFuture(+this, output);\r\n    }\r\n\r\n    return locale.postformat(output);\r\n}\r\n\r\nvar abs$1 = Math.abs;\r\n\r\nfunction toISOString$1() {\r\n    // for ISO strings we do not use the normal bubbling rules:\r\n    //  * milliseconds bubble up until they become hours\r\n    //  * days do not bubble at all\r\n    //  * months bubble up until they become years\r\n    // This is because there is no context-free conversion between hours and days\r\n    // (think of clock changes)\r\n    // and also not between days and months (28-31 days per month)\r\n    if (!this.isValid()) {\r\n        return this.localeData().invalidDate();\r\n    }\r\n\r\n    var seconds = abs$1(this._milliseconds) / 1000;\r\n    var days         = abs$1(this._days);\r\n    var months       = abs$1(this._months);\r\n    var minutes, hours, years;\r\n\r\n    // 3600 seconds -> 60 minutes -> 1 hour\r\n    minutes           = absFloor(seconds / 60);\r\n    hours             = absFloor(minutes / 60);\r\n    seconds %= 60;\r\n    minutes %= 60;\r\n\r\n    // 12 months -> 1 year\r\n    years  = absFloor(months / 12);\r\n    months %= 12;\r\n\r\n\r\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\r\n    var Y = years;\r\n    var M = months;\r\n    var D = days;\r\n    var h = hours;\r\n    var m = minutes;\r\n    var s = seconds;\r\n    var total = this.asSeconds();\r\n\r\n    if (!total) {\r\n        // this is the same as C#'s (Noda) and python (isodate)...\r\n        // but not other JS (goog.date)\r\n        return 'P0D';\r\n    }\r\n\r\n    return (total < 0 ? '-' : '') +\r\n        'P' +\r\n        (Y ? Y + 'Y' : '') +\r\n        (M ? M + 'M' : '') +\r\n        (D ? D + 'D' : '') +\r\n        ((h || m || s) ? 'T' : '') +\r\n        (h ? h + 'H' : '') +\r\n        (m ? m + 'M' : '') +\r\n        (s ? s + 'S' : '');\r\n}\r\n\r\nvar proto$2 = Duration.prototype;\r\n\r\nproto$2.isValid        = isValid$1;\r\nproto$2.abs            = abs;\r\nproto$2.add            = add$1;\r\nproto$2.subtract       = subtract$1;\r\nproto$2.as             = as;\r\nproto$2.asMilliseconds = asMilliseconds;\r\nproto$2.asSeconds      = asSeconds;\r\nproto$2.asMinutes      = asMinutes;\r\nproto$2.asHours        = asHours;\r\nproto$2.asDays         = asDays;\r\nproto$2.asWeeks        = asWeeks;\r\nproto$2.asMonths       = asMonths;\r\nproto$2.asYears        = asYears;\r\nproto$2.valueOf        = valueOf$1;\r\nproto$2._bubble        = bubble;\r\nproto$2.get            = get$2;\r\nproto$2.milliseconds   = milliseconds;\r\nproto$2.seconds        = seconds;\r\nproto$2.minutes        = minutes;\r\nproto$2.hours          = hours;\r\nproto$2.days           = days;\r\nproto$2.weeks          = weeks;\r\nproto$2.months         = months;\r\nproto$2.years          = years;\r\nproto$2.humanize       = humanize;\r\nproto$2.toISOString    = toISOString$1;\r\nproto$2.toString       = toISOString$1;\r\nproto$2.toJSON         = toISOString$1;\r\nproto$2.locale         = locale;\r\nproto$2.localeData     = localeData;\r\n\r\n// Deprecations\r\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\r\nproto$2.lang = lang;\r\n\r\n// Side effect imports\r\n\r\n// FORMATTING\r\n\r\naddFormatToken('X', 0, 0, 'unix');\r\naddFormatToken('x', 0, 0, 'valueOf');\r\n\r\n// PARSING\r\n\r\naddRegexToken('x', matchSigned);\r\naddRegexToken('X', matchTimestamp);\r\naddParseToken('X', function (input, array, config) {\r\n    config._d = new Date(parseFloat(input, 10) * 1000);\r\n});\r\naddParseToken('x', function (input, array, config) {\r\n    config._d = new Date(toInt(input));\r\n});\r\n\r\n// Side effect imports\r\n\r\n\r\nhooks.version = '2.18.1';\r\n\r\nsetHookCallback(createLocal);\r\n\r\nhooks.fn                    = proto;\r\nhooks.min                   = min;\r\nhooks.max                   = max;\r\nhooks.now                   = now;\r\nhooks.utc                   = createUTC;\r\nhooks.unix                  = createUnix;\r\nhooks.months                = listMonths;\r\nhooks.isDate                = isDate;\r\nhooks.locale                = getSetGlobalLocale;\r\nhooks.invalid               = createInvalid;\r\nhooks.duration              = createDuration;\r\nhooks.isMoment              = isMoment;\r\nhooks.weekdays              = listWeekdays;\r\nhooks.parseZone             = createInZone;\r\nhooks.localeData            = getLocale;\r\nhooks.isDuration            = isDuration;\r\nhooks.monthsShort           = listMonthsShort;\r\nhooks.weekdaysMin           = listWeekdaysMin;\r\nhooks.defineLocale          = defineLocale;\r\nhooks.updateLocale          = updateLocale;\r\nhooks.locales               = listLocales;\r\nhooks.weekdaysShort         = listWeekdaysShort;\r\nhooks.normalizeUnits        = normalizeUnits;\r\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\r\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\r\nhooks.calendarFormat        = getCalendarFormat;\r\nhooks.prototype             = proto;\r\n\r\nreturn hooks;\r\n\r\n})));\r\n\r\n},{}],7:[function(require,module,exports){\r\n/**\r\n * @namespace Chart\r\n */\r\nvar Chart = require(28)();\r\n\r\nrequire(26)(Chart);\r\nrequire(40)(Chart);\r\nrequire(22)(Chart);\r\nrequire(25)(Chart);\r\nrequire(30)(Chart);\r\nrequire(21)(Chart);\r\nrequire(23)(Chart);\r\nrequire(24)(Chart);\r\nrequire(29)(Chart);\r\nrequire(32)(Chart);\r\nrequire(33)(Chart);\r\nrequire(31)(Chart);\r\nrequire(27)(Chart);\r\nrequire(34)(Chart);\r\n\r\nrequire(35)(Chart);\r\nrequire(36)(Chart);\r\nrequire(37)(Chart);\r\nrequire(38)(Chart);\r\n\r\nrequire(46)(Chart);\r\nrequire(44)(Chart);\r\nrequire(45)(Chart);\r\nrequire(47)(Chart);\r\nrequire(48)(Chart);\r\nrequire(49)(Chart);\r\n\r\n// Controllers must be loaded after elements\r\n// See Chart.core.datasetController.dataElementType\r\nrequire(15)(Chart);\r\nrequire(16)(Chart);\r\nrequire(17)(Chart);\r\nrequire(18)(Chart);\r\nrequire(19)(Chart);\r\nrequire(20)(Chart);\r\n\r\nrequire(8)(Chart);\r\nrequire(9)(Chart);\r\nrequire(10)(Chart);\r\nrequire(11)(Chart);\r\nrequire(12)(Chart);\r\nrequire(13)(Chart);\r\nrequire(14)(Chart);\r\n\r\n// Loading built-it plugins\r\nvar plugins = [];\r\n\r\nplugins.push(\r\n    require(41)(Chart),\r\n    require(42)(Chart),\r\n    require(43)(Chart)\r\n);\r\n\r\nChart.plugins.register(plugins);\r\n\r\nmodule.exports = Chart;\r\nif (typeof window !== 'undefined') {\r\n\twindow.Chart = Chart;\r\n}\r\n\r\n},{\"10\":10,\"11\":11,\"12\":12,\"13\":13,\"14\":14,\"15\":15,\"16\":16,\"17\":17,\"18\":18,\"19\":19,\"20\":20,\"21\":21,\"22\":22,\"23\":23,\"24\":24,\"25\":25,\"26\":26,\"27\":27,\"28\":28,\"29\":29,\"30\":30,\"31\":31,\"32\":32,\"33\":33,\"34\":34,\"35\":35,\"36\":36,\"37\":37,\"38\":38,\"40\":40,\"41\":41,\"42\":42,\"43\":43,\"44\":44,\"45\":45,\"46\":46,\"47\":47,\"48\":48,\"49\":49,\"8\":8,\"9\":9}],8:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bar = function(context, config) {\r\n\t\tconfig.type = 'bar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],9:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Bubble = function(context, config) {\r\n\t\tconfig.type = 'bubble';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],10:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Doughnut = function(context, config) {\r\n\t\tconfig.type = 'doughnut';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],11:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Line = function(context, config) {\r\n\t\tconfig.type = 'line';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],12:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.PolarArea = function(context, config) {\r\n\t\tconfig.type = 'polarArea';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],13:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tChart.Radar = function(context, config) {\r\n\t\tconfig.type = 'radar';\r\n\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],14:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar defaultConfig = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'linear', // scatter should not use a category axis\r\n\t\t\t\tposition: 'bottom',\r\n\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tposition: 'left',\r\n\t\t\t\tid: 'y-axis-1'\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem) {\r\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Register the default config for this type\r\n\tChart.defaults.scatter = defaultConfig;\r\n\r\n\t// Scatter charts use line controllers\r\n\tChart.controllers.scatter = Chart.controllers.line;\r\n\r\n\tChart.Scatter = function(context, config) {\r\n\t\tconfig.type = 'scatter';\r\n\t\treturn new Chart(context, config);\r\n\t};\r\n\r\n};\r\n\r\n},{}],15:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bar = {\r\n\t\thover: {\r\n\t\t\tmode: 'label'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'category',\r\n\r\n\t\t\t\t// Specific to Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bar = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Rectangle,\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta;\r\n\r\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n\t\t\tmeta = me.getMeta();\r\n\t\t\tmeta.stack = me.getDataset().stack;\r\n\t\t\tmeta.bar = true;\r\n\t\t},\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar elements = me.getMeta().data;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tme._ruler = me.getRuler();\r\n\r\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n\t\t\t\tme.updateElement(elements[i], i, reset);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateElement: function(rectangle, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\r\n\r\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\trectangle._datasetIndex = me.index;\r\n\t\t\trectangle._index = index;\r\n\r\n\t\t\trectangle._model = {\r\n\t\t\t\tdatasetLabel: dataset.label,\r\n\t\t\t\tlabel: chart.data.labels[index],\r\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n\t\t\t};\r\n\r\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\r\n\r\n\t\t\trectangle.pivot();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tvar vscale = me.getValueScale();\r\n\t\t\tvar base = vscale.getBasePixel();\r\n\t\t\tvar horizontal = vscale.isHorizontal();\r\n\t\t\tvar ruler = me._ruler || me.getRuler();\r\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\r\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n\t\t\tmodel.horizontal = horizontal;\r\n\t\t\tmodel.base = reset? base : vpixels.base;\r\n\t\t\tmodel.x = horizontal? reset? base : vpixels.head : ipixels.center;\r\n\t\t\tmodel.y = horizontal? ipixels.center : reset? base : vpixels.head;\r\n\t\t\tmodel.height = horizontal? ipixels.size : undefined;\r\n\t\t\tmodel.width = horizontal? undefined : ipixels.size;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetValueScaleId: function() {\r\n\t\t\treturn this.getMeta().yAxisID;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetIndexScaleId: function() {\r\n\t\t\treturn this.getMeta().xAxisID;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetValueScale: function() {\r\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetIndexScale: function() {\r\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetStackCount: function(last) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar scale = me.getIndexScale();\r\n\t\t\tvar stacked = scale.options.stacked;\r\n\t\t\tvar ilen = last === undefined? chart.data.datasets.length : last + 1;\r\n\t\t\tvar stacks = [];\r\n\t\t\tvar i, meta;\r\n\r\n\t\t\tfor (i = 0; i < ilen; ++i) {\r\n\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\r\n\t\t\t\t\t(stacked === false ||\r\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n\t\t\t\t\tstacks.push(meta.stack);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn stacks.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetStackIndex: function(datasetIndex) {\r\n\t\t\treturn this.getStackCount(datasetIndex) - 1;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetRuler: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar scale = me.getIndexScale();\r\n\t\t\tvar options = scale.options;\r\n\t\t\tvar stackCount = me.getStackCount();\r\n\t\t\tvar fullSize = scale.isHorizontal()? scale.width : scale.height;\r\n\t\t\tvar tickSize = fullSize / scale.ticks.length;\r\n\t\t\tvar categorySize = tickSize * options.categoryPercentage;\r\n\t\t\tvar fullBarSize = categorySize / stackCount;\r\n\t\t\tvar barSize = fullBarSize * options.barPercentage;\r\n\r\n\t\t\tbarSize = Math.min(\r\n\t\t\t\thelpers.getValueOrDefault(options.barThickness, barSize),\r\n\t\t\t\thelpers.getValueOrDefault(options.maxBarThickness, Infinity));\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstackCount: stackCount,\r\n\t\t\t\ttickSize: tickSize,\r\n\t\t\t\tcategorySize: categorySize,\r\n\t\t\t\tcategorySpacing: tickSize - categorySize,\r\n\t\t\t\tfullBarSize: fullBarSize,\r\n\t\t\t\tbarSize: barSize,\r\n\t\t\t\tbarSpacing: fullBarSize - barSize,\r\n\t\t\t\tscale: scale\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Note: pixel values are not clamped to the scale area.\r\n\t\t * @private\r\n\t\t */\r\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar scale = me.getValueScale();\r\n\t\t\tvar datasets = chart.data.datasets;\r\n\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\r\n\t\t\tvar stacked = scale.options.stacked;\r\n\t\t\tvar stack = meta.stack;\r\n\t\t\tvar start = 0;\r\n\t\t\tvar i, imeta, ivalue, base, head, size;\r\n\r\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\r\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\r\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\r\n\r\n\t\t\t\t\tif (imeta.bar &&\r\n\t\t\t\t\t\timeta.stack === stack &&\r\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\r\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\r\n\r\n\t\t\t\t\t\tivalue = Number(datasets[i].data[index]);\r\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n\t\t\t\t\t\t\tstart += ivalue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tbase = scale.getPixelForValue(start);\r\n\t\t\thead = scale.getPixelForValue(start + value);\r\n\t\t\tsize = (head - base) / 2;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tsize: size,\r\n\t\t\t\tbase: base,\r\n\t\t\t\thead: head,\r\n\t\t\t\tcenter: head + size / 2\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar scale = ruler.scale;\r\n\t\t\tvar isCombo = me.chart.isCombo;\r\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\r\n\t\t\tvar base = scale.getPixelForValue(null, index, datasetIndex, isCombo);\r\n\t\t\tvar size = ruler.barSize;\r\n\r\n\t\t\tbase -= isCombo? ruler.tickSize / 2 : 0;\r\n\t\t\tbase += ruler.fullBarSize * stackIndex;\r\n\t\t\tbase += ruler.categorySpacing / 2;\r\n\t\t\tbase += ruler.barSpacing / 2;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tsize: size,\r\n\t\t\t\tbase: base,\r\n\t\t\t\thead: base + size,\r\n\t\t\t\tcenter: base + size / 2\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar elements = me.getMeta().data;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar ilen = elements.length;\r\n\t\t\tvar i = 0;\r\n\t\t\tvar d;\r\n\r\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n\t\t\tfor (; i<ilen; ++i) {\r\n\t\t\t\td = dataset.data[i];\r\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\r\n\t\t\t\t\telements[i].draw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(rectangle) {\r\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n\t\t\tvar index = rectangle._index;\r\n\t\t\tvar custom = rectangle.custom || {};\r\n\t\t\tvar model = rectangle._model;\r\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t// including horizontalBar in the bar file, instead of a file of its own\r\n\t// it extends bar (like pie extends doughnut)\r\n\tChart.defaults.horizontalBar = {\r\n\t\thover: {\r\n\t\t\tmode: 'label'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tposition: 'bottom'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\tposition: 'left',\r\n\t\t\t\ttype: 'category',\r\n\r\n\t\t\t\t// Specific to Horizontal Bar Controller\r\n\t\t\t\tcategoryPercentage: 0.8,\r\n\t\t\t\tbarPercentage: 0.9,\r\n\r\n\t\t\t\t// grid line settings\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\toffsetGridLines: true\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\r\n\t\telements: {\r\n\t\t\trectangle: {\r\n\t\t\t\tborderSkipped: 'left'\r\n\t\t\t}\r\n\t\t},\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\t\tvar title = '';\r\n\r\n\t\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\r\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\r\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn title;\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetValueScaleId: function() {\r\n\t\t\treturn this.getMeta().xAxisID;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tgetIndexScaleId: function() {\r\n\t\t\treturn this.getMeta().yAxisID;\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],16:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.bubble = {\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\r\n\t\t\t\tposition: 'bottom',\r\n\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tposition: 'left',\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t},\r\n\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\t\t\t\t\treturn datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.bubble = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data;\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar data = dataset.data[index];\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar dsIndex = me.index;\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_xScale: xScale,\r\n\t\t\t\t_yScale: yScale,\r\n\t\t\t\t_datasetIndex: dsIndex,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\r\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Trick to reset the styles of the point\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\r\n\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\r\n\t\t\tpoint.pivot();\r\n\t\t},\r\n\r\n\t\tgetRadius: function(value) {\r\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\r\n\r\n\t\t\t// Radius\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\r\n\r\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],17:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tdefaults = Chart.defaults;\r\n\r\n\tdefaults.doughnut = {\r\n\t\tanimation: {\r\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\r\n\t\t\tanimateRotate: true,\r\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\r\n\t\t\tanimateScale: false\r\n\t\t},\r\n\t\taspectRatio: 1,\r\n\t\thover: {\r\n\t\t\tmode: 'single'\r\n\t\t},\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join('');\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\t// toggle visibility of index if exists\r\n\t\t\t\t\tif (meta.data[index]) {\r\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// The percentage of the chart that we cut out of the middle.\r\n\t\tcutoutPercentage: 50,\r\n\r\n\t\t// The rotation of the chart, where the first data arc begins.\r\n\t\trotation: Math.PI * -0.5,\r\n\r\n\t\t// The total circumference of the chart.\r\n\t\tcircumference: Math.PI * 2.0,\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\r\n\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n\t\t\t\t\tif (helpers.isArray(dataLabel)) {\r\n\t\t\t\t\t\t// show value on first line of multiline label\r\n\t\t\t\t\t\t// need to clone because we are changing the value\r\n\t\t\t\t\t\tdataLabel = dataLabel.slice();\r\n\t\t\t\t\t\tdataLabel[0] += value;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdataLabel += value;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn dataLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdefaults.pie = helpers.clone(defaults.doughnut);\r\n\thelpers.extend(defaults.pie, {\r\n\t\tcutoutPercentage: 0\r\n\t});\r\n\r\n\r\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n\t\tgetRingIndex: function(datasetIndex) {\r\n\t\t\tvar ringIndex = 0;\r\n\r\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\r\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\r\n\t\t\t\t\t++ringIndex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ringIndex;\r\n\t\t},\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tarcOpts = opts.elements.arc,\r\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\r\n\t\t\t\toffset = {\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0\r\n\t\t\t\t},\r\n\t\t\t\tmeta = me.getMeta(),\r\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\r\n\t\t\t\tcircumference = opts.circumference;\r\n\r\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n\t\t\tif (circumference < Math.PI * 2.0) {\r\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\r\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n\t\t\t\tvar endAngle = startAngle + circumference;\r\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\r\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\r\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\r\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\r\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\r\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\r\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\r\n\t\t\t}\r\n\r\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\r\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\r\n\r\n\t\t\tmeta.total = me.calculateTotal();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart,\r\n\t\t\t\tchartArea = chart.chartArea,\r\n\t\t\t\topts = chart.options,\r\n\t\t\t\tanimationOpts = opts.animation,\r\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\r\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\r\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\r\n\t\t\t\tdataset = me.getDataset(),\r\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\r\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\r\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX + chart.offsetX,\r\n\t\t\t\t\ty: centerY + chart.offsetY,\r\n\t\t\t\t\tstartAngle: startAngle,\r\n\t\t\t\t\tendAngle: endAngle,\r\n\t\t\t\t\tcircumference: circumference,\r\n\t\t\t\t\touterRadius: outerRadius,\r\n\t\t\t\t\tinnerRadius: innerRadius,\r\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar model = arc._model;\r\n\t\t\t// Resets the visual styles\r\n\t\t\tthis.removeHoverStyle(arc);\r\n\r\n\t\t\t// Set correct angles if not resetting\r\n\t\t\tif (!reset || !animationOpts.animateRotate) {\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tmodel.startAngle = opts.rotation;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\r\n\t\t\t}\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcalculateTotal: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar total = 0;\r\n\t\t\tvar value;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tvalue = dataset.data[index];\r\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\r\n\t\t\t\t\ttotal += Math.abs(value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t/* if (total === 0) {\r\n\t\t\t\ttotal = NaN;\r\n\t\t\t}*/\r\n\r\n\t\t\treturn total;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar total = this.getMeta().total;\r\n\t\t\tif (total > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\t// gets the max border or hover width to properly scale pie charts\r\n\t\tgetMaxBorderWidth: function(elements) {\r\n\t\t\tvar max = 0,\r\n\t\t\t\tindex = this.index,\r\n\t\t\t\tlength = elements.length,\r\n\t\t\t\tborderWidth,\r\n\t\t\t\thoverWidth;\r\n\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\r\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\r\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\r\n\t\t\t}\r\n\t\t\treturn max;\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],18:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.line = {\r\n\t\tshowLines: true,\r\n\t\tspanGaps: false,\r\n\r\n\t\thover: {\r\n\t\t\tmode: 'label'\r\n\t\t},\r\n\r\n\t\tscales: {\r\n\t\t\txAxes: [{\r\n\t\t\t\ttype: 'category',\r\n\t\t\t\tid: 'x-axis-0'\r\n\t\t\t}],\r\n\t\t\tyAxes: [{\r\n\t\t\t\ttype: 'linear',\r\n\t\t\t\tid: 'y-axis-0'\r\n\t\t\t}]\r\n\t\t}\r\n\t};\r\n\r\n\tfunction lineEnabled(dataset, options) {\r\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\r\n\t}\r\n\r\n\tChart.controllers.line = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar options = me.chart.options;\r\n\t\t\tvar lineElementOptions = options.elements.line;\r\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar i, ilen, custom;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar showLine = lineEnabled(dataset, options);\r\n\r\n\t\t\t// Update Line\r\n\t\t\tif (showLine) {\r\n\t\t\t\tcustom = line.custom || {};\r\n\r\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Utility\r\n\t\t\t\tline._scale = scale;\r\n\t\t\t\tline._datasetIndex = me.index;\r\n\t\t\t\t// Data\r\n\t\t\t\tline._children = points;\r\n\t\t\t\t// Model\r\n\t\t\t\tline._model = {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\r\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n\t\t\t\t\t// This option gives lines the ability to span gaps\r\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n\t\t\t\t};\r\n\r\n\t\t\t\tline.pivot();\r\n\t\t\t}\r\n\r\n\t\t\t// Update Points\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tme.updateElement(points[i], i, reset);\r\n\t\t\t}\r\n\r\n\t\t\tif (showLine && line._model.tension !== 0) {\r\n\t\t\t\tme.updateBezierControlPoints();\r\n\t\t\t}\r\n\r\n\t\t\t// Now pivot the point for animation\r\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].pivot();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetPointBackgroundColor: function(point, index) {\r\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.backgroundColor) {\r\n\t\t\t\tbackgroundColor = custom.backgroundColor;\r\n\t\t\t} else if (dataset.pointBackgroundColor) {\r\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n\t\t\t} else if (dataset.backgroundColor) {\r\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn backgroundColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderColor: function(point, index) {\r\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (custom.borderColor) {\r\n\t\t\t\tborderColor = custom.borderColor;\r\n\t\t\t} else if (dataset.pointBorderColor) {\r\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n\t\t\t} else if (dataset.borderColor) {\r\n\t\t\t\tborderColor = dataset.borderColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderColor;\r\n\t\t},\r\n\r\n\t\tgetPointBorderWidth: function(point, index) {\r\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar custom = point.custom || {};\r\n\r\n\t\t\tif (!isNaN(custom.borderWidth)) {\r\n\t\t\t\tborderWidth = custom.borderWidth;\r\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth)) {\r\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\r\n\t\t\t\tborderWidth = dataset.borderWidth;\r\n\t\t\t}\r\n\r\n\t\t\treturn borderWidth;\r\n\t\t},\r\n\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar datasetIndex = me.index;\r\n\t\t\tvar value = dataset.data[index];\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\r\n\t\t\tvar pointOptions = me.chart.options.elements.point;\r\n\t\t\tvar x, y;\r\n\t\t\tvar labels = me.chart.data.labels || [];\r\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t}\r\n\r\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\r\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n\t\t\t// Utility\r\n\t\t\tpoint._xScale = xScale;\r\n\t\t\tpoint._yScale = yScale;\r\n\t\t\tpoint._datasetIndex = datasetIndex;\r\n\t\t\tpoint._index = index;\r\n\r\n\t\t\t// Desired view properties\r\n\t\t\tpoint._model = {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\r\n\t\t\t\t// Appearance\r\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\r\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\r\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\r\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n\t\t\t\t// Tooltip\r\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tcalculatePointY: function(value, index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\r\n\t\t\tvar sumPos = 0;\r\n\t\t\tvar sumNeg = 0;\r\n\t\t\tvar i, ds, dsMeta;\r\n\r\n\t\t\tif (yScale.options.stacked) {\r\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\r\n\t\t\t\t\tds = chart.data.datasets[i];\r\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n\t\t\t\t\t\tif (stackedRightValue < 0) {\r\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\r\n\t\t\t\tif (rightValue < 0) {\r\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\r\n\t\t\t\t}\r\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\r\n\t\t\t}\r\n\r\n\t\t\treturn yScale.getPixelForValue(value);\r\n\t\t},\r\n\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar area = me.chart.chartArea;\r\n\t\t\tvar points = (meta.data || []);\r\n\t\t\tvar i, ilen, point, model, controlPoints;\r\n\r\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\r\n\t\t\tif (meta.dataset._model.spanGaps) {\r\n\t\t\t\tpoints = points.filter(function(pt) {\r\n\t\t\t\t\treturn !pt._model.skip;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction capControlPoint(pt, min, max) {\r\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\r\n\t\t\t}\r\n\r\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n\t\t\t\thelpers.splineCurveMonotone(points);\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\r\n\t\t\t\t\tpoint = points[i];\r\n\t\t\t\t\tmodel = point._model;\r\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\r\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\r\n\t\t\t\t\t\tmodel,\r\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\r\n\t\t\t\t\t\tmeta.dataset._model.tension\r\n\t\t\t\t\t);\r\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\r\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\r\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\r\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\r\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\r\n\t\t\t\t\tmodel = points[i]._model;\r\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar points = meta.data || [];\r\n\t\t\tvar area = chart.chartArea;\r\n\t\t\tvar ilen = points.length;\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\tChart.canvasHelpers.clipArea(chart.ctx, area);\r\n\r\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\r\n\t\t\t\tmeta.dataset.draw();\r\n\t\t\t}\r\n\r\n\t\t\tChart.canvasHelpers.unclipArea(chart.ctx);\r\n\r\n\t\t\t// Draw the points\r\n\t\t\tfor (; i<ilen; ++i) {\r\n\t\t\t\tpoints[i].draw(area);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\r\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\r\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],19:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.polarArea = {\r\n\r\n\t\tscale: {\r\n\t\t\ttype: 'radialLinear',\r\n\t\t\tangleLines: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\t\tgridLines: {\r\n\t\t\t\tcircular: true\r\n\t\t\t},\r\n\t\t\tpointLabels: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\t\tticks: {\r\n\t\t\t\tbeginAtZero: true\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Boolean - Whether to animate the rotation of the chart\r\n\t\tanimation: {\r\n\t\t\tanimateRotate: true,\r\n\t\t\tanimateScale: true\r\n\t\t},\r\n\r\n\t\tstartAngle: -0.5 * Math.PI,\r\n\t\taspectRatio: 1,\r\n\t\tlegendCallback: function(chart) {\r\n\t\t\tvar text = [];\r\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar labels = data.labels;\r\n\r\n\t\t\tif (datasets.length) {\r\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n\t\t\t\t\tif (labels[i]) {\r\n\t\t\t\t\t\ttext.push(labels[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttext.push('</ul>');\r\n\t\t\treturn text.join('');\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tlabels: {\r\n\t\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\t\tvar data = chart.data;\r\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\r\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\r\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\r\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\r\n\t\t\t\t\t\t\tvar arc = meta.data[i];\r\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\r\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\r\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttext: label,\r\n\t\t\t\t\t\t\t\tfillStyle: fill,\r\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\r\n\t\t\t\t\t\t\t\tlineWidth: bw,\r\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\r\n\t\t\t\t\t\t\t\tindex: i\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonClick: function(e, legendItem) {\r\n\t\t\t\tvar index = legendItem.index;\r\n\t\t\t\tvar chart = this.chart;\r\n\t\t\t\tvar i, ilen, meta;\r\n\r\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tchart.update();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Need to override these to give a nice default\r\n\t\ttooltips: {\r\n\t\t\tcallbacks: {\r\n\t\t\t\ttitle: function() {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t},\r\n\t\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\r\n\r\n\t\tdataElementType: Chart.elements.Arc,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar chartArea = chart.chartArea;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar arcOpts = opts.elements.arc;\r\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\r\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\r\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\r\n\r\n\t\t\tmeta.count = me.countVisibleElements();\r\n\r\n\t\t\thelpers.each(meta.data, function(arc, index) {\r\n\t\t\t\tme.updateElement(arc, index, reset);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateElement: function(arc, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar opts = chart.options;\r\n\t\t\tvar animationOpts = opts.animation;\r\n\t\t\tvar scale = chart.scale;\r\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\t\t\tvar labels = chart.data.labels;\r\n\r\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\r\n\t\t\tvar centerX = scale.xCenter;\r\n\t\t\tvar centerY = scale.yCenter;\r\n\r\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\r\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n\t\t\tvar visibleCount = 0;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tfor (var i = 0; i < index; ++i) {\r\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n\t\t\t\t\t++visibleCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\r\n\t\t\tvar datasetStartAngle = opts.startAngle;\r\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\r\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\r\n\r\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\r\n\t\t\thelpers.extend(arc, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: centerX,\r\n\t\t\t\t\ty: centerY,\r\n\t\t\t\t\tinnerRadius: 0,\r\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\r\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\r\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\r\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Apply border and fill style\r\n\t\t\tme.removeHoverStyle(arc);\r\n\r\n\t\t\tarc.pivot();\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(arc) {\r\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n\t\t},\r\n\r\n\t\tcountVisibleElements: function() {\r\n\t\t\tvar dataset = this.getDataset();\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\thelpers.each(meta.data, function(element, index) {\r\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tcalculateCircumference: function(value) {\r\n\t\t\tvar count = this.getMeta().count;\r\n\t\t\tif (count > 0 && !isNaN(value)) {\r\n\t\t\t\treturn (2 * Math.PI) / count;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],20:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.radar = {\r\n\t\taspectRatio: 1,\r\n\t\tscale: {\r\n\t\t\ttype: 'radialLinear'\r\n\t\t},\r\n\t\telements: {\r\n\t\t\tline: {\r\n\t\t\t\ttension: 0 // no bezier in radar\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.controllers.radar = Chart.DatasetController.extend({\r\n\r\n\t\tdatasetElementType: Chart.elements.Line,\r\n\r\n\t\tdataElementType: Chart.elements.Point,\r\n\r\n\t\tlinkScales: helpers.noop,\r\n\r\n\t\tupdate: function(reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar line = meta.dataset;\r\n\t\t\tvar points = meta.data;\r\n\t\t\tvar custom = line.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\r\n\t\t\tvar scale = me.chart.scale;\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n\t\t\t\tdataset.lineTension = dataset.tension;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(meta.dataset, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_scale: scale,\r\n\t\t\t\t// Data\r\n\t\t\t\t_children: points,\r\n\t\t\t\t_loop: true,\r\n\t\t\t\t// Model\r\n\t\t\t\t_model: {\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tmeta.dataset.pivot();\r\n\r\n\t\t\t// Update Points\r\n\t\t\thelpers.each(points, function(point, index) {\r\n\t\t\t\tme.updateElement(point, index, reset);\r\n\t\t\t}, me);\r\n\r\n\t\t\t// Update bezier control points\r\n\t\t\tme.updateBezierControlPoints();\r\n\t\t},\r\n\t\tupdateElement: function(point, index, reset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar scale = me.chart.scale;\r\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\r\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\r\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\r\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n\t\t\t\tdataset.pointRadius = dataset.radius;\r\n\t\t\t}\r\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.extend(point, {\r\n\t\t\t\t// Utility\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index,\r\n\t\t\t\t_scale: scale,\r\n\r\n\t\t\t\t// Desired view properties\r\n\t\t\t\t_model: {\r\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\r\n\r\n\t\t\t\t\t// Appearance\r\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\r\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\r\n\t\t\t\t\t// Tooltip\r\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n\t\t},\r\n\t\tupdateBezierControlPoints: function() {\r\n\t\t\tvar chartArea = this.chart.chartArea;\r\n\t\t\tvar meta = this.getMeta();\r\n\r\n\t\t\thelpers.each(meta.data, function(point, index) {\r\n\t\t\t\tvar model = point._model;\r\n\t\t\t\tvar controlPoints = helpers.splineCurve(\r\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel,\r\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\r\n\t\t\t\t\tmodel.tension\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\r\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\r\n\t\t\t\t// Now pivot the point for animation\r\n\t\t\t\tpoint.pivot();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(point) {\r\n\t\t\t// Point\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\r\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(point) {\r\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\r\n\t\t\tvar custom = point.custom || {};\r\n\t\t\tvar index = point._index;\r\n\t\t\tvar model = point._model;\r\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\r\n\r\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],21:[function(require,module,exports){\r\n/* global window: false */\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.animation = {\r\n\t\tduration: 1000,\r\n\t\teasing: 'easeOutQuart',\r\n\t\tonProgress: helpers.noop,\r\n\t\tonComplete: helpers.noop\r\n\t};\r\n\r\n\tChart.Animation = Chart.Element.extend({\r\n\t\tchart: null, // the animation associated chart instance\r\n\t\tcurrentStep: 0, // the current animation step\r\n\t\tnumSteps: 60, // default number of steps\r\n\t\teasing: '', // the easing to use for this animation\r\n\t\trender: null, // render function used by the animation service\r\n\r\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n\t});\r\n\r\n\tChart.animationService = {\r\n\t\tframeDuration: 17,\r\n\t\tanimations: [],\r\n\t\tdropFrames: 0,\r\n\t\trequest: null,\r\n\r\n\t\t/**\r\n\t\t * @param {Chart} chart - The chart to animate.\r\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\r\n\t\t * @param {Number} duration - The animation duration in ms.\r\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n\t\t */\r\n\t\taddAnimation: function(chart, animation, duration, lazy) {\r\n\t\t\tvar animations = this.animations;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tanimation.chart = chart;\r\n\r\n\t\t\tif (!lazy) {\r\n\t\t\t\tchart.animating = true;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i=0, ilen=animations.length; i < ilen; ++i) {\r\n\t\t\t\tif (animations[i].chart === chart) {\r\n\t\t\t\t\tanimations[i] = animation;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tanimations.push(animation);\r\n\r\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n\t\t\tif (animations.length === 1) {\r\n\t\t\t\tthis.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcancelAnimation: function(chart) {\r\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\r\n\t\t\t\treturn animation.chart === chart;\r\n\t\t\t});\r\n\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.animations.splice(index, 1);\r\n\t\t\t\tchart.animating = false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trequestAnimationFrame: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.request === null) {\r\n\t\t\t\t// Skip animation frame requests until the active one is executed.\r\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\r\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\r\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tme.request = null;\r\n\t\t\t\t\tme.startDigest();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tstartDigest: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar startTime = Date.now();\r\n\t\t\tvar framesToDrop = 0;\r\n\r\n\t\t\tif (me.dropFrames > 1) {\r\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\r\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\r\n\t\t\t}\r\n\r\n\t\t\tme.advance(1 + framesToDrop);\r\n\r\n\t\t\tvar endTime = Date.now();\r\n\r\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n\t\t\t// Do we have more stuff to animate?\r\n\t\t\tif (me.animations.length > 0) {\r\n\t\t\t\tme.requestAnimationFrame();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tadvance: function(count) {\r\n\t\t\tvar animations = this.animations;\r\n\t\t\tvar animation, chart;\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\twhile (i < animations.length) {\r\n\t\t\t\tanimation = animations[i];\r\n\t\t\t\tchart = animation.chart;\r\n\r\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\r\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\r\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\r\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\r\n\t\t\t\t\tchart.animating = false;\r\n\t\t\t\t\tanimations.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart.Animation instead\r\n\t * @prop Chart.Animation#animationObject\r\n\t * @deprecated since version 2.6.0\r\n\t * @todo remove at version 3\r\n\t */\r\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n\t\tget: function() {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\r\n\t * @prop Chart.Animation#chartInstance\r\n\t * @deprecated since version 2.6.0\r\n\t * @todo remove at version 3\r\n\t */\r\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n\t\tget: function() {\r\n\t\t\treturn this.chart;\r\n\t\t},\r\n\t\tset: function(value) {\r\n\t\t\tthis.chart = value;\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\r\n},{}],22:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\t// Global Chart canvas helpers object for drawing items to canvas\r\n\tvar helpers = Chart.canvasHelpers = {};\r\n\r\n\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\r\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n\t\tif (typeof pointStyle === 'object') {\r\n\t\t\ttype = pointStyle.toString();\r\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2, pointStyle.width, pointStyle.height);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isNaN(radius) || radius <= 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (pointStyle) {\r\n\t\t// Default includes circle\r\n\t\tdefault:\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'triangle':\r\n\t\t\tctx.beginPath();\r\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\r\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\r\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'rect':\r\n\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n\t\t\tbreak;\r\n\t\tcase 'rectRounded':\r\n\t\t\tvar offset = radius / Math.SQRT2;\r\n\t\t\tvar leftX = x - offset;\r\n\t\t\tvar topY = y - offset;\r\n\t\t\tvar sideSize = Math.SQRT2 * radius;\r\n\t\t\tChart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'rectRot':\r\n\t\t\tsize = 1 / Math.SQRT2 * radius;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x - size, y);\r\n\t\t\tctx.lineTo(x, y + size);\r\n\t\t\tctx.lineTo(x + size, y);\r\n\t\t\tctx.lineTo(x, y - size);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t\tbreak;\r\n\t\tcase 'cross':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'crossRot':\r\n\t\t\tctx.beginPath();\r\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'star':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y + radius);\r\n\t\t\tctx.lineTo(x, y - radius);\r\n\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\r\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\r\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\r\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\r\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'line':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x - radius, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\tcase 'dash':\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x, y);\r\n\t\t\tctx.lineTo(x + radius, y);\r\n\t\t\tctx.closePath();\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tctx.stroke();\r\n\t};\r\n\r\n\thelpers.clipArea = function(ctx, clipArea) {\r\n\t\tctx.save();\r\n\t\tctx.beginPath();\r\n\t\tctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);\r\n\t\tctx.clip();\r\n\t};\r\n\r\n\thelpers.unclipArea = function(ctx) {\r\n\t\tctx.restore();\r\n\t};\r\n\r\n\thelpers.lineTo = function(ctx, previous, target, flip) {\r\n\t\tif (target.steppedLine) {\r\n\t\t\tif (target.steppedLine === 'after') {\r\n\t\t\t\tctx.lineTo(previous.x, target.y);\r\n\t\t\t} else {\r\n\t\t\t\tctx.lineTo(target.x, previous.y);\r\n\t\t\t}\r\n\t\t\tctx.lineTo(target.x, target.y);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!target.tension) {\r\n\t\t\tctx.lineTo(target.x, target.y);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tctx.bezierCurveTo(\r\n\t\t\tflip? previous.controlPointPreviousX : previous.controlPointNextX,\r\n\t\t\tflip? previous.controlPointPreviousY : previous.controlPointNextY,\r\n\t\t\tflip? target.controlPointNextX : target.controlPointPreviousX,\r\n\t\t\tflip? target.controlPointNextY : target.controlPointPreviousY,\r\n\t\t\ttarget.x,\r\n\t\t\ttarget.y);\r\n\t};\r\n\r\n\tChart.helpers.canvas = helpers;\r\n};\r\n\r\n},{}],23:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar plugins = Chart.plugins;\r\n\tvar platform = Chart.platform;\r\n\r\n\t// Create a dictionary of chart types, to allow for extension of existing types\r\n\tChart.types = {};\r\n\r\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\r\n\tChart.instances = {};\r\n\r\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n\tChart.controllers = {};\r\n\r\n\t/**\r\n\t * Initializes the given config with global and chart default values.\r\n\t */\r\n\tfunction initConfig(config) {\r\n\t\tconfig = config || {};\r\n\r\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\r\n\t\t// and so would change references to labels and datasets, preventing data updates.\r\n\t\tvar data = config.data = config.data || {};\r\n\t\tdata.datasets = data.datasets || [];\r\n\t\tdata.labels = data.labels || [];\r\n\r\n\t\tconfig.options = helpers.configMerge(\r\n\t\t\tChart.defaults.global,\r\n\t\t\tChart.defaults[config.type],\r\n\t\t\tconfig.options || {});\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the config of the chart\r\n\t * @param chart {Chart} chart to update the options for\r\n\t */\r\n\tfunction updateConfig(chart) {\r\n\t\tvar newOptions = chart.options;\r\n\r\n\t\t// Update Scale(s) with options\r\n\t\tif (newOptions.scale) {\r\n\t\t\tchart.scale.options = newOptions.scale;\r\n\t\t} else if (newOptions.scales) {\r\n\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\r\n\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Tooltip\r\n\t\tchart.tooltip._options = newOptions.tooltips;\r\n\t}\r\n\r\n\tfunction positionIsHorizontal(position) {\r\n\t\treturn position === 'top' || position === 'bottom';\r\n\t}\r\n\r\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tconstruct: function(item, config) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tconfig = initConfig(config);\r\n\r\n\t\t\tvar context = platform.acquireContext(item, config);\r\n\t\t\tvar canvas = context && context.canvas;\r\n\t\t\tvar height = canvas && canvas.height;\r\n\t\t\tvar width = canvas && canvas.width;\r\n\r\n\t\t\tme.id = helpers.uid();\r\n\t\t\tme.ctx = context;\r\n\t\t\tme.canvas = canvas;\r\n\t\t\tme.config = config;\r\n\t\t\tme.width = width;\r\n\t\t\tme.height = height;\r\n\t\t\tme.aspectRatio = height? width / height : null;\r\n\t\t\tme.options = config.options;\r\n\t\t\tme._bufferedRender = false;\r\n\r\n\t\t\t/**\r\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\r\n\t\t\t * @prop Chart#chart\r\n\t\t\t * @deprecated since version 2.6.0\r\n\t\t\t * @todo remove at version 3\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tme.chart = me;\r\n\t\t\tme.controller = me;  // chart.chart.controller #inception\r\n\r\n\t\t\t// Add the chart instance to the global namespace\r\n\t\t\tChart.instances[me.id] = me;\r\n\r\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\r\n\t\t\tObject.defineProperty(me, 'data', {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn me.config.data;\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\tme.config.data = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (!context || !canvas) {\r\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\r\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\r\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\r\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.initialize();\r\n\t\t\tme.update();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tinitialize: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Before init plugin notification\r\n\t\t\tplugins.notify(me, 'beforeInit');\r\n\r\n\t\t\thelpers.retinaScale(me);\r\n\r\n\t\t\tme.bindEvents();\r\n\r\n\t\t\tif (me.options.responsive) {\r\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\r\n\t\t\t\tme.resize(true);\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\r\n\t\t\tme.ensureScalesHaveIDs();\r\n\t\t\tme.buildScales();\r\n\t\t\tme.initToolTip();\r\n\r\n\t\t\t// After init plugin notification\r\n\t\t\tplugins.notify(me, 'afterInit');\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tclear: function() {\r\n\t\t\thelpers.clear(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tstop: function() {\r\n\t\t\t// Stops any current animation loop occurring\r\n\t\t\tChart.animationService.cancelAnimation(this);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tresize: function(silent) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tvar canvas = me.canvas;\r\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\r\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\r\n\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\r\n\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\r\n\r\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcanvas.width = me.width = newWidth;\r\n\t\t\tcanvas.height = me.height = newHeight;\r\n\t\t\tcanvas.style.width = newWidth + 'px';\r\n\t\t\tcanvas.style.height = newHeight + 'px';\r\n\r\n\t\t\thelpers.retinaScale(me);\r\n\r\n\t\t\tif (!silent) {\r\n\t\t\t\t// Notify any plugins about the resize\r\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\r\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\r\n\r\n\t\t\t\t// Notify of resize\r\n\t\t\t\tif (me.options.onResize) {\r\n\t\t\t\t\tme.options.onResize(me, newSize);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tme.stop();\r\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tensureScalesHaveIDs: function() {\r\n\t\t\tvar options = this.options;\r\n\t\t\tvar scalesOptions = options.scales || {};\r\n\t\t\tvar scaleOptions = options.scale;\r\n\r\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleOptions) {\r\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Builds a map of scale ID to scale object for future lookup.\r\n\t\t */\r\n\t\tbuildScales: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tvar scales = me.scales = {};\r\n\t\t\tvar items = [];\r\n\r\n\t\t\tif (options.scales) {\r\n\t\t\t\titems = items.concat(\r\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\r\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\r\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (options.scale) {\r\n\t\t\t\titems.push({\r\n\t\t\t\t\toptions: options.scale,\r\n\t\t\t\t\tdtype: 'radialLinear',\r\n\t\t\t\t\tisDefault: true,\r\n\t\t\t\t\tdposition: 'chartArea'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(items, function(item) {\r\n\t\t\t\tvar scaleOptions = item.options;\r\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n\t\t\t\tif (!scaleClass) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n\t\t\t\t\tscaleOptions.position = item.dposition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scale = new scaleClass({\r\n\t\t\t\t\tid: scaleOptions.id,\r\n\t\t\t\t\toptions: scaleOptions,\r\n\t\t\t\t\tctx: me.ctx,\r\n\t\t\t\t\tchart: me\r\n\t\t\t\t});\r\n\r\n\t\t\t\tscales[scale.id] = scale;\r\n\r\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n\t\t\t\t// make the logic easier and remove some useless? custom code.\r\n\t\t\t\tif (item.isDefault) {\r\n\t\t\t\t\tme.scale = scale;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tChart.scaleService.addScalesToLayout(this);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateControllers: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar types = [];\r\n\t\t\tvar newControllers = [];\r\n\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\r\n\t\t\t\tif (!meta.type) {\r\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttypes.push(meta.type);\r\n\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\r\n\t\t\t\t\tif (ControllerClass === undefined) {\r\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\r\n\t\t\t\t\tnewControllers.push(meta.controller);\r\n\t\t\t\t}\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (types.length > 1) {\r\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\r\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\r\n\t\t\t\t\t\tme.isCombo = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn newControllers;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Reset the elements of all datasets\r\n\t\t * @private\r\n\t\t */\r\n\t\tresetElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\r\n\t\t\t}, me);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* Resets the chart back to it's state before the initial animation\r\n\t\t*/\r\n\t\treset: function() {\r\n\t\t\tthis.resetElements();\r\n\t\t\tthis.tooltip.initialize();\r\n\t\t},\r\n\r\n\t\tupdate: function(animationDuration, lazy) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tupdateConfig(me);\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// In case the entire data object changed\r\n\t\t\tme.tooltip._data = me.data;\r\n\r\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\r\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\r\n\r\n\t\t\t// Make sure all dataset controllers have correct meta data counts\r\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n\t\t\t}, me);\r\n\r\n\t\t\tme.updateLayout();\r\n\r\n\t\t\t// Can only reset the new controllers after the scales have been updated\r\n\t\t\thelpers.each(newControllers, function(controller) {\r\n\t\t\t\tcontroller.reset();\r\n\t\t\t});\r\n\r\n\t\t\tme.updateDatasets();\r\n\r\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\r\n\t\t\tplugins.notify(me, 'afterUpdate');\r\n\r\n\t\t\tif (me._bufferedRender) {\r\n\t\t\t\tme._bufferedRequest = {\r\n\t\t\t\t\tlazy: lazy,\r\n\t\t\t\t\tduration: animationDuration\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tme.render(animationDuration, lazy);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateLayout: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tChart.layoutService.update(this, this.width, this.height);\r\n\r\n\t\t\t/**\r\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\r\n\t\t\t * @method IPlugin#afterScaleUpdate\r\n\t\t\t * @deprecated since version 2.5.0\r\n\t\t\t * @todo remove at version 3\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\r\n\t\t\tplugins.notify(me, 'afterLayout');\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateDatasets: function() {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n\t\t\t\tme.updateDataset(i);\r\n\t\t\t}\r\n\r\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateDataset: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getDatasetMeta(index);\r\n\t\t\tvar args = {\r\n\t\t\t\tmeta: meta,\r\n\t\t\t\tindex: index\r\n\t\t\t};\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmeta.controller.update();\r\n\r\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\r\n\t\t},\r\n\r\n\t\trender: function(duration, lazy) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar animationOptions = me.options.animation;\r\n\t\t\tvar onComplete = function(animation) {\r\n\t\t\t\tplugins.notify(me, 'afterRender');\r\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n\t\t\t};\r\n\r\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n\t\t\t\tvar animation = new Chart.Animation({\r\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n\t\t\t\t\teasing: animationOptions.easing,\r\n\r\n\t\t\t\t\trender: function(chart, animationObject) {\r\n\t\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\r\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\r\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\r\n\t\t\t\t\tonAnimationComplete: onComplete\r\n\t\t\t\t});\r\n\r\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\r\n\t\t\t} else {\r\n\t\t\t\tme.draw();\r\n\r\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\r\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\tdraw: function(easingValue) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tme.clear();\r\n\r\n\t\t\tif (easingValue === undefined || easingValue === null) {\r\n\t\t\t\teasingValue = 1;\r\n\t\t\t}\r\n\r\n\t\t\tme.transition(easingValue);\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Draw all the scales\r\n\t\t\thelpers.each(me.boxes, function(box) {\r\n\t\t\t\tbox.draw(me.chartArea);\r\n\t\t\t}, me);\r\n\r\n\t\t\tif (me.scale) {\r\n\t\t\t\tme.scale.draw();\r\n\t\t\t}\r\n\r\n\t\t\tme.drawDatasets(easingValue);\r\n\r\n\t\t\t// Finally draw the tooltip\r\n\t\t\tme.tooltip.draw();\r\n\r\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\ttransition: function(easingValue) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tfor (var i=0, ilen=(me.data.datasets || []).length; i<ilen; ++i) {\r\n\t\t\t\tif (me.isDatasetVisible(i)) {\r\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.tooltip.transition(easingValue);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tdrawDatasets: function(easingValue) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Draw datasets reversed to support proper line stacking\r\n\t\t\tfor (var i=(me.data.datasets || []).length - 1; i >= 0; --i) {\r\n\t\t\t\tif (me.isDatasetVisible(i)) {\r\n\t\t\t\t\tme.drawDataset(i, easingValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n\t\t * @private\r\n\t\t */\r\n\t\tdrawDataset: function(index, easingValue) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getDatasetMeta(index);\r\n\t\t\tvar args = {\r\n\t\t\t\tmeta: meta,\r\n\t\t\t\tindex: index,\r\n\t\t\t\teasingValue: easingValue\r\n\t\t\t};\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tmeta.controller.draw(easingValue);\r\n\r\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\r\n\t\t},\r\n\r\n\t\t// Get the single element that was clicked on\r\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n\t\tgetElementAtEvent: function(e) {\r\n\t\t\treturn Chart.Interaction.modes.single(this, e);\r\n\t\t},\r\n\r\n\t\tgetElementsAtEvent: function(e) {\r\n\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\r\n\t\t},\r\n\r\n\t\tgetElementsAtXAxis: function(e) {\r\n\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\r\n\t\t},\r\n\r\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\r\n\t\t\tvar method = Chart.Interaction.modes[mode];\r\n\t\t\tif (typeof method === 'function') {\r\n\t\t\t\treturn method(this, e, options);\r\n\t\t\t}\r\n\r\n\t\t\treturn [];\r\n\t\t},\r\n\r\n\t\tgetDatasetAtEvent: function(e) {\r\n\t\t\treturn Chart.Interaction.modes.dataset(this, e, {intersect: true});\r\n\t\t},\r\n\r\n\t\tgetDatasetMeta: function(datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\r\n\t\t\tif (!dataset._meta) {\r\n\t\t\t\tdataset._meta = {};\r\n\t\t\t}\r\n\r\n\t\t\tvar meta = dataset._meta[me.id];\r\n\t\t\tif (!meta) {\r\n\t\t\t\tmeta = dataset._meta[me.id] = {\r\n\t\t\t\t\ttype: null,\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\tdataset: null,\r\n\t\t\t\t\tcontroller: null,\r\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\r\n\t\t\t\t\txAxisID: null,\r\n\t\t\t\t\tyAxisID: null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn meta;\r\n\t\t},\r\n\r\n\t\tgetVisibleDatasetCount: function() {\r\n\t\t\tvar count = 0;\r\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\r\n\t\t\t\tif (this.isDatasetVisible(i)) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\tisDatasetVisible: function(datasetIndex) {\r\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n\t\t},\r\n\r\n\t\tgenerateLegend: function() {\r\n\t\t\treturn this.options.legendCallback(this);\r\n\t\t},\r\n\r\n\t\tdestroy: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar canvas = me.canvas;\r\n\t\t\tvar meta, i, ilen;\r\n\r\n\t\t\tme.stop();\r\n\r\n\t\t\t// dataset controllers need to cleanup associated data\r\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n\t\t\t\tmeta = me.getDatasetMeta(i);\r\n\t\t\t\tif (meta.controller) {\r\n\t\t\t\t\tmeta.controller.destroy();\r\n\t\t\t\t\tmeta.controller = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (canvas) {\r\n\t\t\t\tme.unbindEvents();\r\n\t\t\t\thelpers.clear(me);\r\n\t\t\t\tplatform.releaseContext(me.ctx);\r\n\t\t\t\tme.canvas = null;\r\n\t\t\t\tme.ctx = null;\r\n\t\t\t}\r\n\r\n\t\t\tplugins.notify(me, 'destroy');\r\n\r\n\t\t\tdelete Chart.instances[me.id];\r\n\t\t},\r\n\r\n\t\ttoBase64Image: function() {\r\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\r\n\t\t},\r\n\r\n\t\tinitToolTip: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.tooltip = new Chart.Tooltip({\r\n\t\t\t\t_chart: me,\r\n\t\t\t\t_chartInstance: me,            // deprecated, backward compatibility\r\n\t\t\t\t_data: me.data,\r\n\t\t\t\t_options: me.options.tooltips\r\n\t\t\t}, me);\r\n\t\t\tme.tooltip.initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tbindEvents: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar listeners = me._listeners = {};\r\n\t\t\tvar listener = function() {\r\n\t\t\t\tme.eventHandler.apply(me, arguments);\r\n\t\t\t};\r\n\r\n\t\t\thelpers.each(me.options.events, function(type) {\r\n\t\t\t\tplatform.addEventListener(me, type, listener);\r\n\t\t\t\tlisteners[type] = listener;\r\n\t\t\t});\r\n\r\n\t\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\r\n\t\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\r\n\t\t\t// that the user is still able to create a chart without iframe when responsive is false.\r\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\r\n\t\t\tif (me.options.responsive) {\r\n\t\t\t\tlistener = function() {\r\n\t\t\t\t\tme.resize();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\r\n\t\t\t\tlisteners.resize = listener;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tunbindEvents: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar listeners = me._listeners;\r\n\t\t\tif (!listeners) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tdelete me._listeners;\r\n\t\t\thelpers.each(listeners, function(listener, type) {\r\n\t\t\t\tplatform.removeEventListener(me, type, listener);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\r\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\r\n\t\t\tvar element, i, ilen;\r\n\r\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\r\n\t\t\t\telement = elements[i];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\teventHandler: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar tooltip = me.tooltip;\r\n\r\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Buffer any update calls so that renders do not occur\r\n\t\t\tme._bufferedRender = true;\r\n\t\t\tme._bufferedRequest = null;\r\n\r\n\t\t\tvar changed = me.handleEvent(e);\r\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\r\n\r\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\r\n\r\n\t\t\tvar bufferedRequest = me._bufferedRequest;\r\n\t\t\tif (bufferedRequest) {\r\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\r\n\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\r\n\t\t\t} else if (changed && !me.animating) {\r\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\r\n\t\t\t\tme.stop();\r\n\r\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\r\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\r\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\r\n\t\t\t}\r\n\r\n\t\t\tme._bufferedRender = false;\r\n\t\t\tme._bufferedRequest = null;\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle an event\r\n\t\t * @private\r\n\t\t * @param {IEvent} event the event to handle\r\n\t\t * @return {Boolean} true if the chart needs to re-render\r\n\t\t */\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options || {};\r\n\t\t\tvar hoverOptions = options.hover;\r\n\t\t\tvar changed = false;\r\n\r\n\t\t\tme.lastActive = me.lastActive || [];\r\n\r\n\t\t\t// Find Active Elements for hover and tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tme.active = [];\r\n\t\t\t} else {\r\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n\t\t\t}\r\n\r\n\t\t\t// On Hover hook\r\n\t\t\tif (hoverOptions.onHover) {\r\n\t\t\t\t// Need to call with native event here to not break backwards compatibility\r\n\t\t\t\thoverOptions.onHover.call(me, e.native, me.active);\r\n\t\t\t}\r\n\r\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\r\n\t\t\t\tif (options.onClick) {\r\n\t\t\t\t\t// Use e.native here for backwards compatibility\r\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove styling for last active (even if it may still be active)\r\n\t\t\tif (me.lastActive.length) {\r\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Built in hover styling\r\n\t\t\tif (me.active.length && hoverOptions.mode) {\r\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n\t\t\t}\r\n\r\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tme.lastActive = me.active;\r\n\r\n\t\t\treturn changed;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart instead.\r\n\t * @class Chart.Controller\r\n\t * @deprecated since version 2.6.0\r\n\t * @todo remove at version 3\r\n\t * @private\r\n\t */\r\n\tChart.Controller = Chart;\r\n};\r\n\r\n},{}],24:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n\t/**\r\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n\t */\r\n\tfunction listenArrayEvents(array, listener) {\r\n\t\tif (array._chartjs) {\r\n\t\t\tarray._chartjs.listeners.push(listener);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(array, '_chartjs', {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: false,\r\n\t\t\tvalue: {\r\n\t\t\t\tlisteners: [listener]\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tarrayEvents.forEach(function(key) {\r\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n\t\t\tvar base = array[key];\r\n\r\n\t\t\tObject.defineProperty(array, key, {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: function() {\r\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\r\n\t\t\t\t\tvar res = base.apply(this, args);\r\n\r\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\r\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\r\n\t\t\t\t\t\t\tobject[method].apply(object, args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn res;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given array event listener and cleanup extra attached properties (such as\r\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n\t */\r\n\tfunction unlistenArrayEvents(array, listener) {\r\n\t\tvar stub = array._chartjs;\r\n\t\tif (!stub) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar listeners = stub.listeners;\r\n\t\tvar index = listeners.indexOf(listener);\r\n\t\tif (index !== -1) {\r\n\t\t\tlisteners.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tif (listeners.length > 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrayEvents.forEach(function(key) {\r\n\t\t\tdelete array[key];\r\n\t\t});\r\n\r\n\t\tdelete array._chartjs;\r\n\t}\r\n\r\n\t// Base class for all dataset controllers (line, bar, etc)\r\n\tChart.DatasetController = function(chart, datasetIndex) {\r\n\t\tthis.initialize(chart, datasetIndex);\r\n\t};\r\n\r\n\thelpers.extend(Chart.DatasetController.prototype, {\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdatasetElementType: null,\r\n\r\n\t\t/**\r\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n\t\t * @type {Chart.core.element}\r\n\t\t */\r\n\t\tdataElementType: null,\r\n\r\n\t\tinitialize: function(chart, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tme.chart = chart;\r\n\t\t\tme.index = datasetIndex;\r\n\t\t\tme.linkScales();\r\n\t\t\tme.addElements();\r\n\t\t},\r\n\r\n\t\tupdateIndex: function(datasetIndex) {\r\n\t\t\tthis.index = datasetIndex;\r\n\t\t},\r\n\r\n\t\tlinkScales: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar dataset = me.getDataset();\r\n\r\n\t\t\tif (meta.xAxisID === null) {\r\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n\t\t\t}\r\n\t\t\tif (meta.yAxisID === null) {\r\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDataset: function() {\r\n\t\t\treturn this.chart.data.datasets[this.index];\r\n\t\t},\r\n\r\n\t\tgetMeta: function() {\r\n\t\t\treturn this.chart.getDatasetMeta(this.index);\r\n\t\t},\r\n\r\n\t\tgetScaleForId: function(scaleID) {\r\n\t\t\treturn this.chart.scales[scaleID];\r\n\t\t},\r\n\r\n\t\treset: function() {\r\n\t\t\tthis.update(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tif (this._data) {\r\n\t\t\t\tunlistenArrayEvents(this._data, this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcreateMetaDataset: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.datasetElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart,\r\n\t\t\t\t_datasetIndex: me.index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tcreateMetaData: function(index) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar type = me.dataElementType;\r\n\t\t\treturn type && new type({\r\n\t\t\t\t_chart: me.chart,\r\n\t\t\t\t_datasetIndex: me.index,\r\n\t\t\t\t_index: index\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\taddElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar data = me.getDataset().data || [];\r\n\t\t\tvar metaData = meta.data;\r\n\t\t\tvar i, ilen;\r\n\r\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\r\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\r\n\t\t\t}\r\n\r\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\r\n\t\t},\r\n\r\n\t\taddElementAndReset: function(index) {\r\n\t\t\tvar element = this.createMetaData(index);\r\n\t\t\tthis.getMeta().data.splice(index, 0, element);\r\n\t\t\tthis.updateElement(element, index, true);\r\n\t\t},\r\n\r\n\t\tbuildOrUpdateElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar dataset = me.getDataset();\r\n\t\t\tvar data = dataset.data || (dataset.data = []);\r\n\r\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\r\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\r\n\t\t\t// the internal meta data accordingly.\r\n\t\t\tif (me._data !== data) {\r\n\t\t\t\tif (me._data) {\r\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\r\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlistenArrayEvents(data, me);\r\n\t\t\t\tme._data = data;\r\n\t\t\t}\r\n\r\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\r\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\r\n\t\t\tme.resyncElements();\r\n\t\t},\r\n\r\n\t\tupdate: helpers.noop,\r\n\r\n\t\ttransition: function(easingValue) {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar elements = meta.data || [];\r\n\t\t\tvar ilen = elements.length;\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\tfor (; i<ilen; ++i) {\r\n\t\t\t\telements[i].transition(easingValue);\r\n\t\t\t}\r\n\r\n\t\t\tif (meta.dataset) {\r\n\t\t\t\tmeta.dataset.transition(easingValue);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar meta = this.getMeta();\r\n\t\t\tvar elements = meta.data || [];\r\n\t\t\tvar ilen = elements.length;\r\n\t\t\tvar i = 0;\r\n\r\n\t\t\tif (meta.dataset) {\r\n\t\t\t\tmeta.dataset.draw();\r\n\t\t\t}\r\n\r\n\t\t\tfor (; i<ilen; ++i) {\r\n\t\t\t\telements[i].draw();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveHoverStyle: function(element, elementOpts) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n\t\t},\r\n\r\n\t\tsetHoverStyle: function(element) {\r\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\r\n\t\t\t\tindex = element._index,\r\n\t\t\t\tcustom = element.custom || {},\r\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\r\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\r\n\t\t\t\tmodel = element._model;\r\n\r\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tresyncElements: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar meta = me.getMeta();\r\n\t\t\tvar data = me.getDataset().data;\r\n\t\t\tvar numMeta = meta.data.length;\r\n\t\t\tvar numData = data.length;\r\n\r\n\t\t\tif (numData < numMeta) {\r\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\r\n\t\t\t} else if (numData > numMeta) {\r\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tinsertElements: function(start, count) {\r\n\t\t\tfor (var i=0; i<count; ++i) {\r\n\t\t\t\tthis.addElementAndReset(start + i);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataPush: function() {\r\n\t\t\tthis.insertElements(this.getDataset().data.length-1, arguments.length);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataPop: function() {\r\n\t\t\tthis.getMeta().data.pop();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataShift: function() {\r\n\t\t\tthis.getMeta().data.shift();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataSplice: function(start, count) {\r\n\t\t\tthis.getMeta().data.splice(start, count);\r\n\t\t\tthis.insertElements(start, arguments.length - 2);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\tonDataUnshift: function() {\r\n\t\t\tthis.insertElements(0, arguments.length);\r\n\t\t}\r\n\t});\r\n\r\n\tChart.DatasetController.extend = helpers.inherits;\r\n};\r\n\r\n},{}],25:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar color = require(2);\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tfunction interpolate(start, view, model, ease) {\r\n\t\tvar keys = Object.keys(model);\r\n\t\tvar i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n\t\tfor (i=0, ilen=keys.length; i<ilen; ++i) {\r\n\t\t\tkey = keys[i];\r\n\r\n\t\t\ttarget = model[key];\r\n\r\n\t\t\t// if a value is added to the model after pivot() has been called, the view\r\n\t\t\t// doesn't contain it, so let's initialize the view to the target value.\r\n\t\t\tif (!view.hasOwnProperty(key)) {\r\n\t\t\t\tview[key] = target;\r\n\t\t\t}\r\n\r\n\t\t\tactual = view[key];\r\n\r\n\t\t\tif (actual === target || key[0] === '_') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (!start.hasOwnProperty(key)) {\r\n\t\t\t\tstart[key] = actual;\r\n\t\t\t}\r\n\r\n\t\t\torigin = start[key];\r\n\r\n\t\t\ttype = typeof(target);\r\n\r\n\t\t\tif (type === typeof(origin)) {\r\n\t\t\t\tif (type === 'string') {\r\n\t\t\t\t\tc0 = color(origin);\r\n\t\t\t\t\tif (c0.valid) {\r\n\t\t\t\t\t\tc1 = color(target);\r\n\t\t\t\t\t\tif (c1.valid) {\r\n\t\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n\t\t\t\t\tview[key] = origin + (target - origin) * ease;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tview[key] = target;\r\n\t\t}\r\n\t}\r\n\r\n\tChart.elements = {};\r\n\r\n\tChart.Element = function(configuration) {\r\n\t\thelpers.extend(this, configuration);\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t};\r\n\r\n\thelpers.extend(Chart.Element.prototype, {\r\n\r\n\t\tinitialize: function() {\r\n\t\t\tthis.hidden = false;\r\n\t\t},\r\n\r\n\t\tpivot: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (!me._view) {\r\n\t\t\t\tme._view = helpers.clone(me._model);\r\n\t\t\t}\r\n\t\t\tme._start = {};\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\ttransition: function(ease) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar model = me._model;\r\n\t\t\tvar start = me._start;\r\n\t\t\tvar view = me._view;\r\n\r\n\t\t\t// No animation -> No Transition\r\n\t\t\tif (!model || ease === 1) {\r\n\t\t\t\tme._view = model;\r\n\t\t\t\tme._start = null;\r\n\t\t\t\treturn me;\r\n\t\t\t}\r\n\r\n\t\t\tif (!view) {\r\n\t\t\t\tview = me._view = {};\r\n\t\t\t}\r\n\r\n\t\t\tif (!start) {\r\n\t\t\t\tstart = me._start = {};\r\n\t\t\t}\r\n\r\n\t\t\tinterpolate(start, view, model, ease);\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\r\n\t\ttooltipPosition: function() {\r\n\t\t\treturn {\r\n\t\t\t\tx: this._model.x,\r\n\t\t\t\ty: this._model.y\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\thasValue: function() {\r\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n\t\t}\r\n\t});\r\n\r\n\tChart.Element.extend = helpers.inherits;\r\n};\r\n\r\n},{\"2\":2}],26:[function(require,module,exports){\r\n/* global window: false */\r\n/* global document: false */\r\n'use strict';\r\n\r\nvar color = require(2);\r\n\r\nmodule.exports = function(Chart) {\r\n\t// Global Chart helpers object for utility methods and classes\r\n\tvar helpers = Chart.helpers = {};\r\n\r\n\t// -- Basic js utility methods\r\n\thelpers.each = function(loopable, callback, self, reverse) {\r\n\t\t// Check to see if null or undefined firstly.\r\n\t\tvar i, len;\r\n\t\tif (helpers.isArray(loopable)) {\r\n\t\t\tlen = loopable.length;\r\n\t\t\tif (reverse) {\r\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\t\tcallback.call(self, loopable[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof loopable === 'object') {\r\n\t\t\tvar keys = Object.keys(loopable);\r\n\t\t\tlen = keys.length;\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.clone = function(obj) {\r\n\t\tvar objClone = {};\r\n\t\thelpers.each(obj, function(value, key) {\r\n\t\t\tif (helpers.isArray(value)) {\r\n\t\t\t\tobjClone[key] = value.slice(0);\r\n\t\t\t} else if (typeof value === 'object' && value !== null) {\r\n\t\t\t\tobjClone[key] = helpers.clone(value);\r\n\t\t\t} else {\r\n\t\t\t\tobjClone[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn objClone;\r\n\t};\r\n\thelpers.extend = function(base) {\r\n\t\tvar setFn = function(value, key) {\r\n\t\t\tbase[key] = value;\r\n\t\t};\r\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\r\n\t\t\thelpers.each(arguments[i], setFn);\r\n\t\t}\r\n\t\treturn base;\r\n\t};\r\n\t// Need a special merge function to chart configs since they are now grouped\r\n\thelpers.configMerge = function(_base) {\r\n\t\tvar base = helpers.clone(_base);\r\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n\t\t\thelpers.each(extension, function(value, key) {\r\n\t\t\t\tvar baseHasProperty = base.hasOwnProperty(key);\r\n\t\t\t\tvar baseVal = baseHasProperty ? base[key] : {};\r\n\r\n\t\t\t\tif (key === 'scales') {\r\n\t\t\t\t\t// Scale config merging is complex. Add our own function here for that\r\n\t\t\t\t\tbase[key] = helpers.scaleMerge(baseVal, value);\r\n\t\t\t\t} else if (key === 'scale') {\r\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\r\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\r\n\t\t\t\t} else if (baseHasProperty\r\n\t\t\t\t\t\t&& typeof baseVal === 'object'\r\n\t\t\t\t\t\t&& !helpers.isArray(baseVal)\r\n\t\t\t\t\t\t&& baseVal !== null\r\n\t\t\t\t\t\t&& typeof value === 'object'\r\n\t\t\t\t\t\t&& !helpers.isArray(value)) {\r\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\t\tbase[key] = value;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.scaleMerge = function(_base, extension) {\r\n\t\tvar base = helpers.clone(_base);\r\n\r\n\t\thelpers.each(extension, function(value, key) {\r\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\r\n\t\t\t\t// These properties are arrays of items\r\n\t\t\t\tif (base.hasOwnProperty(key)) {\r\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\r\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Type is the same\r\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbase[key] = [];\r\n\t\t\t\t\thelpers.each(value, function(valueObj) {\r\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\r\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\r\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// can just overwrite the value in this case\r\n\t\t\t\tbase[key] = value;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn base;\r\n\t};\r\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn defaultValue;\r\n\t\t}\r\n\r\n\t\tif (helpers.isArray(value)) {\r\n\t\t\treturn index < value.length ? value[index] : defaultValue;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\thelpers.getValueOrDefault = function(value, defaultValue) {\r\n\t\treturn value === undefined ? defaultValue : value;\r\n\t};\r\n\thelpers.indexOf = Array.prototype.indexOf?\r\n\t\tfunction(array, item) {\r\n\t\t\treturn array.indexOf(item);\r\n\t\t}:\r\n\t\tfunction(array, item) {\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (array[i] === item) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.where = function(collection, filterCallback) {\r\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\r\n\t\t\treturn collection.filter(filterCallback);\r\n\t\t}\r\n\t\tvar filtered = [];\r\n\r\n\t\thelpers.each(collection, function(item) {\r\n\t\t\tif (filterCallback(item)) {\r\n\t\t\t\tfiltered.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn filtered;\r\n\t};\r\n\thelpers.findIndex = Array.prototype.findIndex?\r\n\t\tfunction(array, callback, scope) {\r\n\t\t\treturn array.findIndex(callback, scope);\r\n\t\t} :\r\n\t\tfunction(array, callback, scope) {\r\n\t\t\tscope = scope === undefined? array : scope;\r\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t};\r\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to start of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = -1;\r\n\t\t}\r\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n\t\t// Default to end of the array\r\n\t\tif (startIndex === undefined || startIndex === null) {\r\n\t\t\tstartIndex = arrayToSearch.length;\r\n\t\t}\r\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\r\n\t\t\tvar currentItem = arrayToSearch[i];\r\n\t\t\tif (filterCallback(currentItem)) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.inherits = function(extensions) {\r\n\t\t// Basic javascript inheritance based on the model created in Backbone.js\r\n\t\tvar me = this;\r\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n\t\t\treturn me.apply(this, arguments);\r\n\t\t};\r\n\r\n\t\tvar Surrogate = function() {\r\n\t\t\tthis.constructor = ChartElement;\r\n\t\t};\r\n\t\tSurrogate.prototype = me.prototype;\r\n\t\tChartElement.prototype = new Surrogate();\r\n\r\n\t\tChartElement.extend = helpers.inherits;\r\n\r\n\t\tif (extensions) {\r\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\r\n\t\t}\r\n\r\n\t\tChartElement.__super__ = me.prototype;\r\n\r\n\t\treturn ChartElement;\r\n\t};\r\n\thelpers.noop = function() {};\r\n\thelpers.uid = (function() {\r\n\t\tvar id = 0;\r\n\t\treturn function() {\r\n\t\t\treturn id++;\r\n\t\t};\r\n\t}());\r\n\t// -- Math methods\r\n\thelpers.isNumber = function(n) {\r\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n\t};\r\n\thelpers.almostEquals = function(x, y, epsilon) {\r\n\t\treturn Math.abs(x - y) < epsilon;\r\n\t};\r\n\thelpers.almostWhole = function(x, epsilon) {\r\n\t\tvar rounded = Math.round(x);\r\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n\t};\r\n\thelpers.max = function(array) {\r\n\t\treturn array.reduce(function(max, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.max(max, value);\r\n\t\t\t}\r\n\t\t\treturn max;\r\n\t\t}, Number.NEGATIVE_INFINITY);\r\n\t};\r\n\thelpers.min = function(array) {\r\n\t\treturn array.reduce(function(min, value) {\r\n\t\t\tif (!isNaN(value)) {\r\n\t\t\t\treturn Math.min(min, value);\r\n\t\t\t}\r\n\t\t\treturn min;\r\n\t\t}, Number.POSITIVE_INFINITY);\r\n\t};\r\n\thelpers.sign = Math.sign?\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.sign(x);\r\n\t\t} :\r\n\t\tfunction(x) {\r\n\t\t\tx = +x; // convert to a number\r\n\t\t\tif (x === 0 || isNaN(x)) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn x > 0 ? 1 : -1;\r\n\t\t};\r\n\thelpers.log10 = Math.log10?\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.log10(x);\r\n\t\t} :\r\n\t\tfunction(x) {\r\n\t\t\treturn Math.log(x) / Math.LN10;\r\n\t\t};\r\n\thelpers.toRadians = function(degrees) {\r\n\t\treturn degrees * (Math.PI / 180);\r\n\t};\r\n\thelpers.toDegrees = function(radians) {\r\n\t\treturn radians * (180 / Math.PI);\r\n\t};\r\n\t// Gets the angle from vertical upright to the point about a centre.\r\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\r\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n\t\tif (angle < (-0.5 * Math.PI)) {\r\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tangle: angle,\r\n\t\t\tdistance: radialDistanceFromCenter\r\n\t\t};\r\n\t};\r\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\r\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n\t};\r\n\thelpers.aliasPixel = function(pixelWidth) {\r\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n\t};\r\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\r\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n\t\t// This function must also respect \"skipped\" points\r\n\r\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\r\n\t\t\tcurrent = middlePoint,\r\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n\t\tvar s01 = d01 / (d01 + d12);\r\n\t\tvar s12 = d12 / (d01 + d12);\r\n\r\n\t\t// If all points are the same, s01 & s02 will be inf\r\n\t\ts01 = isNaN(s01) ? 0 : s01;\r\n\t\ts12 = isNaN(s12) ? 0 : s12;\r\n\r\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\r\n\t\tvar fb = t * s12;\r\n\r\n\t\treturn {\r\n\t\t\tprevious: {\r\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\r\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\r\n\t\t\t},\r\n\t\t\tnext: {\r\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\r\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\r\n\thelpers.splineCurveMonotone = function(points) {\r\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\r\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\r\n\t\t// between the dataset discrete points due to the interpolation.\r\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\r\n\t\t\treturn {\r\n\t\t\t\tmodel: point._model,\r\n\t\t\t\tdeltaK: 0,\r\n\t\t\t\tmK: 0\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\r\n\t\tvar pointsLen = pointsWithTangents.length;\r\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\r\n\t\tfor (i = 0; i < pointsLen; ++i) {\r\n\t\t\tpointCurrent = pointsWithTangents[i];\r\n\t\t\tif (pointCurrent.model.skip) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\r\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\r\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\r\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\r\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\r\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n\t\t\t\tpointCurrent.mK = 0;\r\n\t\t\t} else {\r\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Adjust tangents to ensure monotonic properties\r\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\r\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\r\n\t\t\tpointCurrent = pointsWithTangents[i];\r\n\t\t\tpointAfter = pointsWithTangents[i + 1];\r\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\r\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n\t\t\tif (squaredMagnitude <= 9) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\r\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n\t\t}\r\n\r\n\t\t// Compute control points\r\n\t\tvar deltaX;\r\n\t\tfor (i = 0; i < pointsLen; ++i) {\r\n\t\t\tpointCurrent = pointsWithTangents[i];\r\n\t\t\tif (pointCurrent.model.skip) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\r\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n\t\t\t}\r\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\r\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\thelpers.nextItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n\t\t}\r\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n\t};\r\n\thelpers.previousItem = function(collection, index, loop) {\r\n\t\tif (loop) {\r\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n\t\t}\r\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\r\n\t};\r\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\r\n\thelpers.niceNum = function(range, round) {\r\n\t\tvar exponent = Math.floor(helpers.log10(range));\r\n\t\tvar fraction = range / Math.pow(10, exponent);\r\n\t\tvar niceFraction;\r\n\r\n\t\tif (round) {\r\n\t\t\tif (fraction < 1.5) {\r\n\t\t\t\tniceFraction = 1;\r\n\t\t\t} else if (fraction < 3) {\r\n\t\t\t\tniceFraction = 2;\r\n\t\t\t} else if (fraction < 7) {\r\n\t\t\t\tniceFraction = 5;\r\n\t\t\t} else {\r\n\t\t\t\tniceFraction = 10;\r\n\t\t\t}\r\n\t\t} else if (fraction <= 1.0) {\r\n\t\t\tniceFraction = 1;\r\n\t\t} else if (fraction <= 2) {\r\n\t\t\tniceFraction = 2;\r\n\t\t} else if (fraction <= 5) {\r\n\t\t\tniceFraction = 5;\r\n\t\t} else {\r\n\t\t\tniceFraction = 10;\r\n\t\t}\r\n\r\n\t\treturn niceFraction * Math.pow(10, exponent);\r\n\t};\r\n\t// Easing functions adapted from Robert Penner's easing equations\r\n\t// http://www.robertpenner.com/easing/\r\n\tvar easingEffects = helpers.easingEffects = {\r\n\t\tlinear: function(t) {\r\n\t\t\treturn t;\r\n\t\t},\r\n\t\teaseInQuad: function(t) {\r\n\t\t\treturn t * t;\r\n\t\t},\r\n\t\teaseOutQuad: function(t) {\r\n\t\t\treturn -1 * t * (t - 2);\r\n\t\t},\r\n\t\teaseInOutQuad: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\r\n\t\t},\r\n\t\teaseInCubic: function(t) {\r\n\t\t\treturn t * t * t;\r\n\t\t},\r\n\t\teaseOutCubic: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutCubic: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\r\n\t\t},\r\n\t\teaseInQuart: function(t) {\r\n\t\t\treturn t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuart: function(t) {\r\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n\t\t},\r\n\t\teaseInOutQuart: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n\t\t},\r\n\t\teaseInQuint: function(t) {\r\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\r\n\t\t},\r\n\t\teaseOutQuint: function(t) {\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n\t\t},\r\n\t\teaseInOutQuint: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n\t\t},\r\n\t\teaseInSine: function(t) {\r\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n\t\t},\r\n\t\teaseOutSine: function(t) {\r\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n\t\t},\r\n\t\teaseInOutSine: function(t) {\r\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n\t\t},\r\n\t\teaseInExpo: function(t) {\r\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n\t\t},\r\n\t\teaseOutExpo: function(t) {\r\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n\t\t},\r\n\t\teaseInOutExpo: function(t) {\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif (t === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n\t\t},\r\n\t\teaseInCirc: function(t) {\r\n\t\t\tif (t >= 1) {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n\t\t},\r\n\t\teaseOutCirc: function(t) {\r\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n\t\t},\r\n\t\teaseInOutCirc: function(t) {\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n\t\t},\r\n\t\teaseInElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t},\r\n\t\teaseOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1) === 1) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * 0.3;\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n\t\t},\r\n\t\teaseInOutElastic: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tvar p = 0;\r\n\t\t\tvar a = 1;\r\n\t\t\tif (t === 0) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif ((t /= 1 / 2) === 2) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (!p) {\r\n\t\t\t\tp = 1 * (0.3 * 1.5);\r\n\t\t\t}\r\n\t\t\tif (a < Math.abs(1)) {\r\n\t\t\t\ta = 1;\r\n\t\t\t\ts = p / 4;\r\n\t\t\t} else {\r\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\r\n\t\t\t}\r\n\t\t\tif (t < 1) {\r\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n\t\t\t}\r\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t},\r\n\t\teaseInBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n\t\t},\r\n\t\teaseOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n\t\t},\r\n\t\teaseInOutBack: function(t) {\r\n\t\t\tvar s = 1.70158;\r\n\t\t\tif ((t /= 1 / 2) < 1) {\r\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n\t\t\t}\r\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n\t\t},\r\n\t\teaseInBounce: function(t) {\r\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\r\n\t\t},\r\n\t\teaseOutBounce: function(t) {\r\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * t * t);\r\n\t\t\t} else if (t < (2 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n\t\t\t} else if (t < (2.5 / 2.75)) {\r\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n\t\t\t}\r\n\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n\t\t},\r\n\t\teaseInOutBounce: function(t) {\r\n\t\t\tif (t < 1 / 2) {\r\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\r\n\t\t\t}\r\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n\t\t}\r\n\t};\r\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n\thelpers.requestAnimFrame = (function() {\r\n\t\tif (typeof window === 'undefined') {\r\n\t\t\treturn function(callback) {\r\n\t\t\t\tcallback();\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn window.requestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\twindow.oRequestAnimationFrame ||\r\n\t\t\twindow.msRequestAnimationFrame ||\r\n\t\t\tfunction(callback) {\r\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t\t};\r\n\t}());\r\n\t// -- DOM methods\r\n\thelpers.getRelativePosition = function(evt, chart) {\r\n\t\tvar mouseX, mouseY;\r\n\t\tvar e = evt.originalEvent || evt,\r\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\r\n\t\t\tboundingRect = canvas.getBoundingClientRect();\r\n\r\n\t\tvar touches = e.touches;\r\n\t\tif (touches && touches.length > 0) {\r\n\t\t\tmouseX = touches[0].clientX;\r\n\t\t\tmouseY = touches[0].clientY;\r\n\r\n\t\t} else {\r\n\t\t\tmouseX = e.clientX;\r\n\t\t\tmouseY = e.clientY;\r\n\t\t}\r\n\r\n\t\t// Scale mouse coordinates into canvas coordinates\r\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\r\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n\t\treturn {\r\n\t\t\tx: mouseX,\r\n\t\t\ty: mouseY\r\n\t\t};\r\n\r\n\t};\r\n\thelpers.addEvent = function(node, eventType, method) {\r\n\t\tif (node.addEventListener) {\r\n\t\t\tnode.addEventListener(eventType, method);\r\n\t\t} else if (node.attachEvent) {\r\n\t\t\tnode.attachEvent('on' + eventType, method);\r\n\t\t} else {\r\n\t\t\tnode['on' + eventType] = method;\r\n\t\t}\r\n\t};\r\n\thelpers.removeEvent = function(node, eventType, handler) {\r\n\t\tif (node.removeEventListener) {\r\n\t\t\tnode.removeEventListener(eventType, handler, false);\r\n\t\t} else if (node.detachEvent) {\r\n\t\t\tnode.detachEvent('on' + eventType, handler);\r\n\t\t} else {\r\n\t\t\tnode['on' + eventType] = helpers.noop;\r\n\t\t}\r\n\t};\r\n\r\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\r\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\r\n\t\tvar valueInPixels;\r\n\t\tif (typeof(styleValue) === 'string') {\r\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\r\n\r\n\t\t\tif (styleValue.indexOf('%') !== -1) {\r\n\t\t\t\t// percentage * size in dimension\r\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalueInPixels = styleValue;\r\n\t\t}\r\n\r\n\t\treturn valueInPixels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the given value contains an effective constraint.\r\n\t * @private\r\n\t */\r\n\tfunction isConstrainedValue(value) {\r\n\t\treturn value !== undefined && value !== null && value !== 'none';\r\n\t}\r\n\r\n\t// Private helper to get a constraint dimension\r\n\t// @param domNode : the node to check the constraint on\r\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\r\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n\t\tvar view = document.defaultView;\r\n\t\tvar parentNode = domNode.parentNode;\r\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\r\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\r\n\t\tvar infinity = Number.POSITIVE_INFINITY;\r\n\r\n\t\tif (hasCNode || hasCContainer) {\r\n\t\t\treturn Math.min(\r\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n\t\t}\r\n\r\n\t\treturn 'none';\r\n\t}\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintWidth = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n\t};\r\n\t// returns Number or undefined if no constraint\r\n\thelpers.getConstraintHeight = function(domNode) {\r\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n\t};\r\n\thelpers.getMaximumWidth = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\r\n\t\tvar cw = helpers.getConstraintWidth(domNode);\r\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\r\n\t};\r\n\thelpers.getMaximumHeight = function(domNode) {\r\n\t\tvar container = domNode.parentNode;\r\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\r\n\t\tvar ch = helpers.getConstraintHeight(domNode);\r\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\r\n\t};\r\n\thelpers.getStyle = function(el, property) {\r\n\t\treturn el.currentStyle ?\r\n\t\t\tel.currentStyle[property] :\r\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n\t};\r\n\thelpers.retinaScale = function(chart) {\r\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n\t\tif (pixelRatio === 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar canvas = chart.canvas;\r\n\t\tvar height = chart.height;\r\n\t\tvar width = chart.width;\r\n\r\n\t\tcanvas.height = height * pixelRatio;\r\n\t\tcanvas.width = width * pixelRatio;\r\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n\t\t// If no style has been set on the canvas, the render size is used as display size,\r\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\r\n\t\tcanvas.style.height = height + 'px';\r\n\t\tcanvas.style.width = width + 'px';\r\n\t};\r\n\t// -- Canvas methods\r\n\thelpers.clear = function(chart) {\r\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n\t};\r\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n\t};\r\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n\t\tcache = cache || {};\r\n\t\tvar data = cache.data = cache.data || {};\r\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n\t\tif (cache.font !== font) {\r\n\t\t\tdata = cache.data = {};\r\n\t\t\tgc = cache.garbageCollect = [];\r\n\t\t\tcache.font = font;\r\n\t\t}\r\n\r\n\t\tctx.font = font;\r\n\t\tvar longest = 0;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\r\n\t\t\t} else if (helpers.isArray(thing)) {\r\n\t\t\t\t// if it is an array lets measure each element\r\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\r\n\t\t\t\thelpers.each(thing, function(nestedThing) {\r\n\t\t\t\t\t// Undefined strings and arrays should not be measured\r\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tvar gcLen = gc.length / 2;\r\n\t\tif (gcLen > arrayOfThings.length) {\r\n\t\t\tfor (var i = 0; i < gcLen; i++) {\r\n\t\t\t\tdelete data[gc[i]];\r\n\t\t\t}\r\n\t\t\tgc.splice(0, gcLen);\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\r\n\t\tvar textWidth = data[string];\r\n\t\tif (!textWidth) {\r\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\r\n\t\t\tgc.push(string);\r\n\t\t}\r\n\t\tif (textWidth > longest) {\r\n\t\t\tlongest = textWidth;\r\n\t\t}\r\n\t\treturn longest;\r\n\t};\r\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\r\n\t\tvar numberOfLines = 1;\r\n\t\thelpers.each(arrayOfThings, function(thing) {\r\n\t\t\tif (helpers.isArray(thing)) {\r\n\t\t\t\tif (thing.length > numberOfLines) {\r\n\t\t\t\t\tnumberOfLines = thing.length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn numberOfLines;\r\n\t};\r\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(x + radius, y);\r\n\t\tctx.lineTo(x + width - radius, y);\r\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\tctx.lineTo(x + radius, y + height);\r\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\tctx.lineTo(x, y + radius);\r\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\tctx.closePath();\r\n\t};\r\n\r\n\thelpers.color = !color?\r\n\t\tfunction(value) {\r\n\t\t\tconsole.error('Color.js not found!');\r\n\t\t\treturn value;\r\n\t\t} :\r\n\t\tfunction(value) {\r\n\t\t\t/* global CanvasGradient */\r\n\t\t\tif (value instanceof CanvasGradient) {\r\n\t\t\t\tvalue = Chart.defaults.global.defaultColor;\r\n\t\t\t}\r\n\r\n\t\t\treturn color(value);\r\n\t\t};\r\n\r\n\thelpers.isArray = Array.isArray?\r\n\t\tfunction(obj) {\r\n\t\t\treturn Array.isArray(obj);\r\n\t\t} :\r\n\t\tfunction(obj) {\r\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n\t\t};\r\n\t// ! @see http://stackoverflow.com/a/14853974\r\n\thelpers.arrayEquals = function(a0, a1) {\r\n\t\tvar i, ilen, v0, v1;\r\n\r\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\r\n\t\t\tv0 = a0[i];\r\n\t\t\tv1 = a1[i];\r\n\r\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\r\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (v0 !== v1) {\r\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\thelpers.callback = function(fn, args, thisArg) {\r\n\t\tif (fn && typeof fn.call === 'function') {\r\n\t\t\tfn.apply(thisArg, args);\r\n\t\t}\r\n\t};\r\n\thelpers.getHoverColor = function(colorValue) {\r\n\t\t/* global CanvasPattern */\r\n\t\treturn (colorValue instanceof CanvasPattern) ?\r\n\t\t\tcolorValue :\r\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n\t};\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart.helpers#callback instead.\r\n\t * @function Chart.helpers#callCallback\r\n\t * @deprecated since version 2.6.0\r\n\t * @todo remove at version 3\r\n\t */\r\n\thelpers.callCallback = helpers.callback;\r\n};\r\n\r\n},{\"2\":2}],27:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t/**\r\n\t * Helper function to get relative position for an event\r\n\t * @param {Event|IEvent} event - The event to get the position for\r\n\t * @param {Chart} chart - The chart\r\n\t * @returns {Point} the event position\r\n\t */\r\n\tfunction getRelativePosition(e, chart) {\r\n\t\tif (e.native) {\r\n\t\t\treturn {\r\n\t\t\t\tx: e.x,\r\n\t\t\t\ty: e.y\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn helpers.getRelativePosition(e, chart);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to traverse all of the visible elements in the chart\r\n\t * @param chart {chart} the chart\r\n\t * @param handler {Function} the callback to execute for each visible item\r\n\t */\r\n\tfunction parseVisibleItems(chart, handler) {\r\n\t\tvar datasets = chart.data.datasets;\r\n\t\tvar meta, i, j, ilen, jlen;\r\n\r\n\t\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n\t\t\tif (!chart.isDatasetVisible(i)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n\t\t\t\tvar element = meta.data[j];\r\n\t\t\t\tif (!element._view.skip) {\r\n\t\t\t\t\thandler(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to get the items that intersect the event position\r\n\t * @param items {ChartElement[]} elements to filter\r\n\t * @param position {Point} the point to be nearest to\r\n\t * @return {ChartElement[]} the nearest items\r\n\t */\r\n\tfunction getIntersectItems(chart, position) {\r\n\t\tvar elements = [];\r\n\r\n\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n\t * @param chart {Chart} the chart to look at elements from\r\n\t * @param position {Point} the point to be nearest to\r\n\t * @param intersect {Boolean} if true, only consider items that intersect the position\r\n\t * @param distanceMetric {Function} Optional function to provide the distance between\r\n\t * @return {ChartElement[]} the nearest items\r\n\t */\r\n\tfunction getNearestItems(chart, position, intersect, distanceMetric) {\r\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\r\n\t\tvar nearestItems = [];\r\n\r\n\t\tif (!distanceMetric) {\r\n\t\t\tdistanceMetric = helpers.distanceBetweenPoints;\r\n\t\t}\r\n\r\n\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\tif (intersect && !element.inRange(position.x, position.y)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar center = element.getCenterPoint();\r\n\t\t\tvar distance = distanceMetric(position, center);\r\n\r\n\t\t\tif (distance < minDistance) {\r\n\t\t\t\tnearestItems = [element];\r\n\t\t\t\tminDistance = distance;\r\n\t\t\t} else if (distance === minDistance) {\r\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\r\n\t\t\t\tnearestItems.push(element);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn nearestItems;\r\n\t}\r\n\r\n\tfunction indexMode(chart, e, options) {\r\n\t\tvar position = getRelativePosition(e, chart);\r\n\t\tvar distanceMetric = function(pt1, pt2) {\r\n\t\t\treturn Math.abs(pt1.x - pt2.x);\r\n\t\t};\r\n\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n\t\tvar elements = [];\r\n\r\n\t\tif (!items.length) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex),\r\n\t\t\t\t\telement = meta.data[items[0]._index];\r\n\r\n\t\t\t\t// don't count items that are skipped (null data)\r\n\t\t\t\tif (element && !element._view.skip) {\r\n\t\t\t\t\telements.push(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn elements;\r\n\t}\r\n\r\n\t/**\r\n\t * @interface IInteractionOptions\r\n\t */\r\n\t/**\r\n\t * If true, only consider items that intersect the point\r\n\t * @name IInterfaceOptions#boolean\r\n\t * @type Boolean\r\n\t */\r\n\r\n\t/**\r\n\t * Contains interaction related functions\r\n\t * @namespace Chart.Interaction\r\n\t */\r\n\tChart.Interaction = {\r\n\t\t// Helper function for different modes\r\n\t\tmodes: {\r\n\t\t\tsingle: function(chart, e) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart);\r\n\t\t\t\tvar elements = [];\r\n\r\n\t\t\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\t\t\telements.push(element);\r\n\t\t\t\t\t\treturn elements;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn elements.slice(0, 1);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @function Chart.Interaction.modes.label\r\n\t\t\t * @deprecated since version 2.4.0\r\n\t \t\t * @todo remove at version 3\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tlabel: indexMode,\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n\t\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n\t\t\t * @function Chart.Interaction.modes.index\r\n\t\t\t * @since v2.4.0\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tindex: indexMode,\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n\t\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n\t\t\t * @function Chart.Interaction.modes.dataset\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tdataset: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart);\r\n\t\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\r\n\r\n\t\t\t\tif (items.length > 0) {\r\n\t\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn items;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @function Chart.Interaction.modes.x-axis\r\n\t\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n\t\t\t * @todo remove at version 3\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t'x-axis': function(chart, e) {\r\n\t\t\t\treturn indexMode(chart, e, true);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Point mode returns all elements that hit test based on the event position\r\n\t\t\t * of the event\r\n\t\t\t * @function Chart.Interaction.modes.intersect\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tpoint: function(chart, e) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart);\r\n\t\t\t\treturn getIntersectItems(chart, position);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * nearest mode returns the element closest to the point\r\n\t\t\t * @function Chart.Interaction.modes.intersect\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tnearest: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart);\r\n\t\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect);\r\n\r\n\t\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\r\n\t\t\t\tif (nearestItems.length > 1) {\r\n\t\t\t\t\tnearestItems.sort(function(a, b) {\r\n\t\t\t\t\t\tvar sizeA = a.getArea();\r\n\t\t\t\t\t\tvar sizeB = b.getArea();\r\n\t\t\t\t\t\tvar ret = sizeA - sizeB;\r\n\r\n\t\t\t\t\t\tif (ret === 0) {\r\n\t\t\t\t\t\t\t// if equal sort by dataset index\r\n\t\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn ret;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return only 1 item\r\n\t\t\t\treturn nearestItems.slice(0, 1);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * x mode returns the elements that hit-test at the current x coordinate\r\n\t\t\t * @function Chart.Interaction.modes.x\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\tx: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart);\r\n\t\t\t\tvar items = [];\r\n\t\t\t\tvar intersectsItem = false;\r\n\r\n\t\t\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\t\t\tif (element.inXRange(position.x)) {\r\n\t\t\t\t\t\titems.push(element);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\t\t\tintersectsItem = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\r\n\t\t\t\t// that intersect the position, return nothing\r\n\t\t\t\tif (options.intersect && !intersectsItem) {\r\n\t\t\t\t\titems = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn items;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * y mode returns the elements that hit-test at the current y coordinate\r\n\t\t\t * @function Chart.Interaction.modes.y\r\n\t\t\t * @param chart {chart} the chart we are returning items from\r\n\t\t\t * @param e {Event} the event we are find things at\r\n\t\t\t * @param options {IInteractionOptions} options to use\r\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n\t\t\t */\r\n\t\t\ty: function(chart, e, options) {\r\n\t\t\t\tvar position = getRelativePosition(e, chart);\r\n\t\t\t\tvar items = [];\r\n\t\t\t\tvar intersectsItem = false;\r\n\r\n\t\t\t\tparseVisibleItems(chart, function(element) {\r\n\t\t\t\t\tif (element.inYRange(position.y)) {\r\n\t\t\t\t\t\titems.push(element);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\r\n\t\t\t\t\t\tintersectsItem = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\r\n\t\t\t\t// that intersect the position, return nothing\r\n\t\t\t\tif (options.intersect && !intersectsItem) {\r\n\t\t\t\t\titems = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn items;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],28:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function() {\r\n\r\n\t// Occupy the global variable of Chart, and create a simple base class\r\n\tvar Chart = function(item, config) {\r\n\t\tthis.construct(item, config);\r\n\t\treturn this;\r\n\t};\r\n\r\n\t// Globally expose the defaults to allow for user updating/changing\r\n\tChart.defaults = {\r\n\t\tglobal: {\r\n\t\t\tresponsive: true,\r\n\t\t\tresponsiveAnimationDuration: 0,\r\n\t\t\tmaintainAspectRatio: true,\r\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n\t\t\thover: {\r\n\t\t\t\tonHover: null,\r\n\t\t\t\tmode: 'nearest',\r\n\t\t\t\tintersect: true,\r\n\t\t\t\tanimationDuration: 400\r\n\t\t\t},\r\n\t\t\tonClick: null,\r\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\r\n\t\t\tdefaultFontColor: '#666',\r\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n\t\t\tdefaultFontSize: 12,\r\n\t\t\tdefaultFontStyle: 'normal',\r\n\t\t\tshowLines: true,\r\n\r\n\t\t\t// Element defaults defined in element extensions\r\n\t\t\telements: {},\r\n\r\n\t\t\t// Legend callback string\r\n\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\tvar text = [];\r\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\r\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\r\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n\t\t\t\t\tif (chart.data.datasets[i].label) {\r\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t}\r\n\t\t\t\ttext.push('</ul>');\r\n\r\n\t\t\t\treturn text.join('');\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tChart.Chart = Chart;\r\n\r\n\treturn Chart;\r\n};\r\n\r\n},{}],29:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tfunction filterByPosition(array, position) {\r\n\t\treturn helpers.where(array, function(v) {\r\n\t\t\treturn v.position === position;\r\n\t\t});\r\n\t}\r\n\r\n\tfunction sortByWeight(array, reverse) {\r\n\t\tarray.forEach(function(v, i) {\r\n\t\t\tv._tmpIndex_ = i;\r\n\t\t\treturn v;\r\n\t\t});\r\n\t\tarray.sort(function(a, b) {\r\n\t\t\tvar v0 = reverse ? b : a;\r\n\t\t\tvar v1 = reverse ? a : b;\r\n\t\t\treturn v0.weight === v1.weight ?\r\n\t\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\r\n\t\t\t\tv0.weight - v1.weight;\r\n\t\t});\r\n\t\tarray.forEach(function(v) {\r\n\t\t\tdelete v._tmpIndex_;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @interface ILayoutItem\r\n\t * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n\t * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n\t * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n\t * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n\t * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n\t * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n\t * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n\t * @prop {Number} width - Width of item. Must be valid after update()\r\n\t * @prop {Number} height - Height of item. Must be valid after update()\r\n\t * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n\t * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n\t * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n\t * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n\t */\r\n\r\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n\t// It is this service's responsibility of carrying out that layout.\r\n\tChart.layoutService = {\r\n\t\tdefaults: {},\r\n\r\n\t\t/**\r\n\t\t * Register a box to a chart.\r\n\t\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n\t\t * @param {Chart} chart - the chart to use\r\n\t\t * @param {ILayoutItem} item - the item to add to be layed out\r\n\t\t */\r\n\t\taddBox: function(chart, item) {\r\n\t\t\tif (!chart.boxes) {\r\n\t\t\t\tchart.boxes = [];\r\n\t\t\t}\r\n\r\n\t\t\t// initialize item with default values\r\n\t\t\titem.fullWidth = item.fullWidth || false;\r\n\t\t\titem.position = item.position || 'top';\r\n\t\t\titem.weight = item.weight || 0;\r\n\r\n\t\t\tchart.boxes.push(item);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove a layoutItem from a chart\r\n\t\t * @param {Chart} chart - the chart to remove the box from\r\n\t\t * @param {Object} layoutItem - the item to remove from the layout\r\n\t\t */\r\n\t\tremoveBox: function(chart, layoutItem) {\r\n\t\t\tvar index = chart.boxes? chart.boxes.indexOf(layoutItem) : -1;\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tchart.boxes.splice(index, 1);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets (or updates) options on the given `item`.\r\n\t\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n\t\t * @param {Object} item - the item to configure with the given options\r\n\t\t * @param {Object} options - the new item options.\r\n\t\t */\r\n\t\tconfigure: function(chart, item, options) {\r\n\t\t\tvar props = ['fullWidth', 'position', 'weight'];\r\n\t\t\tvar ilen = props.length;\r\n\t\t\tvar i = 0;\r\n\t\t\tvar prop;\r\n\r\n\t\t\tfor (; i<ilen; ++i) {\r\n\t\t\t\tprop = props[i];\r\n\t\t\t\tif (options.hasOwnProperty(prop)) {\r\n\t\t\t\t\titem[prop] = options[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Fits boxes of the given chart into the given size by having each box measure itself\r\n\t\t * then running a fitting algorithm\r\n\t\t * @param {Chart} chart - the chart\r\n\t\t * @param {Number} width - the width to fit into\r\n\t\t * @param {Number} height - the height to fit into\r\n\t\t */\r\n\t\tupdate: function(chart, width, height) {\r\n\t\t\tif (!chart) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar layoutOptions = chart.options.layout;\r\n\t\t\tvar padding = layoutOptions ? layoutOptions.padding : null;\r\n\r\n\t\t\tvar leftPadding = 0;\r\n\t\t\tvar rightPadding = 0;\r\n\t\t\tvar topPadding = 0;\r\n\t\t\tvar bottomPadding = 0;\r\n\r\n\t\t\tif (!isNaN(padding)) {\r\n\t\t\t\t// options.layout.padding is a number. assign to all\r\n\t\t\t\tleftPadding = padding;\r\n\t\t\t\trightPadding = padding;\r\n\t\t\t\ttopPadding = padding;\r\n\t\t\t\tbottomPadding = padding;\r\n\t\t\t} else {\r\n\t\t\t\tleftPadding = padding.left || 0;\r\n\t\t\t\trightPadding = padding.right || 0;\r\n\t\t\t\ttopPadding = padding.top || 0;\r\n\t\t\t\tbottomPadding = padding.bottom || 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\r\n\t\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\r\n\t\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\r\n\t\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n\t\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n\t\t\t// Sort boxes by weight. A higher weight is further away from the chart area\r\n\t\t\tsortByWeight(leftBoxes, true);\r\n\t\t\tsortByWeight(rightBoxes, false);\r\n\t\t\tsortByWeight(topBoxes, true);\r\n\t\t\tsortByWeight(bottomBoxes, false);\r\n\r\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\r\n\t\t\t// Our canvas looks like the following.\r\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n\t\t\t// B1 is the bottom axis\r\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n\t\t\t// an error will be thrown.\r\n\t\t\t//\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  T1 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |    |    |                 T2                  |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    | C1 |                           | C2 |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\r\n\t\t\t// |    |    |                                     |    |\r\n\t\t\t// |    |    |----|                           |----|    |\r\n\t\t\t// |    |    | C3 |                           | C4 |    |\r\n\t\t\t// |    |----|-------------------------------------|----|\r\n\t\t\t// |    |    |                 B1                  |    |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t// |                  B2 (Full Width)                   |\r\n\t\t\t// |----------------------------------------------------|\r\n\t\t\t//\r\n\t\t\t// What we do to find the best sizing, we do the following\r\n\t\t\t// 1. Determine the minimum size of the chart area.\r\n\t\t\t// 2. Split the remaining width equally between each vertical axis\r\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\r\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n\t\t\t// 6. Refit each axis\r\n\t\t\t// 7. Position each axis in the final location\r\n\t\t\t// 8. Tell the chart the final location of the chart area\r\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n\t\t\t// Step 1\r\n\t\t\tvar chartWidth = width - leftPadding - rightPadding;\r\n\t\t\tvar chartHeight = height - topPadding - bottomPadding;\r\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\r\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n\t\t\t// Step 2\r\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n\t\t\t// Step 3\r\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n\t\t\t// Step 4\r\n\t\t\tvar maxChartAreaWidth = chartWidth;\r\n\t\t\tvar maxChartAreaHeight = chartHeight;\r\n\t\t\tvar minBoxSizes = [];\r\n\r\n\t\t\tfunction getMinimumBoxSize(box) {\r\n\t\t\t\tvar minSize;\r\n\t\t\t\tvar isHorizontal = box.isHorizontal();\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminBoxSizes.push({\r\n\t\t\t\t\thorizontal: isHorizontal,\r\n\t\t\t\t\tminSize: minSize,\r\n\t\t\t\t\tbox: box,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n\t\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n\t\t\tvar maxHorizontalLeftPadding = 0;\r\n\t\t\tvar maxHorizontalRightPadding = 0;\r\n\t\t\tvar maxVerticalTopPadding = 0;\r\n\t\t\tvar maxVerticalBottomPadding = 0;\r\n\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n\t\t\t\tif (horizontalBox.getPadding) {\r\n\t\t\t\t\tvar boxPadding = horizontalBox.getPadding();\r\n\t\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n\t\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n\t\t\t\tif (verticalBox.getPadding) {\r\n\t\t\t\t\tvar boxPadding = verticalBox.getPadding();\r\n\t\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n\t\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n\t\t\t// be if the axes are drawn at their minimum sizes.\r\n\t\t\t// Steps 5 & 6\r\n\t\t\tvar totalLeftBoxesWidth = leftPadding;\r\n\t\t\tvar totalRightBoxesWidth = rightPadding;\r\n\t\t\tvar totalTopBoxesHeight = topPadding;\r\n\t\t\tvar totalBottomBoxesHeight = bottomPadding;\r\n\r\n\t\t\t// Function to fit a box\r\n\t\t\tfunction fitBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n\t\t\t\t\treturn minBox.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n\t\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\tbottom: 0\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\r\n\t\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\t// Set the Left and Right margins for the horizontal boxes\r\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\tfunction finalFitVerticalBox(box) {\r\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n\t\t\t\t\treturn minSize.box === box;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar scaleMargin = {\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\t\tbottom: totalBottomBoxesHeight\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (minBoxSize) {\r\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let the left layout know the final margin\r\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n\t\t\ttotalLeftBoxesWidth = leftPadding;\r\n\t\t\ttotalRightBoxesWidth = rightPadding;\r\n\t\t\ttotalTopBoxesHeight = topPadding;\r\n\t\t\ttotalBottomBoxesHeight = bottomPadding;\r\n\r\n\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\ttotalLeftBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\ttotalRightBoxesWidth += box.width;\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\ttotalTopBoxesHeight += box.height;\r\n\t\t\t});\r\n\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\ttotalBottomBoxesHeight += box.height;\r\n\t\t\t});\r\n\r\n\t\t\t// We may be adding some padding to account for rotated x axis labels\r\n\t\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n\t\t\ttotalLeftBoxesWidth += leftPaddingAddition;\r\n\t\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n\t\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n\t\t\ttotalTopBoxesHeight += topPaddingAddition;\r\n\t\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n\t\t\t// without calling `fit` again\r\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n\t\t\t\thelpers.each(leftBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(rightBoxes, function(box) {\r\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(topBoxes, function(box) {\r\n\t\t\t\t\tif (!box.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\r\n\t\t\t\t\tif (!box.fullWidth) {\r\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\r\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\r\n\t\t\t}\r\n\r\n\t\t\t// Step 7 - Position the boxes\r\n\t\t\tvar left = leftPadding + leftPaddingAddition;\r\n\t\t\tvar top = topPadding + topPaddingAddition;\r\n\r\n\t\t\tfunction placeBox(box) {\r\n\t\t\t\tif (box.isHorizontal()) {\r\n\t\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n\t\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n\t\t\t\t\tbox.top = top;\r\n\t\t\t\t\tbox.bottom = top + box.height;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\ttop = box.bottom;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbox.left = left;\r\n\t\t\t\t\tbox.right = left + box.width;\r\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\r\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n\t\t\t\t\t// Move to next point\r\n\t\t\t\t\tleft = box.right;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n\t\t\t// Account for chart width and height\r\n\t\t\tleft += maxChartAreaWidth;\r\n\t\t\ttop += maxChartAreaHeight;\r\n\r\n\t\t\thelpers.each(rightBoxes, placeBox);\r\n\t\t\thelpers.each(bottomBoxes, placeBox);\r\n\r\n\t\t\t// Step 8\r\n\t\t\tchart.chartArea = {\r\n\t\t\t\tleft: totalLeftBoxesWidth,\r\n\t\t\t\ttop: totalTopBoxesHeight,\r\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\r\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\r\n\t\t\t};\r\n\r\n\t\t\t// Step 9\r\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\r\n\t\t\t\tbox.left = chart.chartArea.left;\r\n\t\t\t\tbox.top = chart.chartArea.top;\r\n\t\t\t\tbox.right = chart.chartArea.right;\r\n\t\t\t\tbox.bottom = chart.chartArea.bottom;\r\n\r\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],30:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.global.plugins = {};\r\n\r\n\t/**\r\n\t * The plugin service singleton\r\n\t * @namespace Chart.plugins\r\n\t * @since 2.1.0\r\n\t */\r\n\tChart.plugins = {\r\n\t\t/**\r\n\t\t * Globally registered plugins.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_plugins: [],\r\n\r\n\t\t/**\r\n\t\t * This identifier is used to invalidate the descriptors cache attached to each chart\r\n\t\t * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n\t\t * incremented and descriptors are regenerated during following API calls.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_cacheId: 0,\r\n\r\n\t\t/**\r\n\t\t * Registers the given plugin(s) if not already registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tif (p.indexOf(plugin) === -1) {\r\n\t\t\t\t\tp.push(plugin);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._cacheId++;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Unregisters the given plugin(s) only if registered.\r\n\t\t * @param {Array|Object} plugins plugin instance(s).\r\n\t\t */\r\n\t\tunregister: function(plugins) {\r\n\t\t\tvar p = this._plugins;\r\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\r\n\t\t\t\tvar idx = p.indexOf(plugin);\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\tp.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._cacheId++;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove all registered plugins.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tclear: function() {\r\n\t\t\tthis._plugins = [];\r\n\t\t\tthis._cacheId++;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the number of registered plugins?\r\n\t\t * @returns {Number}\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tcount: function() {\r\n\t\t\treturn this._plugins.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns all registered plugin instances.\r\n\t\t * @returns {Array} array of plugin objects.\r\n\t\t * @since 2.1.5\r\n\t\t */\r\n\t\tgetAll: function() {\r\n\t\t\treturn this._plugins;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n\t\t * This method immediately returns as soon as a plugin explicitly returns false. The\r\n\t\t * returned value can be used, for instance, to interrupt the current action.\r\n\t\t * @param {Object} chart - The chart instance for which plugins should be called.\r\n\t\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n\t\t * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n\t\t */\r\n\t\tnotify: function(chart, hook, args) {\r\n\t\t\tvar descriptors = this.descriptors(chart);\r\n\t\t\tvar ilen = descriptors.length;\r\n\t\t\tvar i, descriptor, plugin, params, method;\r\n\r\n\t\t\tfor (i=0; i<ilen; ++i) {\r\n\t\t\t\tdescriptor = descriptors[i];\r\n\t\t\t\tplugin = descriptor.plugin;\r\n\t\t\t\tmethod = plugin[hook];\r\n\t\t\t\tif (typeof method === 'function') {\r\n\t\t\t\t\tparams = [chart].concat(args || []);\r\n\t\t\t\t\tparams.push(descriptor.options);\r\n\t\t\t\t\tif (method.apply(plugin, params) === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns descriptors of enabled plugins for the given chart.\r\n\t\t * @returns {Array} [{ plugin, options }]\r\n\t\t * @private\r\n\t\t */\r\n\t\tdescriptors: function(chart) {\r\n\t\t\tvar cache = chart._plugins || (chart._plugins = {});\r\n\t\t\tif (cache.id === this._cacheId) {\r\n\t\t\t\treturn cache.descriptors;\r\n\t\t\t}\r\n\r\n\t\t\tvar plugins = [];\r\n\t\t\tvar descriptors = [];\r\n\t\t\tvar config = (chart && chart.config) || {};\r\n\t\t\tvar defaults = Chart.defaults.global.plugins;\r\n\t\t\tvar options = (config.options && config.options.plugins) || {};\r\n\r\n\t\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n\t\t\t\tvar idx = plugins.indexOf(plugin);\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar id = plugin.id;\r\n\t\t\t\tvar opts = options[id];\r\n\t\t\t\tif (opts === false) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (opts === true) {\r\n\t\t\t\t\topts = helpers.clone(defaults[id]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplugins.push(plugin);\r\n\t\t\t\tdescriptors.push({\r\n\t\t\t\t\tplugin: plugin,\r\n\t\t\t\t\toptions: opts || {}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tcache.descriptors = descriptors;\r\n\t\t\tcache.id = this._cacheId;\r\n\t\t\treturn descriptors;\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Plugin extension hooks.\r\n\t * @interface IPlugin\r\n\t * @since 2.1.0\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeInit\r\n\t * @desc Called before initializing `chart`.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterInit\r\n\t * @desc Called after `chart` has been initialized and before the first update.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeUpdate\r\n\t * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n\t * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart update.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterUpdate\r\n\t * @desc Called after `chart` has been updated and before rendering. Note that this\r\n\t * hook will not be called if the chart update has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDatasetsUpdate\r\n \t * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n\t * the datasets update is cancelled until another `update` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} false to cancel the datasets update.\r\n\t * @since version 2.1.5\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDatasetsUpdate\r\n\t * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n\t * will not be called if the datasets update has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @since version 2.1.5\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDatasetUpdate\r\n \t * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n\t * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n\t * @param {Chart} chart - The chart instance.\r\n\t * @param {Object} args - The call arguments.\r\n\t * @param {Object} args.index - The dataset index.\r\n\t * @param {Number} args.meta - The dataset metadata.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDatasetUpdate\r\n \t * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n\t * that this hook will not be called if the datasets update has been previously cancelled.\r\n\t * @param {Chart} chart - The chart instance.\r\n\t * @param {Object} args - The call arguments.\r\n\t * @param {Object} args.index - The dataset index.\r\n\t * @param {Number} args.meta - The dataset metadata.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeLayout\r\n\t * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n\t * the layout update is cancelled until another `update` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart layout.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterLayout\r\n\t * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n\t * be called if the layout update has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeRender\r\n\t * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n\t * the rendering is cancelled until another `render` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart rendering.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterRender\r\n\t * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n\t * that this hook will not be called if the rendering has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDraw\r\n\t * @desc Called before drawing `chart` at every animation frame specified by the given\r\n\t * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n\t * another `render` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart drawing.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDraw\r\n\t * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n\t * that this hook will not be called if the drawing has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDatasetsDraw\r\n \t * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n\t * the datasets drawing is cancelled until another `render` is triggered.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDatasetsDraw\r\n\t * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n\t * will not be called if the datasets drawing has been previously cancelled.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeDatasetDraw\r\n \t * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n\t * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n\t * is cancelled until another `render` is triggered.\r\n\t * @param {Chart} chart - The chart instance.\r\n\t * @param {Object} args - The call arguments.\r\n\t * @param {Object} args.index - The dataset index.\r\n\t * @param {Number} args.meta - The dataset metadata.\r\n\t * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterDatasetDraw\r\n \t * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n\t * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n\t * if the datasets drawing has been previously cancelled.\r\n\t * @param {Chart} chart - The chart instance.\r\n\t * @param {Object} args - The call arguments.\r\n\t * @param {Object} args.index - The dataset index.\r\n\t * @param {Number} args.meta - The dataset metadata.\r\n\t * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#beforeEvent\r\n \t * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n\t * the event will be discarded.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {IEvent} event - The event object.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#afterEvent\r\n\t * @desc Called after the `event` has been consumed. Note that this hook\r\n\t * will not be called if the `event` has been previously discarded.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {IEvent} event - The event object.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#resize\r\n\t * @desc Called after the chart as been resized.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\t/**\r\n\t * @method IPlugin#destroy\r\n\t * @desc Called after the chart as been destroyed.\r\n\t * @param {Chart.Controller} chart - The chart instance.\r\n\t * @param {Object} options - The plugin options.\r\n\t */\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, use Chart.plugins instead\r\n\t * @namespace Chart.pluginService\r\n\t * @deprecated since version 2.1.5\r\n\t * @todo remove at version 3\r\n\t * @private\r\n\t */\r\n\tChart.pluginService = Chart.plugins;\r\n\r\n\t/**\r\n\t * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\r\n\t * effect, instead simply create/register plugins via plain JavaScript objects.\r\n\t * @interface Chart.PluginBase\r\n\t * @deprecated since version 2.5.0\r\n\t * @todo remove at version 3\r\n\t * @private\r\n\t */\r\n\tChart.PluginBase = Chart.Element.extend({});\r\n};\r\n\r\n},{}],31:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.defaults.scale = {\r\n\t\tdisplay: true,\r\n\t\tposition: 'left',\r\n\r\n\t\t// grid line settings\r\n\t\tgridLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\r\n\t\t\tlineWidth: 1,\r\n\t\t\tdrawBorder: true,\r\n\t\t\tdrawOnChartArea: true,\r\n\t\t\tdrawTicks: true,\r\n\t\t\ttickMarkLength: 10,\r\n\t\t\tzeroLineWidth: 1,\r\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\r\n\t\t\tzeroLineBorderDash: [],\r\n\t\t\tzeroLineBorderDashOffset: 0.0,\r\n\t\t\toffsetGridLines: false,\r\n\t\t\tborderDash: [],\r\n\t\t\tborderDashOffset: 0.0\r\n\t\t},\r\n\r\n\t\t// scale label\r\n\t\tscaleLabel: {\r\n\t\t\t// actual label\r\n\t\t\tlabelString: '',\r\n\r\n\t\t\t// display property\r\n\t\t\tdisplay: false\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tbeginAtZero: false,\r\n\t\t\tminRotation: 0,\r\n\t\t\tmaxRotation: 50,\r\n\t\t\tmirror: false,\r\n\t\t\tpadding: 0,\r\n\t\t\treverse: false,\r\n\t\t\tdisplay: true,\r\n\t\t\tautoSkip: true,\r\n\t\t\tautoSkipPadding: 0,\r\n\t\t\tlabelOffset: 0,\r\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n\t\t\tcallback: Chart.Ticks.formatters.values\r\n\t\t}\r\n\t};\r\n\r\n\tfunction computeTextSize(context, tick, font) {\r\n\t\treturn helpers.isArray(tick) ?\r\n\t\t\thelpers.longestText(context, font, tick) :\r\n\t\t\tcontext.measureText(tick).width;\r\n\t}\r\n\r\n\tfunction parseFontOptions(options) {\r\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\tvar size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n\t\tvar style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\tvar family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n\t\treturn {\r\n\t\t\tsize: size,\r\n\t\t\tstyle: style,\r\n\t\t\tfamily: family,\r\n\t\t\tfont: helpers.fontString(size, style, family)\r\n\t\t};\r\n\t}\r\n\r\n\tChart.Scale = Chart.Element.extend({\r\n\t\t/**\r\n\t\t * Get the padding needed for the scale\r\n\t\t * @method getPadding\r\n\t\t * @private\r\n\t\t * @returns {Padding} the necessary padding\r\n\t\t */\r\n\t\tgetPadding: function() {\r\n\t\t\tvar me = this;\r\n\t\t\treturn {\r\n\t\t\t\tleft: me.paddingLeft || 0,\r\n\t\t\t\ttop: me.paddingTop || 0,\r\n\t\t\t\tright: me.paddingRight || 0,\r\n\t\t\t\tbottom: me.paddingBottom || 0\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all scale types.\r\n\t\t// Any function can be extended by the scale type\r\n\r\n\t\tbeforeUpdate: function() {\r\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\r\n\t\t},\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = helpers.extend({\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tbottom: 0\r\n\t\t\t}, margins);\r\n\t\t\tme.longestTextCache = me.longestTextCache || {};\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\r\n\t\t\t// Data min/max\r\n\t\t\tme.beforeDataLimits();\r\n\t\t\tme.determineDataLimits();\r\n\t\t\tme.afterDataLimits();\r\n\r\n\t\t\t// Ticks\r\n\t\t\tme.beforeBuildTicks();\r\n\t\t\tme.buildTicks();\r\n\t\t\tme.afterBuildTicks();\r\n\r\n\t\t\tme.beforeTickToLabelConversion();\r\n\t\t\tme.convertTicksToLabels();\r\n\t\t\tme.afterTickToLabelConversion();\r\n\r\n\t\t\t// Tick Rotation\r\n\t\t\tme.beforeCalculateTickRotation();\r\n\t\t\tme.calculateTickRotation();\r\n\t\t\tme.afterCalculateTickRotation();\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: function() {\r\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: function() {\r\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\r\n\t\t},\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\t\t},\r\n\t\tafterSetDimensions: function() {\r\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\r\n\t\t},\r\n\r\n\t\t// Data limits\r\n\t\tbeforeDataLimits: function() {\r\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\r\n\t\t},\r\n\t\tdetermineDataLimits: helpers.noop,\r\n\t\tafterDataLimits: function() {\r\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\t\tbeforeBuildTicks: function() {\r\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\r\n\t\t},\r\n\t\tbuildTicks: helpers.noop,\r\n\t\tafterBuildTicks: function() {\r\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\r\n\t\t},\r\n\r\n\t\tbeforeTickToLabelConversion: function() {\r\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Convert ticks to strings\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\r\n\t\t},\r\n\t\tafterTickToLabelConversion: function() {\r\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeCalculateTickRotation: function() {\r\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n\t\t},\r\n\t\tcalculateTickRotation: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\r\n\t\t\t// Get the width of each grid by calculating the difference\r\n\t\t\t// between x offsets between 0 and 1.\r\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\r\n\t\t\tcontext.font = tickFont.font;\r\n\r\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\r\n\r\n\t\t\tif (me.options.display && me.isHorizontal()) {\r\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);\r\n\t\t\t\tvar labelWidth = originalLabelWidth;\r\n\t\t\t\tvar cosRotation;\r\n\t\t\t\tvar sinRotation;\r\n\r\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\r\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\r\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\r\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\r\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\r\n\r\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\r\n\t\t\t\t\t\t// go back one step\r\n\t\t\t\t\t\tlabelRotation--;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlabelRotation++;\r\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.labelRotation = labelRotation;\r\n\t\t},\r\n\t\tafterCalculateTickRotation: function() {\r\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n\t\t},\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: function() {\r\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Reset\r\n\t\t\tvar minSize = me.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\r\n\t\t\tvar gridLineOpts = opts.gridLines;\r\n\t\t\tvar display = opts.display;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\r\n\t\t\tvar scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;\r\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n\t\t\t// Width\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\r\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n\t\t\t}\r\n\r\n\t\t\t// height\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Are we showing a title for the scale?\r\n\t\t\tif (scaleLabelOpts.display && display) {\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tminSize.height += scaleLabelFontSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tminSize.width += scaleLabelFontSize;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Don't bother fitting the ticks if we are not showing them\r\n\t\t\tif (tickOpts.display && display) {\r\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);\r\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\r\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\r\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\r\n\r\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\r\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\r\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\r\n\r\n\t\t\t\t\t// TODO - improve this calculation\r\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\r\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\r\n\t\t\t\t\t\t+ (lineSpace * tallestLabelHeightInLines);\r\n\r\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\r\n\t\t\t\t\tme.ctx.font = tickFont.font;\r\n\r\n\t\t\t\t\tvar firstTick = me.ticks[0];\r\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);\r\n\r\n\t\t\t\t\tvar lastTick = me.ticks[me.ticks.length - 1];\r\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);\r\n\r\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n\t\t\t\t\t// by the font height\r\n\t\t\t\t\tif (me.labelRotation !== 0) {\r\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom'? (cosRotation * firstLabelWidth) + 3: (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom'? (cosRotation * lineSpace) + 3: (cosRotation * lastLabelWidth) + 3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n\t\t\t\t\t// Account for padding\r\n\r\n\t\t\t\t\tif (tickOpts.mirror) {\r\n\t\t\t\t\t\tlargestTextWidth = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\r\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.handleMargins();\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle margins and padding interactions\r\n\t\t * @private\r\n\t\t */\r\n\t\thandleMargins: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.margins) {\r\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tafterFit: function() {\r\n\t\t\thelpers.callback(this.options.afterFit, [this]);\r\n\t\t},\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\r\n\t\t},\r\n\t\tisFullWidth: function() {\r\n\t\t\treturn (this.options.fullWidth);\r\n\t\t},\r\n\r\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n\t\tgetRightValue: function(rawValue) {\r\n\t\t\t// Null and undefined values first\r\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\r\n\t\t\t\treturn NaN;\r\n\t\t\t}\r\n\t\t\t// If it is in fact an object, dive in one more level\r\n\t\t\tif (typeof(rawValue) === 'object') {\r\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n\t\t\t\t\treturn rawValue;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n\t\t\t}\r\n\r\n\t\t\t// Value is good, return it\r\n\t\t\treturn rawValue;\r\n\t\t},\r\n\r\n\t\t// Used to get the value to display in the tooltip for the data at the given index\r\n\t\t// function getLabelForIndex(index, datasetIndex)\r\n\t\tgetLabelForIndex: helpers.noop,\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: helpers.noop,\r\n\r\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n\t\tgetValueForPixel: helpers.noop,\r\n\r\n\t\t// Used for tick location, should\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n\t\t\t\tif (includeOffset) {\r\n\t\t\t\t\tpixel += tickWidth / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t}\r\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\r\n\t\t},\r\n\r\n\t\t// Utility for getting the pixel location of a percentage of scale\r\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\r\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\r\n\t\t\t\treturn finalVal;\r\n\t\t\t}\r\n\t\t\treturn me.top + (decimal * me.height);\r\n\t\t},\r\n\r\n\t\tgetBasePixel: function() {\r\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\r\n\t\t},\r\n\r\n\t\tgetBaseValue: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.beginAtZero ? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0;\r\n\t\t},\r\n\r\n\t\t// Actually draw the scale on the canvas\r\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me.options;\r\n\t\t\tif (!options.display) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar context = me.ctx;\r\n\t\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\t\tvar optionTicks = options.ticks;\r\n\t\t\tvar gridLines = options.gridLines;\r\n\t\t\tvar scaleLabel = options.scaleLabel;\r\n\r\n\t\t\tvar isRotated = me.labelRotation !== 0;\r\n\t\t\tvar skipRatio;\r\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\t// figure out the maximum number of gridlines to show\r\n\t\t\tvar maxTicks;\r\n\t\t\tif (optionTicks.maxTicksLimit) {\r\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\r\n\t\t\t}\r\n\r\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\r\n\r\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\r\n\r\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\r\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n\r\n\t\t\t// Make sure we draw text in the correct color and font\r\n\t\t\tcontext.fillStyle = tickFontColor;\r\n\r\n\t\t\tvar itemsToDraw = [];\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tskipRatio = false;\r\n\r\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if they defined a max number of optionTicks,\r\n\t\t\t\t// increase skipRatio until that number is met\r\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\r\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\r\n\t\t\t\t\t\tif (!skipRatio) {\r\n\t\t\t\t\t\t\tskipRatio = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tskipRatio += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!useAutoskipper) {\r\n\t\t\t\t\tskipRatio = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\r\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\r\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\r\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\r\n\r\n\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\r\n\t\t\t\tif (label === undefined || label === null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\r\n\r\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\r\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\r\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\r\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\r\n\t\t\t\t\t// Draw the first index specially\r\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\r\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\r\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\r\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\r\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\r\n\t\t\t\t\tborderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n\t\t\t\t\tborderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Common properties\r\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n\t\t\t\tvar textAlign = 'middle';\r\n\t\t\t\tvar textBaseline = 'middle';\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\r\n\t\t\t\t\tif (options.position === 'bottom') {\r\n\t\t\t\t\t\t// bottom\r\n\t\t\t\t\t\ttextBaseline = !isRotated? 'top':'middle';\r\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'right';\r\n\t\t\t\t\t\tlabelY = me.top + tl;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// top\r\n\t\t\t\t\t\ttextBaseline = !isRotated? 'bottom':'middle';\r\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'left';\r\n\t\t\t\t\t\tlabelY = me.bottom - tl;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\r\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\r\n\t\t\t\t\tty1 = yTickStart;\r\n\t\t\t\t\tty2 = yTickEnd;\r\n\t\t\t\t\ty1 = chartArea.top;\r\n\t\t\t\t\ty2 = chartArea.bottom;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar isLeft = options.position === 'left';\r\n\t\t\t\t\tvar tickPadding = optionTicks.padding;\r\n\t\t\t\t\tvar labelXOffset;\r\n\r\n\t\t\t\t\tif (optionTicks.mirror) {\r\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\r\n\t\t\t\t\t\tlabelXOffset = tickPadding;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\r\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\r\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\r\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\r\n\r\n\t\t\t\t\ttx1 = xTickStart;\r\n\t\t\t\t\ttx2 = xTickEnd;\r\n\t\t\t\t\tx1 = chartArea.left;\r\n\t\t\t\t\tx2 = chartArea.right;\r\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titemsToDraw.push({\r\n\t\t\t\t\ttx1: tx1,\r\n\t\t\t\t\tty1: ty1,\r\n\t\t\t\t\ttx2: tx2,\r\n\t\t\t\t\tty2: ty2,\r\n\t\t\t\t\tx1: x1,\r\n\t\t\t\t\ty1: y1,\r\n\t\t\t\t\tx2: x2,\r\n\t\t\t\t\ty2: y2,\r\n\t\t\t\t\tlabelX: labelX,\r\n\t\t\t\t\tlabelY: labelY,\r\n\t\t\t\t\tglWidth: lineWidth,\r\n\t\t\t\t\tglColor: lineColor,\r\n\t\t\t\t\tglBorderDash: borderDash,\r\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\r\n\t\t\t\t\trotation: -1 * labelRotationRadians,\r\n\t\t\t\t\tlabel: label,\r\n\t\t\t\t\ttextBaseline: textBaseline,\r\n\t\t\t\t\ttextAlign: textAlign\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\r\n\t\t\t\tif (gridLines.display) {\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\r\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\r\n\t\t\t\t\tif (context.setLineDash) {\r\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\r\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontext.beginPath();\r\n\r\n\t\t\t\t\tif (gridLines.drawTicks) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\r\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontext.stroke();\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (optionTicks.display) {\r\n\t\t\t\t\tcontext.save();\r\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\r\n\t\t\t\t\tcontext.font = tickFont.font;\r\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\r\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\r\n\r\n\t\t\t\t\tvar label = itemToDraw.label;\r\n\t\t\t\t\tif (helpers.isArray(label)) {\r\n\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\r\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\r\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\r\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\r\n\t\t\t\t\t\t\ty += (tickFont.size * 1.5);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontext.restore();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (scaleLabel.display) {\r\n\t\t\t\t// Draw the scale label\r\n\t\t\t\tvar scaleLabelX;\r\n\t\t\t\tvar scaleLabelY;\r\n\t\t\t\tvar rotation = 0;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar isLeft = options.position === 'left';\r\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);\r\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\r\n\t\t\t\tcontext.rotate(rotation);\r\n\t\t\t\tcontext.textAlign = 'center';\r\n\t\t\t\tcontext.textBaseline = 'middle';\r\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\r\n\t\t\t\tcontext.font = scaleLabelFont.font;\r\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\r\n\t\t\t\tcontext.restore();\r\n\t\t\t}\r\n\r\n\t\t\tif (gridLines.drawBorder) {\r\n\t\t\t\t// Draw the line at the edge of the axis\r\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\r\n\t\t\t\tvar x1 = me.left,\r\n\t\t\t\t\tx2 = me.right,\r\n\t\t\t\t\ty1 = me.top,\r\n\t\t\t\t\ty2 = me.bottom;\r\n\r\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n\t\t\t\t\ty1 += aliasPixel;\r\n\t\t\t\t\ty2 += aliasPixel;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\r\n\t\t\t\t\tx1 += aliasPixel;\r\n\t\t\t\t\tx2 += aliasPixel;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.moveTo(x1, y1);\r\n\t\t\t\tcontext.lineTo(x2, y2);\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],32:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tChart.scaleService = {\r\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n\t\t// use the new chart options to grab the correct scale\r\n\t\tconstructors: {},\r\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n\t\t// old browsers\r\n\r\n\t\t// Scale config defaults\r\n\t\tdefaults: {},\r\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\r\n\t\t\tthis.constructors[type] = scaleConstructor;\r\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\r\n\t\t},\r\n\t\tgetScaleConstructor: function(type) {\r\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n\t\t},\r\n\t\tgetScaleDefaults: function(type) {\r\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\r\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n\t\t},\r\n\t\tupdateScaleDefaults: function(type, additions) {\r\n\t\t\tvar defaults = this.defaults;\r\n\t\t\tif (defaults.hasOwnProperty(type)) {\r\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\r\n\t\t\t}\r\n\t\t},\r\n\t\taddScalesToLayout: function(chart) {\r\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\r\n\t\t\thelpers.each(chart.scales, function(scale) {\r\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\r\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\r\n\t\t\t\tscale.position = scale.options.position;\r\n\t\t\t\tscale.weight = scale.options.weight;\r\n\t\t\t\tChart.layoutService.addBox(chart, scale);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],33:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t/**\r\n\t * Namespace to hold static tick generation functions\r\n\t * @namespace Chart.Ticks\r\n\t */\r\n\tChart.Ticks = {\r\n\t\t/**\r\n\t\t * Namespace to hold generators for different types of ticks\r\n\t\t * @namespace Chart.Ticks.generators\r\n\t\t */\r\n\t\tgenerators: {\r\n\t\t\t/**\r\n\t\t\t * Interface for the options provided to the numeric tick generator\r\n\t\t\t * @interface INumericTickGenerationOptions\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * The maximum number of ticks to display\r\n\t\t\t * @name INumericTickGenerationOptions#maxTicks\r\n\t\t\t * @type Number\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * The distance between each tick.\r\n\t\t\t * @name INumericTickGenerationOptions#stepSize\r\n\t\t\t * @type Number\r\n\t\t\t * @optional\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\r\n\t\t\t * @name INumericTickGenerationOptions#min\r\n\t\t\t * @type Number\r\n\t\t\t * @optional\r\n\t\t\t */\r\n\t\t\t/**\r\n\t\t\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\r\n\t\t\t * @name INumericTickGenerationOptions#max\r\n\t\t\t * @type Number\r\n\t\t\t * @optional\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Generate a set of linear ticks\r\n\t\t\t * @method Chart.Ticks.generators.linear\r\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\r\n\t\t\t * @param dataRange {IRange} the range of the data\r\n\t\t\t * @returns {Array<Number>} array of tick values\r\n\t\t\t */\r\n\t\t\tlinear: function(generationOptions, dataRange) {\r\n\t\t\t\tvar ticks = [];\r\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n\t\t\t\t// for details.\r\n\r\n\t\t\t\tvar spacing;\r\n\t\t\t\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n\t\t\t\t\tspacing = generationOptions.stepSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n\t\t\t\t}\r\n\t\t\t\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n\t\t\t\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n\t\t\t\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n\t\t\t\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n\t\t\t\t\t// If very close to our whole number, use it.\r\n\t\t\t\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n\t\t\t\t\t\tniceMin = generationOptions.min;\r\n\t\t\t\t\t\tniceMax = generationOptions.max;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\r\n\t\t\t\t// If very close to our rounded value, use it.\r\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Put the values into the ticks array\r\n\t\t\t\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\r\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\r\n\t\t\t\t}\r\n\t\t\t\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n\t\t\t\treturn ticks;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Generate a set of logarithmic ticks\r\n\t\t\t * @method Chart.Ticks.generators.logarithmic\r\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\r\n\t\t\t * @param dataRange {IRange} the range of the data\r\n\t\t\t * @returns {Array<Number>} array of tick values\r\n\t\t\t */\r\n\t\t\tlogarithmic: function(generationOptions, dataRange) {\r\n\t\t\t\tvar ticks = [];\r\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t\t// the graph\r\n\t\t\t\tvar tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\r\n\r\n\t\t\t\tvar endExp = Math.floor(helpers.log10(dataRange.max));\r\n\t\t\t\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n\t\t\t\tvar exp;\r\n\t\t\t\tvar significand;\r\n\r\n\t\t\t\tif (tickVal === 0) {\r\n\t\t\t\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\r\n\t\t\t\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\r\n\r\n\t\t\t\t\tticks.push(tickVal);\r\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t\t} else {\r\n\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\r\n\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdo {\r\n\t\t\t\t\tticks.push(tickVal);\r\n\r\n\t\t\t\t\t++significand;\r\n\t\t\t\t\tif (significand === 10) {\r\n\t\t\t\t\t\tsignificand = 1;\r\n\t\t\t\t\t\t++exp;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\r\n\t\t\t\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n\r\n\t\t\t\tvar lastTick = getValueOrDefault(generationOptions.max, tickVal);\r\n\t\t\t\tticks.push(lastTick);\r\n\r\n\t\t\t\treturn ticks;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Namespace to hold formatters for different types of ticks\r\n\t\t * @namespace Chart.Ticks.formatters\r\n\t\t */\r\n\t\tformatters: {\r\n\t\t\t/**\r\n\t\t\t * Formatter for value labels\r\n\t\t\t * @method Chart.Ticks.formatters.values\r\n\t\t\t * @param value the value to display\r\n\t\t\t * @return {String|Array} the label to display\r\n\t\t\t */\r\n\t\t\tvalues: function(value) {\r\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Formatter for linear numeric ticks\r\n\t\t\t * @method Chart.Ticks.formatters.linear\r\n\t\t\t * @param tickValue {Number} the value to be formatted\r\n\t\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\r\n\t\t\t * @param ticks {Array<Number>} the list of ticks being converted\r\n\t\t\t * @return {String} string representation of the tickValue parameter\r\n\t\t\t */\r\n\t\t\tlinear: function(tickValue, index, ticks) {\r\n\t\t\t\t// If we have lots of ticks, don't use the ones\r\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n\t\t\t\tif (Math.abs(delta) > 1) {\r\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\r\n\t\t\t\t\t\t// not an integer\r\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\r\n\t\t\t\tvar tickString = '';\r\n\r\n\t\t\t\tif (tickValue !== 0) {\r\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\r\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tickString;\r\n\t\t\t},\r\n\r\n\t\t\tlogarithmic: function(tickValue, index, ticks) {\r\n\t\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n\t\t\t\tif (tickValue === 0) {\r\n\t\t\t\t\treturn '0';\r\n\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n\t\t\t\t\treturn tickValue.toExponential();\r\n\t\t\t\t}\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],34:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t/**\r\n \t * Helper method to merge the opacity into a color\r\n \t */\r\n\tfunction mergeOpacity(colorString, opacity) {\r\n\t\tvar color = helpers.color(colorString);\r\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\r\n\t}\r\n\r\n\tChart.defaults.global.tooltips = {\r\n\t\tenabled: true,\r\n\t\tcustom: null,\r\n\t\tmode: 'nearest',\r\n\t\tposition: 'average',\r\n\t\tintersect: true,\r\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\r\n\t\ttitleFontStyle: 'bold',\r\n\t\ttitleSpacing: 2,\r\n\t\ttitleMarginBottom: 6,\r\n\t\ttitleFontColor: '#fff',\r\n\t\ttitleAlign: 'left',\r\n\t\tbodySpacing: 2,\r\n\t\tbodyFontColor: '#fff',\r\n\t\tbodyAlign: 'left',\r\n\t\tfooterFontStyle: 'bold',\r\n\t\tfooterSpacing: 2,\r\n\t\tfooterMarginTop: 6,\r\n\t\tfooterFontColor: '#fff',\r\n\t\tfooterAlign: 'left',\r\n\t\tyPadding: 6,\r\n\t\txPadding: 6,\r\n\t\tcaretPadding: 2,\r\n\t\tcaretSize: 5,\r\n\t\tcornerRadius: 6,\r\n\t\tmultiKeyBackground: '#fff',\r\n\t\tdisplayColors: true,\r\n\t\tborderColor: 'rgba(0,0,0,0)',\r\n\t\tborderWidth: 0,\r\n\t\tcallbacks: {\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeTitle: helpers.noop,\r\n\t\t\ttitle: function(tooltipItems, data) {\r\n\t\t\t\t// Pick first xLabel for now\r\n\t\t\t\tvar title = '';\r\n\t\t\t\tvar labels = data.labels;\r\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\r\n\r\n\t\t\t\tif (tooltipItems.length > 0) {\r\n\t\t\t\t\tvar item = tooltipItems[0];\r\n\r\n\t\t\t\t\tif (item.xLabel) {\r\n\t\t\t\t\t\ttitle = item.xLabel;\r\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\r\n\t\t\t\t\t\ttitle = labels[item.index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn title;\r\n\t\t\t},\r\n\t\t\tafterTitle: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItem, data)\r\n\t\t\tbeforeLabel: helpers.noop,\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tlabel += ': ';\r\n\t\t\t\t}\r\n\t\t\t\tlabel += tooltipItem.yLabel;\r\n\t\t\t\treturn label;\r\n\t\t\t},\r\n\t\t\tlabelColor: function(tooltipItem, chart) {\r\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\r\n\t\t\t\tvar view = activeElement._view;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tborderColor: view.borderColor,\r\n\t\t\t\t\tbackgroundColor: view.backgroundColor\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tafterLabel: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tafterBody: helpers.noop,\r\n\r\n\t\t\t// Args are: (tooltipItems, data)\r\n\t\t\tbeforeFooter: helpers.noop,\r\n\t\t\tfooter: helpers.noop,\r\n\t\t\tafterFooter: helpers.noop\r\n\t\t}\r\n\t};\r\n\r\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\r\n\tfunction pushOrConcat(base, toPush) {\r\n\t\tif (toPush) {\r\n\t\t\tif (helpers.isArray(toPush)) {\r\n\t\t\t\t// base = base.concat(toPush);\r\n\t\t\t\tArray.prototype.push.apply(base, toPush);\r\n\t\t\t} else {\r\n\t\t\t\tbase.push(toPush);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\t}\r\n\r\n\t// Private helper to create a tooltip item model\r\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n\t// @return : new tooltip item\r\n\tfunction createTooltipItem(element) {\r\n\t\tvar xScale = element._xScale;\r\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n\t\tvar index = element._index,\r\n\t\t\tdatasetIndex = element._datasetIndex;\r\n\r\n\t\treturn {\r\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n\t\t\tindex: index,\r\n\t\t\tdatasetIndex: datasetIndex,\r\n\t\t\tx: element._model.x,\r\n\t\t\ty: element._model.y\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to get the reset model for the tooltip\r\n\t * @param tooltipOpts {Object} the tooltip options\r\n\t */\r\n\tfunction getBaseModel(tooltipOpts) {\r\n\t\tvar globalDefaults = Chart.defaults.global;\r\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\treturn {\r\n\t\t\t// Positioning\r\n\t\t\txPadding: tooltipOpts.xPadding,\r\n\t\t\tyPadding: tooltipOpts.yPadding,\r\n\t\t\txAlign: tooltipOpts.xAlign,\r\n\t\t\tyAlign: tooltipOpts.yAlign,\r\n\r\n\t\t\t// Body\r\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\r\n\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\r\n\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\r\n\r\n\t\t\t// Title\r\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\r\n\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\r\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\r\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n\t\t\t// Footer\r\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\r\n\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\r\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\r\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n\t\t\t// Appearance\r\n\t\t\tcaretSize: tooltipOpts.caretSize,\r\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\r\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\r\n\t\t\topacity: 0,\r\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\r\n\t\t\tdisplayColors: tooltipOpts.displayColors,\r\n\t\t\tborderColor: tooltipOpts.borderColor,\r\n\t\t\tborderWidth: tooltipOpts.borderWidth\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Get the size of the tooltip\r\n\t */\r\n\tfunction getTooltipSize(tooltip, model) {\r\n\t\tvar ctx = tooltip._chart.ctx;\r\n\r\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\r\n\t\tvar width = 0;\r\n\r\n\t\t// Count of all lines in the body\r\n\t\tvar body = model.body;\r\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n\t\t}, 0);\r\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n\t\tvar titleLineCount = model.title.length;\r\n\t\tvar footerLineCount = model.footer.length;\r\n\t\tvar titleFontSize = model.titleFontSize,\r\n\t\t\tbodyFontSize = model.bodyFontSize,\r\n\t\t\tfooterFontSize = model.footerFontSize;\r\n\r\n\t\theight += titleLineCount * titleFontSize; // Title Lines\r\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\r\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\r\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n\t\t// Title width\r\n\t\tvar widthPadding = 0;\r\n\t\tvar maxLineWidth = function(line) {\r\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n\t\t};\r\n\r\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n\t\thelpers.each(model.title, maxLineWidth);\r\n\r\n\t\t// Body width\r\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n\t\t// Body lines may include some extra width due to the color box\r\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n\t\thelpers.each(body, function(bodyItem) {\r\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\r\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\r\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\r\n\t\t});\r\n\r\n\t\t// Reset back to 0\r\n\t\twidthPadding = 0;\r\n\r\n\t\t// Footer width\r\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n\t\thelpers.each(model.footer, maxLineWidth);\r\n\r\n\t\t// Add padding\r\n\t\twidth += 2 * model.xPadding;\r\n\r\n\t\treturn {\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to get the alignment of a tooltip given the size\r\n\t */\r\n\tfunction determineAlignment(tooltip, size) {\r\n\t\tvar model = tooltip._model;\r\n\t\tvar chart = tooltip._chart;\r\n\t\tvar chartArea = tooltip._chart.chartArea;\r\n\t\tvar xAlign = 'center';\r\n\t\tvar yAlign = 'center';\r\n\r\n\t\tif (model.y < size.height) {\r\n\t\t\tyAlign = 'top';\r\n\t\t} else if (model.y > (chart.height - size.height)) {\r\n\t\t\tyAlign = 'bottom';\r\n\t\t}\r\n\r\n\t\tvar lf, rf; // functions to determine left, right alignment\r\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\r\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n\t\tif (yAlign === 'center') {\r\n\t\t\tlf = function(x) {\r\n\t\t\t\treturn x <= midX;\r\n\t\t\t};\r\n\t\t\trf = function(x) {\r\n\t\t\t\treturn x > midX;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tlf = function(x) {\r\n\t\t\t\treturn x <= (size.width / 2);\r\n\t\t\t};\r\n\t\t\trf = function(x) {\r\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tolf = function(x) {\r\n\t\t\treturn x + size.width > chart.width;\r\n\t\t};\r\n\t\torf = function(x) {\r\n\t\t\treturn x - size.width < 0;\r\n\t\t};\r\n\t\tyf = function(y) {\r\n\t\t\treturn y <= midY ? 'top' : 'bottom';\r\n\t\t};\r\n\r\n\t\tif (lf(model.x)) {\r\n\t\t\txAlign = 'left';\r\n\r\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\r\n\t\t\tif (olf(model.x)) {\r\n\t\t\t\txAlign = 'center';\r\n\t\t\t\tyAlign = yf(model.y);\r\n\t\t\t}\r\n\t\t} else if (rf(model.x)) {\r\n\t\t\txAlign = 'right';\r\n\r\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\r\n\t\t\tif (orf(model.x)) {\r\n\t\t\t\txAlign = 'center';\r\n\t\t\t\tyAlign = yf(model.y);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar opts = tooltip._options;\r\n\t\treturn {\r\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n\t */\r\n\tfunction getBackgroundPoint(vm, size, alignment) {\r\n\t\t// Background Position\r\n\t\tvar x = vm.x;\r\n\t\tvar y = vm.y;\r\n\r\n\t\tvar caretSize = vm.caretSize,\r\n\t\t\tcaretPadding = vm.caretPadding,\r\n\t\t\tcornerRadius = vm.cornerRadius,\r\n\t\t\txAlign = alignment.xAlign,\r\n\t\t\tyAlign = alignment.yAlign,\r\n\t\t\tpaddingAndSize = caretSize + caretPadding,\r\n\t\t\tradiusAndPadding = cornerRadius + caretPadding;\r\n\r\n\t\tif (xAlign === 'right') {\r\n\t\t\tx -= size.width;\r\n\t\t} else if (xAlign === 'center') {\r\n\t\t\tx -= (size.width / 2);\r\n\t\t}\r\n\r\n\t\tif (yAlign === 'top') {\r\n\t\t\ty += paddingAndSize;\r\n\t\t} else if (yAlign === 'bottom') {\r\n\t\t\ty -= size.height + paddingAndSize;\r\n\t\t} else {\r\n\t\t\ty -= (size.height / 2);\r\n\t\t}\r\n\r\n\t\tif (yAlign === 'center') {\r\n\t\t\tif (xAlign === 'left') {\r\n\t\t\t\tx += paddingAndSize;\r\n\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\tx -= paddingAndSize;\r\n\t\t\t}\r\n\t\t} else if (xAlign === 'left') {\r\n\t\t\tx -= radiusAndPadding;\r\n\t\t} else if (xAlign === 'right') {\r\n\t\t\tx += radiusAndPadding;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\t}\r\n\r\n\tChart.Tooltip = Chart.Element.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tthis._model = getBaseModel(this._options);\r\n\t\t},\r\n\r\n\t\t// Get the title\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetTitle: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\t\t\tvar callbacks = opts.callbacks;\r\n\r\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\r\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\r\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\r\n\t\t\tlines = pushOrConcat(lines, title);\r\n\t\t\tlines = pushOrConcat(lines, afterTitle);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBeforeBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetBody: function(tooltipItems, data) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\t\t\tvar bodyItems = [];\r\n\r\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\tvar bodyItem = {\r\n\t\t\t\t\tbefore: [],\r\n\t\t\t\t\tlines: [],\r\n\t\t\t\t\tafter: []\r\n\t\t\t\t};\r\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n\t\t\t\tbodyItems.push(bodyItem);\r\n\t\t\t});\r\n\r\n\t\t\treturn bodyItems;\r\n\t\t},\r\n\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetAfterBody: function() {\r\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n\t\t},\r\n\r\n\t\t// Get the footer and beforeFooter and afterFooter lines\r\n\t\t// Args are: (tooltipItem, data)\r\n\t\tgetFooter: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar callbacks = me._options.callbacks;\r\n\r\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\r\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n\t\t\tvar lines = [];\r\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\r\n\t\t\tlines = pushOrConcat(lines, footer);\r\n\t\t\tlines = pushOrConcat(lines, afterFooter);\r\n\r\n\t\t\treturn lines;\r\n\t\t},\r\n\r\n\t\tupdate: function(changed) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me._options;\r\n\r\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n\t\t\t// which breaks any animations.\r\n\t\t\tvar existingModel = me._model;\r\n\t\t\tvar model = me._model = getBaseModel(opts);\r\n\t\t\tvar active = me._active;\r\n\r\n\t\t\tvar data = me._data;\r\n\r\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\r\n\t\t\tvar alignment = {\r\n\t\t\t\txAlign: existingModel.xAlign,\r\n\t\t\t\tyAlign: existingModel.yAlign\r\n\t\t\t};\r\n\t\t\tvar backgroundPoint = {\r\n\t\t\t\tx: existingModel.x,\r\n\t\t\t\ty: existingModel.y\r\n\t\t\t};\r\n\t\t\tvar tooltipSize = {\r\n\t\t\t\twidth: existingModel.width,\r\n\t\t\t\theight: existingModel.height\r\n\t\t\t};\r\n\t\t\tvar tooltipPosition = {\r\n\t\t\t\tx: existingModel.caretX,\r\n\t\t\t\ty: existingModel.caretY\r\n\t\t\t};\r\n\r\n\t\t\tvar i, len;\r\n\r\n\t\t\tif (active.length) {\r\n\t\t\t\tmodel.opacity = 1;\r\n\r\n\t\t\t\tvar labelColors = [];\r\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\r\n\r\n\t\t\t\tvar tooltipItems = [];\r\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\r\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\r\n\t\t\t\tif (opts.filter) {\r\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\r\n\t\t\t\t\t\treturn opts.filter(a, data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\r\n\t\t\t\tif (opts.itemSort) {\r\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\r\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Determine colors for boxes\r\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\r\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Build the Text Lines\r\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\r\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\r\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\r\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\r\n\r\n\t\t\t\t// Initial positioning and colors\r\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\r\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\r\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\r\n\t\t\t\tmodel.labelColors = labelColors;\r\n\r\n\t\t\t\t// data points\r\n\t\t\t\tmodel.dataPoints = tooltipItems;\r\n\r\n\t\t\t\t// We need to determine alignment of the tooltip\r\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\r\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\r\n\t\t\t\t// Final Size and Position\r\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\r\n\t\t\t} else {\r\n\t\t\t\tmodel.opacity = 0;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.xAlign = alignment.xAlign;\r\n\t\t\tmodel.yAlign = alignment.yAlign;\r\n\t\t\tmodel.x = backgroundPoint.x;\r\n\t\t\tmodel.y = backgroundPoint.y;\r\n\t\t\tmodel.width = tooltipSize.width;\r\n\t\t\tmodel.height = tooltipSize.height;\r\n\r\n\t\t\t// Point where the caret on the tooltip points to\r\n\t\t\tmodel.caretX = tooltipPosition.x;\r\n\t\t\tmodel.caretY = tooltipPosition.y;\r\n\r\n\t\t\tme._model = model;\r\n\r\n\t\t\tif (changed && opts.custom) {\r\n\t\t\t\topts.custom.call(me, model);\r\n\t\t\t}\r\n\r\n\t\t\treturn me;\r\n\t\t},\r\n\t\tdrawCaret: function(tooltipPoint, size) {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n\t\t},\r\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\r\n\t\t\tvar x1, x2, x3;\r\n\t\t\tvar y1, y2, y3;\r\n\t\t\tvar caretSize = vm.caretSize;\r\n\t\t\tvar cornerRadius = vm.cornerRadius;\r\n\t\t\tvar xAlign = vm.xAlign,\r\n\t\t\t\tyAlign = vm.yAlign;\r\n\t\t\tvar ptX = tooltipPoint.x,\r\n\t\t\t\tptY = tooltipPoint.y;\r\n\t\t\tvar width = size.width,\r\n\t\t\t\theight = size.height;\r\n\r\n\t\t\tif (yAlign === 'center') {\r\n\t\t\t\ty2 = ptY + (height / 2);\r\n\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx1 = ptX;\r\n\t\t\t\t\tx2 = x1 - caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\r\n\t\t\t\t\ty1 = y2 + caretSize;\r\n\t\t\t\t\ty3 = y2 - caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx1 = ptX + width;\r\n\t\t\t\t\tx2 = x1 + caretSize;\r\n\t\t\t\t\tx3 = x1;\r\n\r\n\t\t\t\t\ty1 = y2 - caretSize;\r\n\t\t\t\t\ty3 = y2 + caretSize;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (xAlign === 'left') {\r\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\r\n\t\t\t\t\tx1 = x2 - caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t} else if (xAlign === 'right') {\r\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\r\n\t\t\t\t\tx1 = x2 - caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx2 = ptX + (width / 2);\r\n\t\t\t\t\tx1 = x2 - caretSize;\r\n\t\t\t\t\tx3 = x2 + caretSize;\r\n\t\t\t\t}\r\n\t\t\t\tif (yAlign === 'top') {\r\n\t\t\t\t\ty1 = ptY;\r\n\t\t\t\t\ty2 = y1 - caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty1 = ptY + height;\r\n\t\t\t\t\ty2 = y1 + caretSize;\r\n\t\t\t\t\ty3 = y1;\r\n\t\t\t\t\t// invert drawing order\r\n\t\t\t\t\tvar tmp = x3;\r\n\t\t\t\t\tx3 = x1;\r\n\t\t\t\t\tx1 = tmp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\r\n\t\t},\r\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\r\n\t\t\tvar title = vm.title;\r\n\r\n\t\t\tif (title.length) {\r\n\t\t\t\tctx.textAlign = vm._titleAlign;\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\r\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\r\n\r\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n\t\t\t\tvar i, len;\r\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\r\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\r\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n\t\t\t\t\tif (i + 1 === title.length) {\r\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\r\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\r\n\t\t\tvar bodySpacing = vm.bodySpacing;\r\n\t\t\tvar body = vm.body;\r\n\r\n\t\t\tctx.textAlign = vm._bodyAlign;\r\n\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\tvar textColor = mergeOpacity(vm.bodyFontColor, opacity);\r\n\t\t\tctx.fillStyle = textColor;\r\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n\t\t\t// Before Body\r\n\t\t\tvar xLinePadding = 0;\r\n\t\t\tvar fillLineOfText = function(line) {\r\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\r\n\t\t\t};\r\n\r\n\t\t\t// Before body lines\r\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n\t\t\tvar drawColorBoxes = vm.displayColors;\r\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n\t\t\t// Draw body lines now\r\n\t\t\thelpers.each(body, function(bodyItem, i) {\r\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\r\n\r\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\r\n\t\t\t\t\t// Draw Legend-like boxes if needed\r\n\t\t\t\t\tif (drawColorBoxes) {\r\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\r\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Border\r\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n\t\t\t\t\t\t// Inner square\r\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n\r\n\t\t\t\t\t\tctx.fillStyle = textColor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfillLineOfText(line);\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\r\n\t\t\t});\r\n\r\n\t\t\t// Reset back to 0 for after body\r\n\t\t\txLinePadding = 0;\r\n\r\n\t\t\t// After body lines\r\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\r\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\r\n\t\t},\r\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\r\n\t\t\tvar footer = vm.footer;\r\n\r\n\t\t\tif (footer.length) {\r\n\t\t\t\tpt.y += vm.footerMarginTop;\r\n\r\n\t\t\t\tctx.textAlign = vm._footerAlign;\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n\t\t\t\thelpers.each(footer, function(line) {\r\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\r\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n\t\t\tctx.lineWidth = vm.borderWidth;\r\n\t\t\tvar xAlign = vm.xAlign;\r\n\t\t\tvar yAlign = vm.yAlign;\r\n\t\t\tvar x = pt.x;\r\n\t\t\tvar y = pt.y;\r\n\t\t\tvar width = tooltipSize.width;\r\n\t\t\tvar height = tooltipSize.height;\r\n\t\t\tvar radius = vm.cornerRadius;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x + radius, y);\r\n\t\t\tif (yAlign === 'top') {\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\r\n\t\t\t}\r\n\t\t\tctx.lineTo(x + width - radius, y);\r\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\r\n\t\t\t}\r\n\t\t\tctx.lineTo(x + width, y + height - radius);\r\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n\t\t\tif (yAlign === 'bottom') {\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\r\n\t\t\t}\r\n\t\t\tctx.lineTo(x + radius, y + height);\r\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\r\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\r\n\t\t\t}\r\n\t\t\tctx.lineTo(x, y + radius);\r\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\r\n\t\t\tctx.closePath();\r\n\r\n\t\t\tctx.fill();\r\n\r\n\t\t\tif (vm.borderWidth > 0) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm.opacity === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar tooltipSize = {\r\n\t\t\t\twidth: vm.width,\r\n\t\t\t\theight: vm.height\r\n\t\t\t};\r\n\t\t\tvar pt = {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\r\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\r\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n\t\t\t// Truthy/falsey value for empty tooltip\r\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n\t\t\tif (this._options.enabled && hasTooltipContent) {\r\n\t\t\t\t// Draw Background\r\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n\t\t\t\t// Draw Title, Body, and Footer\r\n\t\t\t\tpt.x += vm.xPadding;\r\n\t\t\t\tpt.y += vm.yPadding;\r\n\r\n\t\t\t\t// Titles\r\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Body\r\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\r\n\r\n\t\t\t\t// Footer\r\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle an event\r\n\t\t * @private\r\n\t\t * @param {IEvent} event - The event to handle\r\n\t\t * @returns {Boolean} true if the tooltip changed\r\n\t\t */\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar options = me._options;\r\n\t\t\tvar changed = false;\r\n\r\n\t\t\tme._lastActive = me._lastActive || [];\r\n\r\n\t\t\t// Find Active Elements for tooltips\r\n\t\t\tif (e.type === 'mouseout') {\r\n\t\t\t\tme._active = [];\r\n\t\t\t} else {\r\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n\t\t\t}\r\n\r\n\t\t\t// Remember Last Actives\r\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n\t\t\t// If tooltip didn't change, do not handle the target event\r\n\t\t\tif (!changed) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tme._lastActive = me._active;\r\n\r\n\t\t\tif (options.enabled || options.custom) {\r\n\t\t\t\tme._eventPosition = {\r\n\t\t\t\t\tx: e.x,\r\n\t\t\t\t\ty: e.y\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar model = me._model;\r\n\t\t\t\tme.update(true);\r\n\t\t\t\tme.pivot();\r\n\r\n\t\t\t\t// See if our tooltip position changed\r\n\t\t\t\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\r\n\t\t\t}\r\n\r\n\t\t\treturn changed;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * @namespace Chart.Tooltip.positioners\r\n\t */\r\n\tChart.Tooltip.positioners = {\r\n\t\t/**\r\n\t\t * Average mode places the tooltip at the average position of the elements shown\r\n\t\t * @function Chart.Tooltip.positioners.average\r\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n\t\t * @returns {Point} tooltip position\r\n\t\t */\r\n\t\taverage: function(elements) {\r\n\t\t\tif (!elements.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar i, len;\r\n\t\t\tvar x = 0;\r\n\t\t\tvar y = 0;\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\r\n\t\t\t\tvar el = elements[i];\r\n\t\t\t\tif (el && el.hasValue()) {\r\n\t\t\t\t\tvar pos = el.tooltipPosition();\r\n\t\t\t\t\tx += pos.x;\r\n\t\t\t\t\ty += pos.y;\r\n\t\t\t\t\t++count;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(x / count),\r\n\t\t\t\ty: Math.round(y / count)\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\r\n\t\t * @function Chart.Tooltip.positioners.nearest\r\n\t\t * @param elements {Chart.Element[]} the tooltip elements\r\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\r\n\t\t * @returns {Point} the tooltip position\r\n\t\t */\r\n\t\tnearest: function(elements, eventPosition) {\r\n\t\t\tvar x = eventPosition.x;\r\n\t\t\tvar y = eventPosition.y;\r\n\r\n\t\t\tvar nearestElement;\r\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\r\n\t\t\tvar i, len;\r\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\r\n\t\t\t\tvar el = elements[i];\r\n\t\t\t\tif (el && el.hasValue()) {\r\n\t\t\t\t\tvar center = el.getCenterPoint();\r\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n\t\t\t\t\tif (d < minDistance) {\r\n\t\t\t\t\t\tminDistance = d;\r\n\t\t\t\t\t\tnearestElement = el;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (nearestElement) {\r\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\r\n\t\t\t\tx = tp.x;\r\n\t\t\t\ty = tp.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],35:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.arc = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderColor: '#fff',\r\n\t\tborderWidth: 2\r\n\t};\r\n\r\n\tChart.elements.Arc = Chart.Element.extend({\r\n\t\tinLabelRange: function(mouseX) {\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm) {\r\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tinRange: function(chartX, chartY) {\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tif (vm) {\r\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n\t\t\t\t\t\tx: chartX,\r\n\t\t\t\t\t\ty: chartY\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tangle = pointRelativePosition.angle,\r\n\t\t\t\t\tdistance = pointRelativePosition.distance;\r\n\r\n\t\t\t\t// Sanitise angle range\r\n\t\t\t\tvar startAngle = vm.startAngle;\r\n\t\t\t\tvar endAngle = vm.endAngle;\r\n\t\t\t\twhile (endAngle < startAngle) {\r\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\twhile (angle > endAngle) {\r\n\t\t\t\t\tangle -= 2.0 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\twhile (angle < startAngle) {\r\n\t\t\t\t\tangle += 2.0 * Math.PI;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if within the range of the open/close angle\r\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n\t\t\t\treturn (betweenAngles && withinRadius);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tgetCenterPoint: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\r\n\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetArea: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\r\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function() {\r\n\r\n\t\t\tvar ctx = this._chart.ctx,\r\n\t\t\t\tvm = this._view,\r\n\t\t\t\tsA = vm.startAngle,\r\n\t\t\t\teA = vm.endAngle;\r\n\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = vm.borderWidth;\r\n\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tctx.lineJoin = 'bevel';\r\n\r\n\t\t\tif (vm.borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],36:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tChart.defaults.global.elements.line = {\r\n\t\ttension: 0.4,\r\n\t\tbackgroundColor: globalDefaults.defaultColor,\r\n\t\tborderWidth: 3,\r\n\t\tborderColor: globalDefaults.defaultColor,\r\n\t\tborderCapStyle: 'butt',\r\n\t\tborderDash: [],\r\n\t\tborderDashOffset: 0.0,\r\n\t\tborderJoinStyle: 'miter',\r\n\t\tcapBezierPoints: true,\r\n\t\tfill: true, // do we fill in the area between the line and its base axis\r\n\t};\r\n\r\n\tChart.elements.Line = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar vm = me._view;\r\n\t\t\tvar ctx = me._chart.ctx;\r\n\t\t\tvar spanGaps = vm.spanGaps;\r\n\t\t\tvar points = me._children.slice(); // clone array\r\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\r\n\t\t\tvar lastDrawnIndex = -1;\r\n\t\t\tvar index, current, previous, currentVM;\r\n\r\n\t\t\t// If we are looping, adding the first point again\r\n\t\t\tif (me._loop && points.length) {\r\n\t\t\t\tpoints.push(points[0]);\r\n\t\t\t}\r\n\r\n\t\t\tctx.save();\r\n\r\n\t\t\t// Stroke Line Options\r\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n\t\t\t}\r\n\r\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n\t\t\t// Stroke Line\r\n\t\t\tctx.beginPath();\r\n\t\t\tlastDrawnIndex = -1;\r\n\r\n\t\t\tfor (index = 0; index < points.length; ++index) {\r\n\t\t\t\tcurrent = points[index];\r\n\t\t\t\tprevious = helpers.previousItem(points, index);\r\n\t\t\t\tcurrentVM = current._view;\r\n\r\n\t\t\t\t// First point moves to it's starting position no matter what\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\tif (!currentVM.skip) {\r\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\r\n\t\t\t\t\t\tlastDrawnIndex = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n\t\t\t\t\tif (!currentVM.skip) {\r\n\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\r\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Line to next point\r\n\t\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastDrawnIndex = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],37:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tglobalOpts = Chart.defaults.global,\r\n\t\tdefaultColor = globalOpts.defaultColor;\r\n\r\n\tglobalOpts.elements.point = {\r\n\t\tradius: 3,\r\n\t\tpointStyle: 'circle',\r\n\t\tbackgroundColor: defaultColor,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: defaultColor,\r\n\t\t// Hover\r\n\t\thitRadius: 1,\r\n\t\thoverRadius: 4,\r\n\t\thoverBorderWidth: 1\r\n\t};\r\n\r\n\tfunction xRange(mouseX) {\r\n\t\tvar vm = this._view;\r\n\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t}\r\n\r\n\tfunction yRange(mouseY) {\r\n\t\tvar vm = this._view;\r\n\t\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n\t}\r\n\r\n\tChart.elements.Point = Chart.Element.extend({\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t\t},\r\n\r\n\t\tinLabelRange: xRange,\r\n\t\tinXRange: xRange,\r\n\t\tinYRange: yRange,\r\n\r\n\t\tgetCenterPoint: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetArea: function() {\r\n\t\t\treturn Math.PI * Math.pow(this._view.radius, 2);\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y,\r\n\t\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t\t};\r\n\t\t},\r\n\t\tdraw: function(chartArea) {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar model = this._model;\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar pointStyle = vm.pointStyle;\r\n\t\t\tvar radius = vm.radius;\r\n\t\t\tvar x = vm.x;\r\n\t\t\tvar y = vm.y;\r\n\t\t\tvar color = Chart.helpers.color;\r\n\t\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n\t\t\tvar ratio = 0;\r\n\r\n\t\t\tif (vm.skip) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n\t\t\t// Cliping for Points.\r\n\t\t\t// going out from inner charArea?\r\n\t\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right*errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom*errMargin < model.y))) {\r\n\t\t\t\t// Point fade out\r\n\t\t\t\tif (model.x < chartArea.left) {\r\n\t\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\r\n\t\t\t\t} else if (chartArea.right*errMargin < model.x) {\r\n\t\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\r\n\t\t\t\t} else if (model.y < chartArea.top) {\r\n\t\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\r\n\t\t\t\t} else if (chartArea.bottom*errMargin < model.y) {\r\n\t\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\r\n\t\t\t\t}\r\n\t\t\t\tratio = Math.round(ratio*100) / 100;\r\n\t\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n\t\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n\t\t\t}\r\n\r\n\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],38:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar globalOpts = Chart.defaults.global;\r\n\r\n\tglobalOpts.elements.rectangle = {\r\n\t\tbackgroundColor: globalOpts.defaultColor,\r\n\t\tborderWidth: 0,\r\n\t\tborderColor: globalOpts.defaultColor,\r\n\t\tborderSkipped: 'bottom'\r\n\t};\r\n\r\n\tfunction isVertical(bar) {\r\n\t\treturn bar._view.width !== undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to get the bounds of the bar regardless of the orientation\r\n\t * @private\r\n\t * @param bar {Chart.Element.Rectangle} the bar\r\n\t * @return {Bounds} bounds of the bar\r\n\t */\r\n\tfunction getBarBounds(bar) {\r\n\t\tvar vm = bar._view;\r\n\t\tvar x1, x2, y1, y2;\r\n\r\n\t\tif (isVertical(bar)) {\r\n\t\t\t// vertical\r\n\t\t\tvar halfWidth = vm.width / 2;\r\n\t\t\tx1 = vm.x - halfWidth;\r\n\t\t\tx2 = vm.x + halfWidth;\r\n\t\t\ty1 = Math.min(vm.y, vm.base);\r\n\t\t\ty2 = Math.max(vm.y, vm.base);\r\n\t\t} else {\r\n\t\t\t// horizontal bar\r\n\t\t\tvar halfHeight = vm.height / 2;\r\n\t\t\tx1 = Math.min(vm.x, vm.base);\r\n\t\t\tx2 = Math.max(vm.x, vm.base);\r\n\t\t\ty1 = vm.y - halfHeight;\r\n\t\t\ty2 = vm.y + halfHeight;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: x1,\r\n\t\t\ttop: y1,\r\n\t\t\tright: x2,\r\n\t\t\tbottom: y2\r\n\t\t};\r\n\t}\r\n\r\n\tChart.elements.Rectangle = Chart.Element.extend({\r\n\t\tdraw: function() {\r\n\t\t\tvar ctx = this._chart.ctx;\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\r\n\t\t\tvar borderWidth = vm.borderWidth;\r\n\r\n\t\t\tif (!vm.horizontal) {\r\n\t\t\t\t// bar\r\n\t\t\t\tleft = vm.x - vm.width / 2;\r\n\t\t\t\tright = vm.x + vm.width / 2;\r\n\t\t\t\ttop = vm.y;\r\n\t\t\t\tbottom = vm.base;\r\n\t\t\t\tsignX = 1;\r\n\t\t\t\tsignY = bottom > top? 1: -1;\r\n\t\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\r\n\t\t\t} else {\r\n\t\t\t\t// horizontal bar\r\n\t\t\t\tleft = vm.base;\r\n\t\t\t\tright = vm.x;\r\n\t\t\t\ttop = vm.y - vm.height / 2;\r\n\t\t\t\tbottom = vm.y + vm.height / 2;\r\n\t\t\t\tsignX = right > left? 1: -1;\r\n\t\t\t\tsignY = 1;\r\n\t\t\t\tborderSkipped = vm.borderSkipped || 'left';\r\n\t\t\t}\r\n\r\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\r\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\r\n\t\t\tif (borderWidth) {\r\n\t\t\t\t// borderWidth shold be less than bar width and bar height.\r\n\t\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n\t\t\t\tborderWidth = borderWidth > barSize? barSize: borderWidth;\r\n\t\t\t\tvar halfStroke = borderWidth / 2;\r\n\t\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\r\n\t\t\t\tvar borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\r\n\t\t\t\tvar borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\r\n\t\t\t\tvar borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\r\n\t\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\r\n\t\t\t\t// not become a vertical line?\r\n\t\t\t\tif (borderLeft !== borderRight) {\r\n\t\t\t\t\ttop = borderTop;\r\n\t\t\t\t\tbottom = borderBottom;\r\n\t\t\t\t}\r\n\t\t\t\t// not become a horizontal line?\r\n\t\t\t\tif (borderTop !== borderBottom) {\r\n\t\t\t\t\tleft = borderLeft;\r\n\t\t\t\t\tright = borderRight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = vm.backgroundColor;\r\n\t\t\tctx.strokeStyle = vm.borderColor;\r\n\t\t\tctx.lineWidth = borderWidth;\r\n\r\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\r\n\t\t\t// | 1 2 |\r\n\t\t\t// | 0 3 |\r\n\t\t\tvar corners = [\r\n\t\t\t\t[left, bottom],\r\n\t\t\t\t[left, top],\r\n\t\t\t\t[right, top],\r\n\t\t\t\t[right, bottom]\r\n\t\t\t];\r\n\r\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\r\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\r\n\t\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\r\n\t\t\tif (startCorner === -1) {\r\n\t\t\t\tstartCorner = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfunction cornerAt(index) {\r\n\t\t\t\treturn corners[(startCorner + index) % 4];\r\n\t\t\t}\r\n\r\n\t\t\t// Draw rectangle from 'startCorner'\r\n\t\t\tvar corner = cornerAt(0);\r\n\t\t\tctx.moveTo(corner[0], corner[1]);\r\n\r\n\t\t\tfor (var i = 1; i < 4; i++) {\r\n\t\t\t\tcorner = cornerAt(i);\r\n\t\t\t\tctx.lineTo(corner[0], corner[1]);\r\n\t\t\t}\r\n\r\n\t\t\tctx.fill();\r\n\t\t\tif (borderWidth) {\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t},\r\n\t\theight: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.base - vm.y;\r\n\t\t},\r\n\t\tinRange: function(mouseX, mouseY) {\r\n\t\t\tvar inRange = false;\r\n\r\n\t\t\tif (this._view) {\r\n\t\t\t\tvar bounds = getBarBounds(this);\r\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n\t\t\t}\r\n\r\n\t\t\treturn inRange;\r\n\t\t},\r\n\t\tinLabelRange: function(mouseX, mouseY) {\r\n\t\t\tvar me = this;\r\n\t\t\tif (!me._view) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar inRange = false;\r\n\t\t\tvar bounds = getBarBounds(me);\r\n\r\n\t\t\tif (isVertical(me)) {\r\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n\t\t\t} else {\r\n\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n\t\t\t}\r\n\r\n\t\t\treturn inRange;\r\n\t\t},\r\n\t\tinXRange: function(mouseX) {\r\n\t\t\tvar bounds = getBarBounds(this);\r\n\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\r\n\t\t},\r\n\t\tinYRange: function(mouseY) {\r\n\t\t\tvar bounds = getBarBounds(this);\r\n\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n\t\t},\r\n\t\tgetCenterPoint: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\tvar x, y;\r\n\t\t\tif (isVertical(this)) {\r\n\t\t\t\tx = vm.x;\r\n\t\t\t\ty = (vm.y + vm.base) / 2;\r\n\t\t\t} else {\r\n\t\t\t\tx = (vm.x + vm.base) / 2;\r\n\t\t\t\ty = vm.y;\r\n\t\t\t}\r\n\r\n\t\t\treturn {x: x, y: y};\r\n\t\t},\r\n\t\tgetArea: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\r\n\t\t},\r\n\t\ttooltipPosition: function() {\r\n\t\t\tvar vm = this._view;\r\n\t\t\treturn {\r\n\t\t\t\tx: vm.x,\r\n\t\t\t\ty: vm.y\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n};\r\n\r\n},{}],39:[function(require,module,exports){\r\n'use strict';\r\n\r\n// Chart.Platform implementation for targeting a web browser\r\nmodule.exports = function(Chart) {\r\n\tvar helpers = Chart.helpers;\r\n\r\n\t// DOM event types -> Chart.js event types.\r\n\t// Note: only events with different types are mapped.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/Events\r\n\tvar eventTypeMap = {\r\n\t\t// Touch events\r\n\t\ttouchstart: 'mousedown',\r\n\t\ttouchmove: 'mousemove',\r\n\t\ttouchend: 'mouseup',\r\n\r\n\t\t// Pointer events\r\n\t\tpointerenter: 'mouseenter',\r\n\t\tpointerdown: 'mousedown',\r\n\t\tpointermove: 'mousemove',\r\n\t\tpointerup: 'mouseup',\r\n\t\tpointerleave: 'mouseout',\r\n\t\tpointerout: 'mouseout'\r\n\t};\r\n\r\n\t/**\r\n\t * The \"used\" size is the final value of a dimension property after all calculations have\r\n\t * been performed. This method uses the computed style of `element` but returns undefined\r\n\t * if the computed style is not expressed in pixels. That can happen in some cases where\r\n\t * `element` has a size relative to its parent and this last one is not yet displayed,\r\n\t * for example because of `display: none` on a parent node.\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n\t * @returns {Number} Size in pixels or undefined if unknown.\r\n\t */\r\n\tfunction readUsedSize(element, property) {\r\n\t\tvar value = helpers.getStyle(element, property);\r\n\t\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n\t\treturn matches? Number(matches[1]) : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the canvas style and render size without modifying the canvas display size,\r\n\t * since responsiveness is handled by the controller.resize() method. The config is used\r\n\t * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n\t */\r\n\tfunction initCanvas(canvas, config) {\r\n\t\tvar style = canvas.style;\r\n\r\n\t\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n\t\t// returns null or '' if no explicit value has been set to the canvas attribute.\r\n\t\tvar renderHeight = canvas.getAttribute('height');\r\n\t\tvar renderWidth = canvas.getAttribute('width');\r\n\r\n\t\t// Chart.js modifies some canvas values that we want to restore on destroy\r\n\t\tcanvas._chartjs = {\r\n\t\t\tinitial: {\r\n\t\t\t\theight: renderHeight,\r\n\t\t\t\twidth: renderWidth,\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tdisplay: style.display,\r\n\t\t\t\t\theight: style.height,\r\n\t\t\t\t\twidth: style.width\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Force canvas to display as block to avoid extra space caused by inline\r\n\t\t// elements, which would interfere with the responsive resize process.\r\n\t\t// https://github.com/chartjs/Chart.js/issues/2538\r\n\t\tstyle.display = style.display || 'block';\r\n\r\n\t\tif (renderWidth === null || renderWidth === '') {\r\n\t\t\tvar displayWidth = readUsedSize(canvas, 'width');\r\n\t\t\tif (displayWidth !== undefined) {\r\n\t\t\t\tcanvas.width = displayWidth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (renderHeight === null || renderHeight === '') {\r\n\t\t\tif (canvas.style.height === '') {\r\n\t\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\r\n\t\t\t\t// which one can be specified by the user but also by charts as default option\r\n\t\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n\t\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n\t\t\t} else {\r\n\t\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\r\n\t\t\t\tif (displayWidth !== undefined) {\r\n\t\t\t\t\tcanvas.height = displayHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\tfunction createEvent(type, chart, x, y, nativeEvent) {\r\n\t\treturn {\r\n\t\t\ttype: type,\r\n\t\t\tchart: chart,\r\n\t\t\tnative: nativeEvent || null,\r\n\t\t\tx: x !== undefined? x : null,\r\n\t\t\ty: y !== undefined? y : null,\r\n\t\t};\r\n\t}\r\n\r\n\tfunction fromNativeEvent(event, chart) {\r\n\t\tvar type = eventTypeMap[event.type] || event.type;\r\n\t\tvar pos = helpers.getRelativePosition(event, chart);\r\n\t\treturn createEvent(type, chart, pos.x, pos.y, event);\r\n\t}\r\n\r\n\tfunction createResizer(handler) {\r\n\t\tvar iframe = document.createElement('iframe');\r\n\t\tiframe.className = 'chartjs-hidden-iframe';\r\n\t\tiframe.style.cssText =\r\n\t\t\t'display:block;'+\r\n\t\t\t'overflow:hidden;'+\r\n\t\t\t'border:0;'+\r\n\t\t\t'margin:0;'+\r\n\t\t\t'top:0;'+\r\n\t\t\t'left:0;'+\r\n\t\t\t'bottom:0;'+\r\n\t\t\t'right:0;'+\r\n\t\t\t'height:100%;'+\r\n\t\t\t'width:100%;'+\r\n\t\t\t'position:absolute;'+\r\n\t\t\t'pointer-events:none;'+\r\n\t\t\t'z-index:-1;';\r\n\r\n\t\t// Prevent the iframe to gain focus on tab.\r\n\t\t// https://github.com/chartjs/Chart.js/issues/3090\r\n\t\tiframe.tabIndex = -1;\r\n\r\n\t\t// If the iframe is re-attached to the DOM, the resize listener is removed because the\r\n\t\t// content is reloaded, so make sure to install the handler after the iframe is loaded.\r\n\t\t// https://github.com/chartjs/Chart.js/issues/3521\r\n\t\thelpers.addEvent(iframe, 'load', function() {\r\n\t\t\thelpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);\r\n\r\n\t\t\t// The iframe size might have changed while loading, which can also\r\n\t\t\t// happen if the size has been changed while detached from the DOM.\r\n\t\t\thandler();\r\n\t\t});\r\n\r\n\t\treturn iframe;\r\n\t}\r\n\r\n\tfunction addResizeListener(node, listener, chart) {\r\n\t\tvar stub = node._chartjs = {\r\n\t\t\tticking: false\r\n\t\t};\r\n\r\n\t\t// Throttle the callback notification until the next animation frame.\r\n\t\tvar notify = function() {\r\n\t\t\tif (!stub.ticking) {\r\n\t\t\t\tstub.ticking = true;\r\n\t\t\t\thelpers.requestAnimFrame.call(window, function() {\r\n\t\t\t\t\tif (stub.resizer) {\r\n\t\t\t\t\t\tstub.ticking = false;\r\n\t\t\t\t\t\treturn listener(createEvent('resize', chart));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Let's keep track of this added iframe and thus avoid DOM query when removing it.\r\n\t\tstub.resizer = createResizer(notify);\r\n\r\n\t\tnode.insertBefore(stub.resizer, node.firstChild);\r\n\t}\r\n\r\n\tfunction removeResizeListener(node) {\r\n\t\tif (!node || !node._chartjs) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar resizer = node._chartjs.resizer;\r\n\t\tif (resizer) {\r\n\t\t\tresizer.parentNode.removeChild(resizer);\r\n\t\t\tnode._chartjs.resizer = null;\r\n\t\t}\r\n\r\n\t\tdelete node._chartjs;\r\n\t}\r\n\r\n\treturn {\r\n\t\tacquireContext: function(item, config) {\r\n\t\t\tif (typeof item === 'string') {\r\n\t\t\t\titem = document.getElementById(item);\r\n\t\t\t} else if (item.length) {\r\n\t\t\t\t// Support for array based queries (such as jQuery)\r\n\t\t\t\titem = item[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (item && item.canvas) {\r\n\t\t\t\t// Support for any object associated to a canvas (including a context2d)\r\n\t\t\t\titem = item.canvas;\r\n\t\t\t}\r\n\r\n\t\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n\t\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\r\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\r\n\t\t\tvar context = item && item.getContext && item.getContext('2d');\r\n\r\n\t\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n\t\t\t// inside an iframe or when running in a protected environment. We could guess the\r\n\t\t\t// types from their toString() value but let's keep things flexible and assume it's\r\n\t\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\r\n\t\t\t// https://github.com/chartjs/Chart.js/issues/3887\r\n\t\t\t// https://github.com/chartjs/Chart.js/issues/4102\r\n\t\t\t// https://github.com/chartjs/Chart.js/issues/4152\r\n\t\t\tif (context && context.canvas === item) {\r\n\t\t\t\tinitCanvas(item, config);\r\n\t\t\t\treturn context;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\treleaseContext: function(context) {\r\n\t\t\tvar canvas = context.canvas;\r\n\t\t\tif (!canvas._chartjs) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar initial = canvas._chartjs.initial;\r\n\t\t\t['height', 'width'].forEach(function(prop) {\r\n\t\t\t\tvar value = initial[prop];\r\n\t\t\t\tif (value === undefined || value === null) {\r\n\t\t\t\t\tcanvas.removeAttribute(prop);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvas.setAttribute(prop, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(initial.style || {}, function(value, key) {\r\n\t\t\t\tcanvas.style[key] = value;\r\n\t\t\t});\r\n\r\n\t\t\t// The canvas render size might have been changed (and thus the state stack discarded),\r\n\t\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\r\n\t\t\t// least the canvas context is reset to the default state by setting the canvas width.\r\n\t\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n\t\t\tcanvas.width = canvas.width;\r\n\r\n\t\t\tdelete canvas._chartjs;\r\n\t\t},\r\n\r\n\t\taddEventListener: function(chart, type, listener) {\r\n\t\t\tvar canvas = chart.canvas;\r\n\t\t\tif (type === 'resize') {\r\n\t\t\t\t// Note: the resize event is not supported on all browsers.\r\n\t\t\t\taddResizeListener(canvas.parentNode, listener, chart);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar stub = listener._chartjs || (listener._chartjs = {});\r\n\t\t\tvar proxies = stub.proxies || (stub.proxies = {});\r\n\t\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\r\n\t\t\t\tlistener(fromNativeEvent(event, chart));\r\n\t\t\t};\r\n\r\n\t\t\thelpers.addEvent(canvas, type, proxy);\r\n\t\t},\r\n\r\n\t\tremoveEventListener: function(chart, type, listener) {\r\n\t\t\tvar canvas = chart.canvas;\r\n\t\t\tif (type === 'resize') {\r\n\t\t\t\t// Note: the resize event is not supported on all browsers.\r\n\t\t\t\tremoveResizeListener(canvas.parentNode, listener);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar stub = listener._chartjs || {};\r\n\t\t\tvar proxies = stub.proxies || {};\r\n\t\t\tvar proxy = proxies[chart.id + '_' + type];\r\n\t\t\tif (!proxy) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thelpers.removeEvent(canvas, type, proxy);\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],40:[function(require,module,exports){\r\n'use strict';\r\n\r\n// By default, select the browser (DOM) platform.\r\n// @TODO Make possible to select another platform at build time.\r\nvar implementation = require(39);\r\n\r\nmodule.exports = function(Chart) {\r\n\t/**\r\n\t * @namespace Chart.platform\r\n\t * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n\t * @since 2.4.0\r\n\t */\r\n\tChart.platform = {\r\n\t\t/**\r\n\t\t * Called at chart construction time, returns a context2d instance implementing\r\n\t\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n\t\t * @param {*} item - The native item from which to acquire context (platform specific)\r\n\t\t * @param {Object} options - The chart options\r\n\t\t * @returns {CanvasRenderingContext2D} context2d instance\r\n\t\t */\r\n\t\tacquireContext: function() {},\r\n\r\n\t\t/**\r\n\t\t * Called at chart destruction time, releases any resources associated to the context\r\n\t\t * previously returned by the acquireContext() method.\r\n\t\t * @param {CanvasRenderingContext2D} context - The context2d instance\r\n\t\t * @returns {Boolean} true if the method succeeded, else false\r\n\t\t */\r\n\t\treleaseContext: function() {},\r\n\r\n\t\t/**\r\n\t\t * Registers the specified listener on the given chart.\r\n\t\t * @param {Chart} chart - Chart from which to listen for event\r\n\t\t * @param {String} type - The ({@link IEvent}) type to listen for\r\n\t\t * @param {Function} listener - Receives a notification (an object that implements\r\n\t\t * the {@link IEvent} interface) when an event of the specified type occurs.\r\n\t\t */\r\n\t\taddEventListener: function() {},\r\n\r\n\t\t/**\r\n\t\t * Removes the specified listener previously registered with addEventListener.\r\n\t\t * @param {Chart} chart -Chart from which to remove the listener\r\n\t\t * @param {String} type - The ({@link IEvent}) type to remove\r\n\t\t * @param {Function} listener - The listener function to remove from the event target.\r\n\t\t */\r\n\t\tremoveEventListener: function() {}\r\n\t};\r\n\r\n\t/**\r\n\t * @interface IPlatform\r\n\t * Allows abstracting platform dependencies away from the chart\r\n\t * @borrows Chart.platform.acquireContext as acquireContext\r\n\t * @borrows Chart.platform.releaseContext as releaseContext\r\n\t * @borrows Chart.platform.addEventListener as addEventListener\r\n\t * @borrows Chart.platform.removeEventListener as removeEventListener\r\n\t */\r\n\r\n\t/**\r\n\t * @interface IEvent\r\n\t * @prop {String} type - The event type name, possible values are:\r\n\t * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n\t * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n\t * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n\t * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n\t * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n\t */\r\n\r\n\tChart.helpers.extend(Chart.platform, implementation(Chart));\r\n};\r\n\r\n},{\"39\":39}],41:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\t/**\r\n\t * Plugin based on discussion from the following Chart.js issues:\r\n\t * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n\t * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n\t */\r\n\tChart.defaults.global.plugins.filler = {\r\n\t\tpropagate: true\r\n\t};\r\n\r\n\tvar defaults = Chart.defaults;\r\n\tvar helpers = Chart.helpers;\r\n\tvar mappers = {\r\n\t\tdataset: function(source) {\r\n\t\t\tvar index = source.fill;\r\n\t\t\tvar chart = source.chart;\r\n\t\t\tvar meta = chart.getDatasetMeta(index);\r\n\t\t\tvar visible = meta && chart.isDatasetVisible(index);\r\n\t\t\tvar points = (visible && meta.dataset._children) || [];\r\n\r\n\t\t\treturn !points.length? null : function(point, i) {\r\n\t\t\t\treturn points[i]._view || null;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tboundary: function(source) {\r\n\t\t\tvar boundary = source.boundary;\r\n\t\t\tvar x = boundary? boundary.x : null;\r\n\t\t\tvar y = boundary? boundary.y : null;\r\n\r\n\t\t\treturn function(point) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: x === null? point.x : x,\r\n\t\t\t\t\ty: y === null? point.y : y,\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t// @todo if (fill[0] === '#')\r\n\tfunction decodeFill(el, index, count) {\r\n\t\tvar model = el._model || {};\r\n\t\tvar fill = model.fill;\r\n\t\tvar target;\r\n\r\n\t\tif (fill === undefined) {\r\n\t\t\tfill = !!model.backgroundColor;\r\n\t\t}\r\n\r\n\t\tif (fill === false || fill === null) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (fill === true) {\r\n\t\t\treturn 'origin';\r\n\t\t}\r\n\r\n\t\ttarget = parseFloat(fill, 10);\r\n\t\tif (isFinite(target) && Math.floor(target) === target) {\r\n\t\t\tif (fill[0] === '-' || fill[0] === '+') {\r\n\t\t\t\ttarget = index + target;\r\n\t\t\t}\r\n\r\n\t\t\tif (target === index || target < 0 || target >= count) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\tswitch (fill) {\r\n\t\t// compatibility\r\n\t\tcase 'bottom':\r\n\t\t\treturn 'start';\r\n\t\tcase 'top':\r\n\t\t\treturn 'end';\r\n\t\tcase 'zero':\r\n\t\t\treturn 'origin';\r\n\t\t// supported boundaries\r\n\t\tcase 'origin':\r\n\t\tcase 'start':\r\n\t\tcase 'end':\r\n\t\t\treturn fill;\r\n\t\t// invalid fill values\r\n\t\tdefault:\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction computeBoundary(source) {\r\n\t\tvar model = source.el._model || {};\r\n\t\tvar scale = source.el._scale || {};\r\n\t\tvar fill = source.fill;\r\n\t\tvar target = null;\r\n\t\tvar horizontal;\r\n\r\n\t\tif (isFinite(fill)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// Backward compatibility: until v3, we still need to support boundary values set on\r\n\t\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n\t\t// controllers might still use it (e.g. the Smith chart).\r\n\r\n\t\tif (fill === 'start') {\r\n\t\t\ttarget = model.scaleBottom === undefined? scale.bottom : model.scaleBottom;\r\n\t\t} else if (fill === 'end') {\r\n\t\t\ttarget = model.scaleTop === undefined? scale.top : model.scaleTop;\r\n\t\t} else if (model.scaleZero !== undefined) {\r\n\t\t\ttarget = model.scaleZero;\r\n\t\t} else if (scale.getBasePosition) {\r\n\t\t\ttarget = scale.getBasePosition();\r\n\t\t} else if (scale.getBasePixel) {\r\n\t\t\ttarget = scale.getBasePixel();\r\n\t\t}\r\n\r\n\t\tif (target !== undefined && target !== null) {\r\n\t\t\tif (target.x !== undefined && target.y !== undefined) {\r\n\t\t\t\treturn target;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof target === 'number' && isFinite(target)) {\r\n\t\t\t\thorizontal = scale.isHorizontal();\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: horizontal? target : null,\r\n\t\t\t\t\ty: horizontal? null : target\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction resolveTarget(sources, index, propagate) {\r\n\t\tvar source = sources[index];\r\n\t\tvar fill = source.fill;\r\n\t\tvar visited = [index];\r\n\t\tvar target;\r\n\r\n\t\tif (!propagate) {\r\n\t\t\treturn fill;\r\n\t\t}\r\n\r\n\t\twhile (fill !== false && visited.indexOf(fill) === -1) {\r\n\t\t\tif (!isFinite(fill)) {\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = sources[fill];\r\n\t\t\tif (!target) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (target.visible) {\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\r\n\t\t\tvisited.push(fill);\r\n\t\t\tfill = target.fill;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction createMapper(source) {\r\n\t\tvar fill = source.fill;\r\n\t\tvar type = 'dataset';\r\n\r\n\t\tif (fill === false) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!isFinite(fill)) {\r\n\t\t\ttype = 'boundary';\r\n\t\t}\r\n\r\n\t\treturn mappers[type](source);\r\n\t}\r\n\r\n\tfunction isDrawable(point) {\r\n\t\treturn point && !point.skip;\r\n\t}\r\n\r\n\tfunction drawArea(ctx, curve0, curve1, len0, len1) {\r\n\t\tvar i;\r\n\r\n\t\tif (!len0 || !len1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// building first area curve (normal)\r\n\t\tctx.moveTo(curve0[0].x, curve0[0].y);\r\n\t\tfor (i=1; i<len0; ++i) {\r\n\t\t\thelpers.canvas.lineTo(ctx, curve0[i-1], curve0[i]);\r\n\t\t}\r\n\r\n\t\t// joining the two area curves\r\n\t\tctx.lineTo(curve1[len1-1].x, curve1[len1-1].y);\r\n\r\n\t\t// building opposite area curve (reverse)\r\n\t\tfor (i=len1-1; i>0; --i) {\r\n\t\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i-1], true);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction doFill(ctx, points, mapper, view, color, loop) {\r\n\t\tvar count = points.length;\r\n\t\tvar span = view.spanGaps;\r\n\t\tvar curve0 = [];\r\n\t\tvar curve1 = [];\r\n\t\tvar len0 = 0;\r\n\t\tvar len1 = 0;\r\n\t\tvar i, ilen, index, p0, p1, d0, d1;\r\n\r\n\t\tctx.beginPath();\r\n\r\n\t\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n\t\t\tindex = i%count;\r\n\t\t\tp0 = points[index]._view;\r\n\t\t\tp1 = mapper(p0, index, view);\r\n\t\t\td0 = isDrawable(p0);\r\n\t\t\td1 = isDrawable(p1);\r\n\r\n\t\t\tif (d0 && d1) {\r\n\t\t\t\tlen0 = curve0.push(p0);\r\n\t\t\t\tlen1 = curve1.push(p1);\r\n\t\t\t} else if (len0 && len1) {\r\n\t\t\t\tif (!span) {\r\n\t\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\r\n\t\t\t\t\tlen0 = len1 = 0;\r\n\t\t\t\t\tcurve0 = [];\r\n\t\t\t\t\tcurve1 = [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (d0) {\r\n\t\t\t\t\t\tcurve0.push(p0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (d1) {\r\n\t\t\t\t\t\tcurve1.push(p1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdrawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n\t\tctx.closePath();\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.fill();\r\n\t}\r\n\r\n\treturn {\r\n\t\tid: 'filler',\r\n\r\n\t\tafterDatasetsUpdate: function(chart, options) {\r\n\t\t\tvar count = (chart.data.datasets || []).length;\r\n\t\t\tvar propagate = options.propagate;\r\n\t\t\tvar sources = [];\r\n\t\t\tvar meta, i, el, source;\r\n\r\n\t\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t\tmeta = chart.getDatasetMeta(i);\r\n\t\t\t\tel = meta.dataset;\r\n\t\t\t\tsource = null;\r\n\r\n\t\t\t\tif (el && el._model && el instanceof Chart.elements.Line) {\r\n\t\t\t\t\tsource = {\r\n\t\t\t\t\t\tvisible: chart.isDatasetVisible(i),\r\n\t\t\t\t\t\tfill: decodeFill(el, i, count),\r\n\t\t\t\t\t\tchart: chart,\r\n\t\t\t\t\t\tel: el\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmeta.$filler = source;\r\n\t\t\t\tsources.push(source);\r\n\t\t\t}\r\n\r\n\t\t\tfor (i=0; i<count; ++i) {\r\n\t\t\t\tsource = sources[i];\r\n\t\t\t\tif (!source) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsource.fill = resolveTarget(sources, i, propagate);\r\n\t\t\t\tsource.boundary = computeBoundary(source);\r\n\t\t\t\tsource.mapper = createMapper(source);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeDatasetDraw: function(chart, args) {\r\n\t\t\tvar meta = args.meta.$filler;\r\n\t\t\tif (!meta) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar el = meta.el;\r\n\t\t\tvar view = el._view;\r\n\t\t\tvar points = el._children || [];\r\n\t\t\tvar mapper = meta.mapper;\r\n\t\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n\t\t\tif (mapper && color && points.length) {\r\n\t\t\t\tdoFill(chart.ctx, points, mapper, view, color, el._loop);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],42:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar layout = Chart.layoutService;\r\n\tvar noop = helpers.noop;\r\n\r\n\tChart.defaults.global.legend = {\r\n\t\tdisplay: true,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true,\r\n\t\treverse: false,\r\n\t\tweight: 1000,\r\n\r\n\t\t// a callback that will handle\r\n\t\tonClick: function(e, legendItem) {\r\n\t\t\tvar index = legendItem.datasetIndex;\r\n\t\t\tvar ci = this.chart;\r\n\t\t\tvar meta = ci.getDatasetMeta(index);\r\n\r\n\t\t\t// See controller.isDatasetVisible comment\r\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\r\n\r\n\t\t\t// We hid a dataset ... rerender the chart\r\n\t\t\tci.update();\r\n\t\t},\r\n\r\n\t\tonHover: null,\r\n\r\n\t\tlabels: {\r\n\t\t\tboxWidth: 40,\r\n\t\t\tpadding: 10,\r\n\t\t\t// Generates labels shown in the legend\r\n\t\t\t// Valid properties to return:\r\n\t\t\t// text : text to display\r\n\t\t\t// fillStyle : fill of coloured box\r\n\t\t\t// strokeStyle: stroke of coloured box\r\n\t\t\t// hidden : if this legend item refers to a hidden item\r\n\t\t\t// lineCap : cap style for line\r\n\t\t\t// lineDash\r\n\t\t\t// lineDashOffset :\r\n\t\t\t// lineJoin :\r\n\t\t\t// lineWidth :\r\n\t\t\tgenerateLabels: function(chart) {\r\n\t\t\t\tvar data = chart.data;\r\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: dataset.label,\r\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\r\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\r\n\t\t\t\t\t\tlineDash: dataset.borderDash,\r\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\r\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\r\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\r\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\r\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\r\n\r\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\r\n\t\t\t\t\t\tdatasetIndex: i\r\n\t\t\t\t\t};\r\n\t\t\t\t}, this) : [];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Helper function to get the box width based on the usePointStyle option\r\n\t * @param labelopts {Object} the label options on the legend\r\n\t * @param fontSize {Number} the label font size\r\n\t * @return {Number} width of the color box area\r\n\t */\r\n\tfunction getBoxWidth(labelOpts, fontSize) {\r\n\t\treturn labelOpts.usePointStyle ?\r\n\t\t\tfontSize * Math.SQRT2 :\r\n\t\t\tlabelOpts.boxWidth;\r\n\t}\r\n\r\n\tChart.Legend = Chart.Element.extend({\r\n\r\n\t\tinitialize: function(config) {\r\n\t\t\thelpers.extend(this, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tthis.legendHitBoxes = [];\r\n\r\n\t\t\t// Are we in doughnut mode which has a different data type\r\n\t\t\tthis.doughnutMode = false;\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\r\n\t\t// Any function defined here is inherited by all legend types.\r\n\t\t// Any function can be extended by the legend type\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labelOpts = me.options.labels;\r\n\t\t\tvar legendItems = labelOpts.generateLabels.call(me, me.chart);\r\n\r\n\t\t\tif (labelOpts.filter) {\r\n\t\t\t\tlegendItems = legendItems.filter(function(item) {\r\n\t\t\t\t\treturn labelOpts.filter(item, me.chart.data);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.reverse) {\r\n\t\t\t\tlegendItems.reverse();\r\n\t\t\t}\r\n\r\n\t\t\tme.legendItems = legendItems;\r\n\t\t},\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar display = opts.display;\r\n\r\n\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t// Reset hit boxes\r\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\r\n\r\n\t\t\tvar minSize = me.minSize;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tif (isHorizontal) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? 10 : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? 10 : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\t// Increase sizes here\r\n\t\t\tif (display) {\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t// Labels\r\n\r\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\r\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n\t\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\t\tctx.textBaseline = 'top';\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\r\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\r\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tminSize.height += totalHeight;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar vPadding = labelOpts.padding;\r\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\r\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\r\n\t\t\t\t\tvar currentColWidth = 0;\r\n\t\t\t\t\tvar currentColHeight = 0;\r\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\r\n\r\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\r\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n\t\t\t\t\t\t// If too tall, go to new column\r\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\r\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\r\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\r\n\r\n\t\t\t\t\t\t\tcurrentColWidth = 0;\r\n\t\t\t\t\t\t\tcurrentColHeight = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Get max width\r\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\r\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\r\n\r\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\r\n\t\t\t\t\t\thitboxes[i] = {\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\t\twidth: itemWidth,\r\n\t\t\t\t\t\t\theight: fontSize\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttotalWidth += currentColWidth;\r\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\r\n\t\t\t\t\tminSize.width += totalWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\r\n\t\t},\r\n\r\n\t\t// Actually draw the legend on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar labelOpts = opts.labels;\r\n\t\t\tvar globalDefault = Chart.defaults.global,\r\n\t\t\t\tlineDefault = globalDefault.elements.line,\r\n\t\t\t\tlegendWidth = me.width,\r\n\t\t\t\tlineWidths = me.lineWidths;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx,\r\n\t\t\t\t\tcursor,\r\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\t\t\t// Canvas setup\r\n\t\t\t\tctx.textAlign = 'left';\r\n\t\t\t\tctx.textBaseline = 'top';\r\n\t\t\t\tctx.lineWidth = 0.5;\r\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\r\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\r\n\t\t\t\tctx.font = labelFont;\r\n\r\n\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\r\n\t\t\t\t\thitboxes = me.legendHitBoxes;\r\n\r\n\t\t\t\t// current position\r\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\r\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set the ctx for the box\r\n\t\t\t\t\tctx.save();\r\n\r\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n\t\t\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\r\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\r\n\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\r\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\r\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\r\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\r\n\t\t\t\t\t\tvar centerX = x + offSet;\r\n\t\t\t\t\t\tvar centerY = y + offSet;\r\n\r\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\r\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Draw box as legend symbol\r\n\t\t\t\t\t\tif (!isLineWidthZero) {\r\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t};\r\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\r\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\r\n\t\t\t\t\tif (legendItem.hidden) {\r\n\t\t\t\t\t\t// Strikethrough the text if hidden\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcursor = {\r\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\r\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\r\n\t\t\t\t\t\tline: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\r\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\r\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\r\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\r\n\t\t\t\t\t\tx = cursor.x,\r\n\t\t\t\t\t\ty = cursor.y;\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tif (x + width >= legendWidth) {\r\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\r\n\t\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\r\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n\t\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\r\n\t\t\t\t\t\tcursor.line++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\r\n\r\n\t\t\t\t\thitboxes[i].left = x;\r\n\t\t\t\t\thitboxes[i].top = y;\r\n\r\n\t\t\t\t\t// Fill the actual label\r\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\r\n\r\n\t\t\t\t\tif (isHorizontal) {\r\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcursor.y += itemHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handle an event\r\n\t\t * @private\r\n\t\t * @param {IEvent} event - The event to handle\r\n\t\t * @return {Boolean} true if a change occured\r\n\t\t */\r\n\t\thandleEvent: function(e) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\r\n\t\t\tvar changed = false;\r\n\r\n\t\t\tif (type === 'mousemove') {\r\n\t\t\t\tif (!opts.onHover) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else if (type === 'click') {\r\n\t\t\t\tif (!opts.onClick) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Chart event already has relative position in it\r\n\t\t\tvar x = e.x,\r\n\t\t\t\ty = e.y;\r\n\r\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n\t\t\t\t// See if we are touching one of the dataset boxes\r\n\t\t\t\tvar lh = me.legendHitBoxes;\r\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\r\n\t\t\t\t\tvar hitBox = lh[i];\r\n\r\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n\t\t\t\t\t\t// Touching an element\r\n\t\t\t\t\t\tif (type === 'click') {\r\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\r\n\t\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (type === 'mousemove') {\r\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\r\n\t\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\r\n\t\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn changed;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction createNewLegendAndAttach(chart, legendOpts) {\r\n\t\tvar legend = new Chart.Legend({\r\n\t\t\tctx: chart.ctx,\r\n\t\t\toptions: legendOpts,\r\n\t\t\tchart: chart\r\n\t\t});\r\n\r\n\t\tlayout.configure(chart, legend, legendOpts);\r\n\t\tlayout.addBox(chart, legend);\r\n\t\tchart.legend = legend;\r\n\t}\r\n\r\n\treturn {\r\n\t\tid: 'legend',\r\n\r\n\t\tbeforeInit: function(chart) {\r\n\t\t\tvar legendOpts = chart.options.legend;\r\n\r\n\t\t\tif (legendOpts) {\r\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeUpdate: function(chart) {\r\n\t\t\tvar legendOpts = chart.options.legend;\r\n\t\t\tvar legend = chart.legend;\r\n\r\n\t\t\tif (legendOpts) {\r\n\t\t\t\tlegendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);\r\n\r\n\t\t\t\tif (legend) {\r\n\t\t\t\t\tlayout.configure(chart, legend, legendOpts);\r\n\t\t\t\t\tlegend.options = legendOpts;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\r\n\t\t\t\t}\r\n\t\t\t} else if (legend) {\r\n\t\t\t\tlayout.removeBox(chart, legend);\r\n\t\t\t\tdelete chart.legend;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tafterEvent: function(chart, e) {\r\n\t\t\tvar legend = chart.legend;\r\n\t\t\tif (legend) {\r\n\t\t\t\tlegend.handleEvent(e);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],43:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar layout = Chart.layoutService;\r\n\tvar noop = helpers.noop;\r\n\r\n\tChart.defaults.global.title = {\r\n\t\tdisplay: false,\r\n\t\tposition: 'top',\r\n\t\tfullWidth: true,\r\n\t\tweight: 2000,        // by default greater than legend (1000) to be above\r\n\t\tfontStyle: 'bold',\r\n\t\tpadding: 10,\r\n\r\n\t\t// actual title\r\n\t\ttext: ''\r\n\t};\r\n\r\n\tChart.Title = Chart.Element.extend({\r\n\t\tinitialize: function(config) {\r\n\t\t\tvar me = this;\r\n\t\t\thelpers.extend(me, config);\r\n\r\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\r\n\t\t\tme.legendHitBoxes = [];\r\n\t\t},\r\n\r\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n\t\tbeforeUpdate: noop,\r\n\t\tupdate: function(maxWidth, maxHeight, margins) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n\t\t\tme.beforeUpdate();\r\n\r\n\t\t\t// Absorb the master measurements\r\n\t\t\tme.maxWidth = maxWidth;\r\n\t\t\tme.maxHeight = maxHeight;\r\n\t\t\tme.margins = margins;\r\n\r\n\t\t\t// Dimensions\r\n\t\t\tme.beforeSetDimensions();\r\n\t\t\tme.setDimensions();\r\n\t\t\tme.afterSetDimensions();\r\n\t\t\t// Labels\r\n\t\t\tme.beforeBuildLabels();\r\n\t\t\tme.buildLabels();\r\n\t\t\tme.afterBuildLabels();\r\n\r\n\t\t\t// Fit\r\n\t\t\tme.beforeFit();\r\n\t\t\tme.fit();\r\n\t\t\tme.afterFit();\r\n\t\t\t//\r\n\t\t\tme.afterUpdate();\r\n\r\n\t\t\treturn me.minSize;\r\n\r\n\t\t},\r\n\t\tafterUpdate: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeSetDimensions: noop,\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.width = me.maxWidth;\r\n\t\t\t\tme.left = 0;\r\n\t\t\t\tme.right = me.width;\r\n\t\t\t} else {\r\n\t\t\t\tme.height = me.maxHeight;\r\n\r\n\t\t\t\t// Reset position before calculating rotation\r\n\t\t\t\tme.top = 0;\r\n\t\t\t\tme.bottom = me.height;\r\n\t\t\t}\r\n\r\n\t\t\t// Reset padding\r\n\t\t\tme.paddingLeft = 0;\r\n\t\t\tme.paddingTop = 0;\r\n\t\t\tme.paddingRight = 0;\r\n\t\t\tme.paddingBottom = 0;\r\n\r\n\t\t\t// Reset minSize\r\n\t\t\tme.minSize = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t},\r\n\t\tafterSetDimensions: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeBuildLabels: noop,\r\n\t\tbuildLabels: noop,\r\n\t\tafterBuildLabels: noop,\r\n\r\n\t\t//\r\n\r\n\t\tbeforeFit: noop,\r\n\t\tfit: function() {\r\n\t\t\tvar me = this,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global,\r\n\t\t\t\tdisplay = opts.display,\r\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\tminSize = me.minSize;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\r\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t} else {\r\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\r\n\t\t\t}\r\n\r\n\t\t\tme.width = minSize.width;\r\n\t\t\tme.height = minSize.height;\r\n\r\n\t\t},\r\n\t\tafterFit: noop,\r\n\r\n\t\t// Shared Methods\r\n\t\tisHorizontal: function() {\r\n\t\t\tvar pos = this.options.position;\r\n\t\t\treturn pos === 'top' || pos === 'bottom';\r\n\t\t},\r\n\r\n\t\t// Actually draw the title block on the canvas\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this,\r\n\t\t\t\tctx = me.ctx,\r\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\r\n\t\t\t\topts = me.options,\r\n\t\t\t\tglobalDefaults = Chart.defaults.global;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n\t\t\t\t\trotation = 0,\r\n\t\t\t\t\ttitleX,\r\n\t\t\t\t\ttitleY,\r\n\t\t\t\t\ttop = me.top,\r\n\t\t\t\t\tleft = me.left,\r\n\t\t\t\t\tbottom = me.bottom,\r\n\t\t\t\t\tright = me.right,\r\n\t\t\t\t\tmaxWidth;\r\n\r\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n\t\t\t\tctx.font = titleFont;\r\n\r\n\t\t\t\t// Horizontal\r\n\t\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\r\n\t\t\t\t\tmaxWidth = right - left;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\r\n\t\t\t\t\tmaxWidth = bottom - top;\r\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.save();\r\n\t\t\t\tctx.translate(titleX, titleY);\r\n\t\t\t\tctx.rotate(rotation);\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\r\n\t\t\t\tctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tfunction createNewTitleBlockAndAttach(chart, titleOpts) {\r\n\t\tvar title = new Chart.Title({\r\n\t\t\tctx: chart.ctx,\r\n\t\t\toptions: titleOpts,\r\n\t\t\tchart: chart\r\n\t\t});\r\n\r\n\t\tlayout.configure(chart, title, titleOpts);\r\n\t\tlayout.addBox(chart, title);\r\n\t\tchart.titleBlock = title;\r\n\t}\r\n\r\n\treturn {\r\n\t\tid: 'title',\r\n\r\n\t\tbeforeInit: function(chart) {\r\n\t\t\tvar titleOpts = chart.options.title;\r\n\r\n\t\t\tif (titleOpts) {\r\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeUpdate: function(chart) {\r\n\t\t\tvar titleOpts = chart.options.title;\r\n\t\t\tvar titleBlock = chart.titleBlock;\r\n\r\n\t\t\tif (titleOpts) {\r\n\t\t\t\ttitleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\r\n\r\n\t\t\t\tif (titleBlock) {\r\n\t\t\t\t\tlayout.configure(chart, titleBlock, titleOpts);\r\n\t\t\t\t\ttitleBlock.options = titleOpts;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\r\n\t\t\t\t}\r\n\t\t\t} else if (titleBlock) {\r\n\t\t\t\tChart.layoutService.removeBox(chart, titleBlock);\r\n\t\t\t\tdelete chart.titleBlock;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\n},{}],44:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\t// Default config for a category scale\r\n\tvar defaultConfig = {\r\n\t\tposition: 'bottom'\r\n\t};\r\n\r\n\tvar DatasetScale = Chart.Scale.extend({\r\n\t\t/**\r\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n\t\t* else fall back to data.labels\r\n\t\t* @private\r\n\t\t*/\r\n\t\tgetLabels: function() {\r\n\t\t\tvar data = this.chart.data;\r\n\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n\t\t},\r\n\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labels = me.getLabels();\r\n\t\t\tme.minIndex = 0;\r\n\t\t\tme.maxIndex = labels.length - 1;\r\n\t\t\tvar findIndex;\r\n\r\n\t\t\tif (me.options.ticks.min !== undefined) {\r\n\t\t\t\t// user specified min value\r\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\r\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (me.options.ticks.max !== undefined) {\r\n\t\t\t\t// user specified max value\r\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\r\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n\t\t\t}\r\n\r\n\t\t\tme.min = labels[me.minIndex];\r\n\t\t\tme.max = labels[me.maxIndex];\r\n\t\t},\r\n\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar labels = me.getLabels();\r\n\t\t\t// If we are viewing some subset of labels, slice the original array\r\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n\t\t},\r\n\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar data = me.chart.data;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\r\n\t\t\tif (data.yLabels && !isHorizontal) {\r\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n\t\t\t}\r\n\t\t\treturn me.ticks[index - me.minIndex];\r\n\t\t},\r\n\r\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\r\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n\t\t\tvar me = this;\r\n\t\t\t// 1 is added because we need the length but we have the indexes\r\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\r\n\t\t\t// If value is a data object, then index is the index in the data array,\r\n\t\t\t// not the index of the scale. We need to change that.\r\n\t\t\tvar valueCategory;\r\n\t\t\tif (value !== undefined && value !== null) {\r\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\r\n\t\t\t}\r\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n\t\t\t\tvar labels = me.getLabels();\r\n\t\t\t\tvalue = valueCategory || value;\r\n\t\t\t\tvar idx = labels.indexOf(value);\r\n\t\t\t\tindex = idx !== -1 ? idx : index;\r\n\t\t\t}\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\r\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\r\n\t\t\t\t\twidthOffset += (valueWidth / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn me.left + Math.round(widthOffset);\r\n\t\t\t}\r\n\t\t\tvar valueHeight = me.height / offsetAmt;\r\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\r\n\t\t\t\theightOffset += (valueHeight / 2);\r\n\t\t\t}\r\n\r\n\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index, includeOffset) {\r\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar value;\r\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\t\t\tvar horz = me.isHorizontal();\r\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n\t\t\tpixel -= horz ? me.left : me.top;\r\n\r\n\t\t\tif (me.options.gridLines.offsetGridLines) {\r\n\t\t\t\tpixel -= (valueDimension / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (pixel <= 0) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\tgetBasePixel: function() {\r\n\t\t\treturn this.bottom;\r\n\t\t}\r\n\t});\r\n\r\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],45:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: 'left',\r\n\t\tticks: {\r\n\t\t\tcallback: Chart.Ticks.formatters.linear\r\n\t\t}\r\n\t};\r\n\r\n\tvar LinearScale = Chart.LinearScaleBase.extend({\r\n\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tvar DEFAULT_MIN = 0;\r\n\t\t\tvar DEFAULT_MAX = 1;\r\n\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// First Calculate the range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\r\n\t\t\tvar hasStacks = opts.stacked;\r\n\t\t\tif (hasStacks === undefined) {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (hasStacks) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n\t\t\t\t\t\tmeta.stack !== undefined) {\r\n\t\t\t\t\t\thasStacks = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (opts.stacked || hasStacks) {\r\n\t\t\t\tvar valuesPerStack = {};\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tvar key = [\r\n\t\t\t\t\t\tmeta.type,\r\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n\t\t\t\t\t\tmeta.stack\r\n\t\t\t\t\t].join('.');\r\n\r\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\r\n\t\t\t\t\t\tvaluesPerStack[key] = {\r\n\t\t\t\t\t\t\tpositiveValues: [],\r\n\t\t\t\t\t\t\tnegativeValues: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Store these per type\r\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\r\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\r\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\r\n\t\t\t\t\t\t\t} else if (value < 0) {\r\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\r\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n\t\t\t\t\tvar minVal = helpers.min(values);\r\n\t\t\t\t\tvar maxVal = helpers.max(values);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tme.min = isFinite(me.min) ? me.min : DEFAULT_MIN;\r\n\t\t\tme.max = isFinite(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tthis.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar maxTicks;\r\n\t\t\tvar me = this;\r\n\t\t\tvar tickOpts = me.options.ticks;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n\t\t\t} else {\r\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\r\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n\t\t\t}\r\n\r\n\t\t\treturn maxTicks;\r\n\t\t},\r\n\t\t// Called after the ticks are built. We need\r\n\t\thandleDirectionalChanges: function() {\r\n\t\t\tif (!this.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tthis.ticks.reverse();\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\t// Utils\r\n\t\tgetPixelForValue: function(value) {\r\n\t\t\t// This must be called after fit has been run so that\r\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\r\n\t\t\tvar me = this;\r\n\t\t\tvar start = me.start;\r\n\r\n\t\t\tvar rightValue = +me.getRightValue(value);\r\n\t\t\tvar pixel;\r\n\t\t\tvar range = me.end - start;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\r\n\t\t\t\treturn Math.round(pixel);\r\n\t\t\t}\r\n\r\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\r\n\t\t\treturn Math.round(pixel);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\r\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n\t\t\treturn me.start + ((me.end - me.start) * offset);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index) {\r\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],46:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers,\r\n\t\tnoop = helpers.noop;\r\n\r\n\tChart.LinearScaleBase = Chart.Scale.extend({\r\n\t\thandleTickRangeOptions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\r\n\t\t\t// axis, they can manually override it\r\n\t\t\tif (tickOpts.beginAtZero) {\r\n\t\t\t\tvar minSign = helpers.sign(me.min);\r\n\t\t\t\tvar maxSign = helpers.sign(me.max);\r\n\r\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\r\n\t\t\t\t\t// move the top up to 0\r\n\t\t\t\t\tme.max = 0;\r\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\r\n\t\t\t\t\t// move the bottom down to 0\r\n\t\t\t\t\tme.min = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.min !== undefined) {\r\n\t\t\t\tme.min = tickOpts.min;\r\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\r\n\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tickOpts.max !== undefined) {\r\n\t\t\t\tme.max = tickOpts.max;\r\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\r\n\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tme.max++;\r\n\r\n\t\t\t\tif (!tickOpts.beginAtZero) {\r\n\t\t\t\t\tme.min--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetTickLimit: noop,\r\n\t\thandleDirectionalChanges: noop,\r\n\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\r\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n\t\t\t// the graph. Make sure we always have at least 2 ticks\r\n\t\t\tvar maxTicks = me.getTickLimit();\r\n\t\t\tmaxTicks = Math.max(2, maxTicks);\r\n\r\n\t\t\tvar numericGeneratorOptions = {\r\n\t\t\t\tmaxTicks: maxTicks,\r\n\t\t\t\tmin: tickOpts.min,\r\n\t\t\t\tmax: tickOpts.max,\r\n\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n\t\t\t};\r\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\r\n\r\n\t\t\tme.handleDirectionalChanges();\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\r\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n},{}],47:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: 'left',\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\tcallback: Chart.Ticks.formatters.logarithmic\r\n\t\t}\r\n\t};\r\n\r\n\tvar LogarithmicScale = Chart.Scale.extend({\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar data = chart.data;\r\n\t\t\tvar datasets = data.datasets;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\t\tvar isHorizontal = me.isHorizontal();\r\n\t\t\tfunction IDMatches(meta) {\r\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate Range\r\n\t\t\tme.min = null;\r\n\t\t\tme.max = null;\r\n\t\t\tme.minNotZero = null;\r\n\r\n\t\t\tvar hasStacks = opts.stacked;\r\n\t\t\tif (hasStacks === undefined) {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tif (hasStacks) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n\t\t\t\t\t\tmeta.stack !== undefined) {\r\n\t\t\t\t\t\thasStacks = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (opts.stacked || hasStacks) {\r\n\t\t\t\tvar valuesPerStack = {};\r\n\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tvar key = [\r\n\t\t\t\t\t\tmeta.type,\r\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n\t\t\t\t\t\tmeta.stack\r\n\t\t\t\t\t].join('.');\r\n\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\r\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\r\n\r\n\t\t\t\t\t\t\tif (opts.relativePoints) {\r\n\t\t\t\t\t\t\t\tvalues[index] = 100;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n\t\t\t\t\t\t\t\tvalues[index] += value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\r\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\r\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\r\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n\t\t\t\t});\r\n\r\n\t\t\t} else {\r\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.min === null) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t} else if (value < me.min) {\r\n\t\t\t\t\t\t\t\tme.min = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (me.max === null) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t} else if (value > me.max) {\r\n\t\t\t\t\t\t\t\tme.max = value;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\r\n\t\t\t\t\t\t\t\tme.minNotZero = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\r\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\r\n\r\n\t\t\tif (me.min === me.max) {\r\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\r\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\r\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.min = 1;\r\n\t\t\t\t\tme.max = 10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\tvar generationOptions = {\r\n\t\t\t\tmin: tickOpts.min,\r\n\t\t\t\tmax: tickOpts.max\r\n\t\t\t};\r\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\r\n\r\n\t\t\tif (!me.isHorizontal()) {\r\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\r\n\t\t\t\tticks.reverse();\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(ticks);\r\n\t\t\tme.min = helpers.min(ticks);\r\n\r\n\t\t\tif (tickOpts.reverse) {\r\n\t\t\t\tticks.reverse();\r\n\r\n\t\t\t\tme.start = me.max;\r\n\t\t\t\tme.end = me.min;\r\n\t\t\t} else {\r\n\t\t\t\tme.start = me.min;\r\n\t\t\t\tme.end = me.max;\r\n\t\t\t}\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tthis.tickValues = this.ticks.slice();\r\n\r\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\r\n\t\t},\r\n\t\t// Get the correct tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tgetPixelForTick: function(index) {\r\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension;\r\n\t\t\tvar pixel;\r\n\r\n\t\t\tvar start = me.start;\r\n\t\t\tvar newVal = +me.getRightValue(value);\r\n\t\t\tvar range;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\r\n\t\t\t\tif (newVal === 0) {\r\n\t\t\t\t\tpixel = me.left;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinnerDimension = me.width;\r\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Bottom - top since pixels increase downward on a screen\r\n\t\t\t\tinnerDimension = me.height;\r\n\t\t\t\tif (start === 0 && !tickOpts.reverse) {\r\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\r\n\t\t\t\t\tif (newVal === start) {\r\n\t\t\t\t\t\tpixel = me.bottom;\r\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\r\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\r\n\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\r\n\t\t\t\t\tif (newVal === me.end) {\r\n\t\t\t\t\t\tpixel = me.top;\r\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\r\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (newVal === 0) {\r\n\t\t\t\t\tpixel = tickOpts.reverse ? me.top : me.bottom;\r\n\t\t\t\t} else {\r\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\r\n\t\t\t\t\tinnerDimension = me.height;\r\n\t\t\t\t\tpixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pixel;\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\r\n\t\t\tvar value, innerDimension;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tinnerDimension = me.width;\r\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\r\n\t\t\t} else {  // todo: if start === 0\r\n\t\t\t\tinnerDimension = me.height;\r\n\t\t\t\tvalue = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],48:[function(require,module,exports){\r\n'use strict';\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar globalDefaults = Chart.defaults.global;\r\n\r\n\tvar defaultConfig = {\r\n\t\tdisplay: true,\r\n\r\n\t\t// Boolean - Whether to animate scaling the chart from the centre\r\n\t\tanimate: true,\r\n\t\tposition: 'chartArea',\r\n\r\n\t\tangleLines: {\r\n\t\t\tdisplay: true,\r\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\r\n\t\t\tlineWidth: 1\r\n\t\t},\r\n\r\n\t\tgridLines: {\r\n\t\t\tcircular: false\r\n\t\t},\r\n\r\n\t\t// label settings\r\n\t\tticks: {\r\n\t\t\t// Boolean - Show a backdrop to the scale label\r\n\t\t\tshowLabelBackdrop: true,\r\n\r\n\t\t\t// String - The colour of the label backdrop\r\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\r\n\r\n\t\t\t// Number - The backdrop padding above & below the label in pixels\r\n\t\t\tbackdropPaddingY: 2,\r\n\r\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\r\n\t\t\tbackdropPaddingX: 2,\r\n\r\n\t\t\tcallback: Chart.Ticks.formatters.linear\r\n\t\t},\r\n\r\n\t\tpointLabels: {\r\n\t\t\t// Boolean - if true, show point labels\r\n\t\t\tdisplay: true,\r\n\r\n\t\t\t// Number - Point label font size in pixels\r\n\t\t\tfontSize: 10,\r\n\r\n\t\t\t// Function - Used to convert point labels\r\n\t\t\tcallback: function(label) {\r\n\t\t\t\treturn label;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfunction getValueCount(scale) {\r\n\t\tvar opts = scale.options;\r\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\r\n\t}\r\n\r\n\tfunction getPointLabelFontOptions(scale) {\r\n\t\tvar pointLabelOptions = scale.options.pointLabels;\r\n\t\tvar fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\r\n\t\tvar fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\tvar fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n\t\treturn {\r\n\t\t\tsize: fontSize,\r\n\t\t\tstyle: fontStyle,\r\n\t\t\tfamily: fontFamily,\r\n\t\t\tfont: font\r\n\t\t};\r\n\t}\r\n\r\n\tfunction measureLabelSize(ctx, fontSize, label) {\r\n\t\tif (helpers.isArray(label)) {\r\n\t\t\treturn {\r\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\r\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tw: ctx.measureText(label).width,\r\n\t\t\th: fontSize\r\n\t\t};\r\n\t}\r\n\r\n\tfunction determineLimits(angle, pos, size, min, max) {\r\n\t\tif (angle === min || angle === max) {\r\n\t\t\treturn {\r\n\t\t\t\tstart: pos - (size / 2),\r\n\t\t\t\tend: pos + (size / 2)\r\n\t\t\t};\r\n\t\t} else if (angle < min || angle > max) {\r\n\t\t\treturn {\r\n\t\t\t\tstart: pos - size - 5,\r\n\t\t\t\tend: pos\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstart: pos,\r\n\t\t\tend: pos + size + 5\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to fit a radial linear scale with point labels\r\n\t */\r\n\tfunction fitWithPointLabels(scale) {\r\n\t\t/*\r\n\t\t * Right, this is really confusing and there is a lot of maths going on here\r\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n\t\t *\r\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n\t\t *\r\n\t\t * Solution:\r\n\t\t *\r\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\r\n\t\t * at each index we check if the text overlaps.\r\n\t\t *\r\n\t\t * Where it does, we store that angle and that index.\r\n\t\t *\r\n\t\t * After finding the largest index and angle we calculate how much we need to remove\r\n\t\t * from the shape radius to move the point inwards by that x.\r\n\t\t *\r\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n\t\t * along with labels.\r\n\t\t *\r\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n\t\t *\r\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n\t\t * and position it in the most space efficient manner\r\n\t\t *\r\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n\t\t */\r\n\r\n\t\tvar plFont = getPointLabelFontOptions(scale);\r\n\r\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\r\n\t\tvar furthestLimits = {\r\n\t\t\tr: scale.width,\r\n\t\t\tl: 0,\r\n\t\t\tt: scale.height,\r\n\t\t\tb: 0\r\n\t\t};\r\n\t\tvar furthestAngles = {};\r\n\t\tvar i;\r\n\t\tvar textSize;\r\n\t\tvar pointPosition;\r\n\r\n\t\tscale.ctx.font = plFont.font;\r\n\t\tscale._pointLabelSizes = [];\r\n\r\n\t\tvar valueCount = getValueCount(scale);\r\n\t\tfor (i = 0; i < valueCount; i++) {\r\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\r\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\r\n\t\t\tscale._pointLabelSizes[i] = textSize;\r\n\r\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\r\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\r\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\r\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n\r\n\t\t\tif (hLimits.start < furthestLimits.l) {\r\n\t\t\t\tfurthestLimits.l = hLimits.start;\r\n\t\t\t\tfurthestAngles.l = angleRadians;\r\n\t\t\t}\r\n\r\n\t\t\tif (hLimits.end > furthestLimits.r) {\r\n\t\t\t\tfurthestLimits.r = hLimits.end;\r\n\t\t\t\tfurthestAngles.r = angleRadians;\r\n\t\t\t}\r\n\r\n\t\t\tif (vLimits.start < furthestLimits.t) {\r\n\t\t\t\tfurthestLimits.t = vLimits.start;\r\n\t\t\t\tfurthestAngles.t = angleRadians;\r\n\t\t\t}\r\n\r\n\t\t\tif (vLimits.end > furthestLimits.b) {\r\n\t\t\t\tfurthestLimits.b = vLimits.end;\r\n\t\t\t\tfurthestAngles.b = angleRadians;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to fit a radial linear scale with no point labels\r\n\t */\r\n\tfunction fit(scale) {\r\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\r\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\r\n\t\tscale.setCenterPoint(0, 0, 0, 0);\r\n\t}\r\n\r\n\tfunction getTextAlignForAngle(angle) {\r\n\t\tif (angle === 0 || angle === 180) {\r\n\t\t\treturn 'center';\r\n\t\t} else if (angle < 180) {\r\n\t\t\treturn 'left';\r\n\t\t}\r\n\r\n\t\treturn 'right';\r\n\t}\r\n\r\n\tfunction fillText(ctx, text, position, fontSize) {\r\n\t\tif (helpers.isArray(text)) {\r\n\t\t\tvar y = position.y;\r\n\t\t\tvar spacing = 1.5 * fontSize;\r\n\r\n\t\t\tfor (var i = 0; i < text.length; ++i) {\r\n\t\t\t\tctx.fillText(text[i], position.x, y);\r\n\t\t\t\ty+= spacing;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tctx.fillText(text, position.x, position.y);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\r\n\t\tif (angle === 90 || angle === 270) {\r\n\t\t\tposition.y -= (textSize.h / 2);\r\n\t\t} else if (angle > 270 || angle < 90) {\r\n\t\t\tposition.y -= textSize.h;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction drawPointLabels(scale) {\r\n\t\tvar ctx = scale.ctx;\r\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\t\tvar opts = scale.options;\r\n\t\tvar angleLineOpts = opts.angleLines;\r\n\t\tvar pointLabelOpts = opts.pointLabels;\r\n\r\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\r\n\t\tctx.strokeStyle = angleLineOpts.color;\r\n\r\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);\r\n\r\n\t\t// Point Label Font\r\n\t\tvar plFont = getPointLabelFontOptions(scale);\r\n\r\n\t\tctx.textBaseline = 'top';\r\n\r\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\r\n\t\t\tif (angleLineOpts.display) {\r\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\r\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\r\n\t\t\t\tctx.stroke();\r\n\t\t\t\tctx.closePath();\r\n\t\t\t}\r\n\r\n\t\t\tif (pointLabelOpts.display) {\r\n\t\t\t\t// Extra 3px out for some label spacing\r\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\r\n\r\n\t\t\t\t// Keep this in loop since we may support array properties here\r\n\t\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\tctx.font = plFont.font;\r\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\r\n\r\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\r\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\r\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\r\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\r\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\r\n\t\tvar ctx = scale.ctx;\r\n\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\r\n\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\r\n\r\n\t\tif (scale.options.gridLines.circular) {\r\n\t\t\t// Draw circular arcs between the points\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.stroke();\r\n\t\t} else {\r\n\t\t\t// Draw straight lines connecting each index\r\n\t\t\tvar valueCount = getValueCount(scale);\r\n\r\n\t\t\tif (valueCount === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\r\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\r\n\r\n\t\t\tfor (var i = 1; i < valueCount; i++) {\r\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\r\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\r\n\t\t\t}\r\n\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction numberOrZero(param) {\r\n\t\treturn helpers.isNumber(param) ? param : 0;\r\n\t}\r\n\r\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\r\n\t\tsetDimensions: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\t// Set the unconstrained dimension before label rotation\r\n\t\t\tme.width = me.maxWidth;\r\n\t\t\tme.height = me.maxHeight;\r\n\t\t\tme.xCenter = Math.round(me.width / 2);\r\n\t\t\tme.yCenter = Math.round(me.height / 2);\r\n\r\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar chart = me.chart;\r\n\t\t\tvar min = Number.POSITIVE_INFINITY;\r\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\r\n\r\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\r\n\r\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\r\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\r\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmin = Math.min(value, min);\r\n\t\t\t\t\t\tmax = Math.max(value, max);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\r\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\r\n\r\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n\t\t\tme.handleTickRangeOptions();\r\n\t\t},\r\n\t\tgetTickLimit: function() {\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\r\n\r\n\t\t\t// Point labels\r\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\r\n\t\t},\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n\t\t},\r\n\t\tfit: function() {\r\n\t\t\tif (this.options.pointLabels.display) {\r\n\t\t\t\tfitWithPointLabels(this);\r\n\t\t\t} else {\r\n\t\t\t\tfit(this);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Set radius reductions and determine new radius and center point\r\n\t\t * @private\r\n\t\t */\r\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\r\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\r\n\r\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\r\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\r\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n\r\n\t\t\tme.drawingArea = Math.min(\r\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\r\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n\t\t},\r\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\r\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea,\r\n\t\t\t\tmaxTop = topMovement + me.drawingArea,\r\n\t\t\t\tmaxBottom = me.height - bottomMovement - me.drawingArea;\r\n\r\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\r\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\r\n\t\t},\r\n\r\n\t\tgetIndexAngle: function(index) {\r\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\r\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\r\n\t\t\t\tthis.chart.options.startAngle :\r\n\t\t\t\t0;\r\n\r\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\r\n\r\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\r\n\t\t\treturn index * angleMultiplier + startAngleRadians;\r\n\t\t},\r\n\t\tgetDistanceFromCenterForValue: function(value) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tif (value === null) {\r\n\t\t\t\treturn 0; // null always in center\r\n\t\t\t}\r\n\r\n\t\t\t// Take into account half font size + the yPadding of the top value\r\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\r\n\t\t\tif (me.options.reverse) {\r\n\t\t\t\treturn (me.max - value) * scalingFactor;\r\n\t\t\t}\r\n\t\t\treturn (value - me.min) * scalingFactor;\r\n\t\t},\r\n\t\tgetPointPosition: function(index, distanceFromCenter) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\r\n\t\t\treturn {\r\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\r\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\r\n\t\t\t};\r\n\t\t},\r\n\t\tgetPointPositionForValue: function(index, value) {\r\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n\t\t},\r\n\r\n\t\tgetBasePosition: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar min = me.min;\r\n\t\t\tvar max = me.max;\r\n\r\n\t\t\treturn me.getPointPositionForValue(0,\r\n\t\t\t\tme.beginAtZero? 0:\r\n\t\t\t\tmin < 0 && max < 0? max :\r\n\t\t\t\tmin > 0 && max > 0? min :\r\n\t\t\t\t0);\r\n\t\t},\r\n\r\n\t\tdraw: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar opts = me.options;\r\n\t\t\tvar gridLineOpts = opts.gridLines;\r\n\t\t\tvar tickOpts = opts.ticks;\r\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n\t\t\tif (opts.display) {\r\n\t\t\t\tvar ctx = me.ctx;\r\n\r\n\t\t\t\t// Tick Font\r\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\r\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\r\n\t\t\t\t\tif (index > 0 || opts.reverse) {\r\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\r\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\r\n\r\n\t\t\t\t\t\t// Draw circular lines around the scale\r\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\r\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (tickOpts.display) {\r\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\r\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\r\n\r\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\r\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\r\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\r\n\t\t\t\t\t\t\t\tctx.fillRect(\r\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\r\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\r\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\r\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\r\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\r\n\t\t\t\t\tdrawPointLabels(me);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\r\n\r\n};\r\n\r\n},{}],49:[function(require,module,exports){\r\n/* global window: false */\r\n'use strict';\r\n\r\nvar moment = require(6);\r\nmoment = typeof(moment) === 'function' ? moment : window.moment;\r\n\r\nmodule.exports = function(Chart) {\r\n\r\n\tvar helpers = Chart.helpers;\r\n\tvar interval = {\r\n\t\tmillisecond: {\r\n\t\t\tsize: 1,\r\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n\t\t},\r\n\t\tsecond: {\r\n\t\t\tsize: 1000,\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t},\r\n\t\tminute: {\r\n\t\t\tsize: 60000,\r\n\t\t\tsteps: [1, 2, 5, 10, 30]\r\n\t\t},\r\n\t\thour: {\r\n\t\t\tsize: 3600000,\r\n\t\t\tsteps: [1, 2, 3, 6, 12]\r\n\t\t},\r\n\t\tday: {\r\n\t\t\tsize: 86400000,\r\n\t\t\tsteps: [1, 2, 5]\r\n\t\t},\r\n\t\tweek: {\r\n\t\t\tsize: 604800000,\r\n\t\t\tmaxStep: 4\r\n\t\t},\r\n\t\tmonth: {\r\n\t\t\tsize: 2.628e9,\r\n\t\t\tmaxStep: 3\r\n\t\t},\r\n\t\tquarter: {\r\n\t\t\tsize: 7.884e9,\r\n\t\t\tmaxStep: 4\r\n\t\t},\r\n\t\tyear: {\r\n\t\t\tsize: 3.154e10,\r\n\t\t\tmaxStep: false\r\n\t\t}\r\n\t};\r\n\r\n\tvar defaultConfig = {\r\n\t\tposition: 'bottom',\r\n\r\n\t\ttime: {\r\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\r\n\t\t\tround: false, // none, or override with week, month, year, etc.\r\n\t\t\tdisplayFormat: false, // DEPRECATED\r\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n\t\t\tminUnit: 'millisecond',\r\n\r\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n\t\t\tdisplayFormats: {\r\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\r\n\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\r\n\t\t\t\tday: 'll', // Sep 4 2015\r\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\r\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\r\n\t\t\t\tyear: 'YYYY' // 2015\r\n\t\t\t},\r\n\t\t},\r\n\t\tticks: {\r\n\t\t\tautoSkip: false\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Helper function to parse time to a moment object\r\n\t * @param axis {TimeAxis} the time axis\r\n\t * @param label {Date|string|number|Moment} The thing to parse\r\n\t * @return {Moment} parsed time\r\n\t */\r\n\tfunction parseTime(axis, label) {\r\n\t\tvar timeOpts = axis.options.time;\r\n\t\tif (typeof timeOpts.parser === 'string') {\r\n\t\t\treturn moment(label, timeOpts.parser);\r\n\t\t}\r\n\t\tif (typeof timeOpts.parser === 'function') {\r\n\t\t\treturn timeOpts.parser(label);\r\n\t\t}\r\n\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n\t\t\t// Date objects\r\n\t\t\treturn moment(label);\r\n\t\t}\r\n\t\tif (label.isValid && label.isValid()) {\r\n\t\t\t// Moment support\r\n\t\t\treturn label;\r\n\t\t}\r\n\t\tvar format = timeOpts.format;\r\n\t\tif (typeof format !== 'string' && format.call) {\r\n\t\t\t// Custom parsing (return an instance of moment)\r\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\r\n\t\t\treturn format(label);\r\n\t\t}\r\n\t\t// Moment format parsing\r\n\t\treturn moment(label, format);\r\n\t}\r\n\r\n\t/**\r\n\t * Figure out which is the best unit for the scale\r\n\t * @param minUnit {String} minimum unit to use\r\n\t * @param min {Number} scale minimum\r\n\t * @param max {Number} scale maximum\r\n\t * @return {String} the unit to use\r\n\t */\r\n\tfunction determineUnit(minUnit, min, max, maxTicks) {\r\n\t\tvar units = Object.keys(interval);\r\n\t\tvar unit;\r\n\t\tvar numUnits = units.length;\r\n\r\n\t\tfor (var i = units.indexOf(minUnit); i < numUnits; i++) {\r\n\t\t\tunit = units[i];\r\n\t\t\tvar unitDetails = interval[unit];\r\n\t\t\tvar steps = (unitDetails.steps && unitDetails.steps[unitDetails.steps.length - 1]) || unitDetails.maxStep;\r\n\t\t\tif (steps === undefined || Math.ceil((max - min) / (steps * unitDetails.size)) <= maxTicks) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn unit;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines how we scale the unit\r\n\t * @param min {Number} the scale minimum\r\n\t * @param max {Number} the scale maximum\r\n\t * @param unit {String} the unit determined by the {@see determineUnit} method\r\n\t * @return {Number} the axis step size as a multiple of unit\r\n\t */\r\n\tfunction determineStepSize(min, max, unit, maxTicks) {\r\n\t\t// Using our unit, figoure out what we need to scale as\r\n\t\tvar unitDefinition = interval[unit];\r\n\t\tvar unitSizeInMilliSeconds = unitDefinition.size;\r\n\t\tvar sizeInUnits = Math.ceil((max - min) / unitSizeInMilliSeconds);\r\n\t\tvar multiplier = 1;\r\n\t\tvar range = max - min;\r\n\r\n\t\tif (unitDefinition.steps) {\r\n\t\t\t// Have an array of steps\r\n\t\t\tvar numSteps = unitDefinition.steps.length;\r\n\t\t\tfor (var i = 0; i < numSteps && sizeInUnits > maxTicks; i++) {\r\n\t\t\t\tmultiplier = unitDefinition.steps[i];\r\n\t\t\t\tsizeInUnits = Math.ceil(range / (unitSizeInMilliSeconds * multiplier));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twhile (sizeInUnits > maxTicks && maxTicks > 0) {\r\n\t\t\t\t++multiplier;\r\n\t\t\t\tsizeInUnits = Math.ceil(range / (unitSizeInMilliSeconds * multiplier));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn multiplier;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper for generating axis labels.\r\n\t * @param options {ITimeGeneratorOptions} the options for generation\r\n\t * @param dataRange {IRange} the data range\r\n\t * @param niceRange {IRange} the pretty range to display\r\n\t * @return {Number[]} ticks\r\n\t */\r\n\tfunction generateTicks(options, dataRange, niceRange) {\r\n\t\tvar ticks = [];\r\n\t\tif (options.maxTicks) {\r\n\t\t\tvar stepSize = options.stepSize;\r\n\t\t\tticks.push(options.min !== undefined ? options.min : niceRange.min);\r\n\t\t\tvar cur = moment(niceRange.min);\r\n\t\t\twhile (cur.add(stepSize, options.unit).valueOf() < niceRange.max) {\r\n\t\t\t\tticks.push(cur.valueOf());\r\n\t\t\t}\r\n\t\t\tvar realMax = options.max || niceRange.max;\r\n\t\t\tif (ticks[ticks.length - 1] !== realMax) {\r\n\t\t\t\tticks.push(realMax);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ticks;\r\n\t}\r\n\r\n\t/**\r\n\t * @function Chart.Ticks.generators.time\r\n\t * @param options {ITimeGeneratorOptions} the options for generation\r\n\t * @param dataRange {IRange} the data range\r\n\t * @return {Number[]} ticks\r\n\t */\r\n\tChart.Ticks.generators.time = function(options, dataRange) {\r\n\t\tvar niceMin;\r\n\t\tvar niceMax;\r\n\t\tvar isoWeekday = options.isoWeekday;\r\n\t\tif (options.unit === 'week' && isoWeekday !== false) {\r\n\t\t\tniceMin = moment(dataRange.min).startOf('isoWeek').isoWeekday(isoWeekday).valueOf();\r\n\t\t\tniceMax = moment(dataRange.max).startOf('isoWeek').isoWeekday(isoWeekday);\r\n\t\t\tif (dataRange.max - niceMax > 0) {\r\n\t\t\t\tniceMax.add(1, 'week');\r\n\t\t\t}\r\n\t\t\tniceMax = niceMax.valueOf();\r\n\t\t} else {\r\n\t\t\tniceMin = moment(dataRange.min).startOf(options.unit).valueOf();\r\n\t\t\tniceMax = moment(dataRange.max).startOf(options.unit);\r\n\t\t\tif (dataRange.max - niceMax > 0) {\r\n\t\t\t\tniceMax.add(1, options.unit);\r\n\t\t\t}\r\n\t\t\tniceMax = niceMax.valueOf();\r\n\t\t}\r\n\t\treturn generateTicks(options, dataRange, {\r\n\t\t\tmin: niceMin,\r\n\t\t\tmax: niceMax\r\n\t\t});\r\n\t};\r\n\r\n\tvar TimeScale = Chart.Scale.extend({\r\n\t\tinitialize: function() {\r\n\t\t\tif (!moment) {\r\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n\t\t\t}\r\n\r\n\t\t\tChart.Scale.prototype.initialize.call(this);\r\n\t\t},\r\n\t\tdetermineDataLimits: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar timeOpts = me.options.time;\r\n\r\n\t\t\t// We store the data range as unix millisecond timestamps so dataMin and dataMax will always be integers.\r\n\t\t\tvar dataMin = Number.MAX_SAFE_INTEGER;\r\n\t\t\tvar dataMax = Number.MIN_SAFE_INTEGER;\r\n\r\n\t\t\tvar chartData = me.chart.data;\r\n\t\t\tvar parsedData = {\r\n\t\t\t\tlabels: [],\r\n\t\t\t\tdatasets: []\r\n\t\t\t};\r\n\r\n\t\t\tvar timestamp;\r\n\r\n\t\t\thelpers.each(chartData.labels, function(label, labelIndex) {\r\n\t\t\t\tvar labelMoment = parseTime(me, label);\r\n\r\n\t\t\t\tif (labelMoment.isValid()) {\r\n\t\t\t\t\t// We need to round the time\r\n\t\t\t\t\tif (timeOpts.round) {\r\n\t\t\t\t\t\tlabelMoment.startOf(timeOpts.round);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttimestamp = labelMoment.valueOf();\r\n\t\t\t\t\tdataMin = Math.min(timestamp, dataMin);\r\n\t\t\t\t\tdataMax = Math.max(timestamp, dataMax);\r\n\r\n\t\t\t\t\t// Store this value for later\r\n\t\t\t\t\tparsedData.labels[labelIndex] = timestamp;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\thelpers.each(chartData.datasets, function(dataset, datasetIndex) {\r\n\t\t\t\tvar timestamps = [];\r\n\r\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null && me.chart.isDatasetVisible(datasetIndex)) {\r\n\t\t\t\t\t// We have potential point data, so we need to parse this\r\n\t\t\t\t\thelpers.each(dataset.data, function(value, dataIndex) {\r\n\t\t\t\t\t\tvar dataMoment = parseTime(me, me.getRightValue(value));\r\n\r\n\t\t\t\t\t\tif (dataMoment.isValid()) {\r\n\t\t\t\t\t\t\tif (timeOpts.round) {\r\n\t\t\t\t\t\t\t\tdataMoment.startOf(timeOpts.round);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttimestamp = dataMoment.valueOf();\r\n\t\t\t\t\t\t\tdataMin = Math.min(timestamp, dataMin);\r\n\t\t\t\t\t\t\tdataMax = Math.max(timestamp, dataMax);\r\n\t\t\t\t\t\t\ttimestamps[dataIndex] = timestamp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// We have no x coordinates, so use the ones from the labels\r\n\t\t\t\t\ttimestamps = parsedData.labels.slice();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparsedData.datasets[datasetIndex] = timestamps;\r\n\t\t\t});\r\n\r\n\t\t\tme.dataMin = dataMin;\r\n\t\t\tme.dataMax = dataMax;\r\n\t\t\tme._parsedData = parsedData;\r\n\t\t},\r\n\t\tbuildTicks: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tvar timeOpts = me.options.time;\r\n\r\n\t\t\tvar minTimestamp;\r\n\t\t\tvar maxTimestamp;\r\n\t\t\tvar dataMin = me.dataMin;\r\n\t\t\tvar dataMax = me.dataMax;\r\n\r\n\t\t\tif (timeOpts.min) {\r\n\t\t\t\tvar minMoment = parseTime(me, timeOpts.min);\r\n\t\t\t\tif (timeOpts.round) {\r\n\t\t\t\t\tminMoment.round(timeOpts.round);\r\n\t\t\t\t}\r\n\t\t\t\tminTimestamp = minMoment.valueOf();\r\n\t\t\t}\r\n\r\n\t\t\tif (timeOpts.max) {\r\n\t\t\t\tmaxTimestamp = parseTime(me, timeOpts.max).valueOf();\r\n\t\t\t}\r\n\r\n\t\t\tvar maxTicks = me.getLabelCapacity(minTimestamp || dataMin);\r\n\t\t\tvar unit = timeOpts.unit || determineUnit(timeOpts.minUnit, minTimestamp || dataMin, maxTimestamp || dataMax, maxTicks);\r\n\t\t\tme.displayFormat = timeOpts.displayFormats[unit];\r\n\r\n\t\t\tvar stepSize = timeOpts.stepSize || determineStepSize(minTimestamp || dataMin, maxTimestamp || dataMax, unit, maxTicks);\r\n\t\t\tme.ticks = Chart.Ticks.generators.time({\r\n\t\t\t\tmaxTicks: maxTicks,\r\n\t\t\t\tmin: minTimestamp,\r\n\t\t\t\tmax: maxTimestamp,\r\n\t\t\t\tstepSize: stepSize,\r\n\t\t\t\tunit: unit,\r\n\t\t\t\tisoWeekday: timeOpts.isoWeekday\r\n\t\t\t}, {\r\n\t\t\t\tmin: dataMin,\r\n\t\t\t\tmax: dataMax\r\n\t\t\t});\r\n\r\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\r\n\t\t\t// range of the scale\r\n\t\t\tme.max = helpers.max(me.ticks);\r\n\t\t\tme.min = helpers.min(me.ticks);\r\n\t\t},\r\n\t\t// Get tooltip label\r\n\t\tgetLabelForIndex: function(index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\r\n\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\r\n\r\n\t\t\tif (value !== null && typeof value === 'object') {\r\n\t\t\t\tlabel = me.getRightValue(value);\r\n\t\t\t}\r\n\r\n\t\t\t// Format nicely\r\n\t\t\tif (me.options.time.tooltipFormat) {\r\n\t\t\t\tlabel = parseTime(me, label).format(me.options.time.tooltipFormat);\r\n\t\t\t}\r\n\r\n\t\t\treturn label;\r\n\t\t},\r\n\t\t// Function to format an individual tick mark\r\n\t\ttickFormatFunction: function(tick, index, ticks) {\r\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\r\n\t\t\tvar tickOpts = this.options.ticks;\r\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\treturn callback(formattedTick, index, ticks);\r\n\t\t\t}\r\n\t\t\treturn formattedTick;\r\n\t\t},\r\n\t\tconvertTicksToLabels: function() {\r\n\t\t\tvar me = this;\r\n\t\t\tme.ticksAsTimestamps = me.ticks;\r\n\t\t\tme.ticks = me.ticks.map(function(tick) {\r\n\t\t\t\treturn moment(tick);\r\n\t\t\t}).map(me.tickFormatFunction, me);\r\n\t\t},\r\n\t\tgetPixelForOffset: function(offset) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar epochWidth = me.max - me.min;\r\n\t\t\tvar decimal = epochWidth ? (offset - me.min) / epochWidth : 0;\r\n\r\n\t\t\tif (me.isHorizontal()) {\r\n\t\t\t\tvar valueOffset = (me.width * decimal);\r\n\t\t\t\treturn me.left + Math.round(valueOffset);\r\n\t\t\t}\r\n\r\n\t\t\tvar heightOffset = (me.height * decimal);\r\n\t\t\treturn me.top + Math.round(heightOffset);\r\n\t\t},\r\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar offset = null;\r\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\r\n\t\t\t\toffset = me._parsedData.datasets[datasetIndex][index];\r\n\t\t\t}\r\n\r\n\t\t\tif (offset === null) {\r\n\t\t\t\tif (!value || !value.isValid) {\r\n\t\t\t\t\t// not already a moment object\r\n\t\t\t\t\tvalue = parseTime(me, me.getRightValue(value));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (value && value.isValid && value.isValid()) {\r\n\t\t\t\t\toffset = value.valueOf();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (offset !== null) {\r\n\t\t\t\treturn me.getPixelForOffset(offset);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetPixelForTick: function(index) {\r\n\t\t\treturn this.getPixelForOffset(this.ticksAsTimestamps[index]);\r\n\t\t},\r\n\t\tgetValueForPixel: function(pixel) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width : me.height;\r\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;\r\n\t\t\treturn moment(me.min + (offset * (me.max - me.min)));\r\n\t\t},\r\n\t\t// Crude approximation of what the label width might be\r\n\t\tgetLabelWidth: function(label) {\r\n\t\t\tvar me = this;\r\n\t\t\tvar ticks = me.options.ticks;\r\n\r\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\r\n\t\t\tvar cosRotation = Math.cos(helpers.toRadians(ticks.maxRotation));\r\n\t\t\tvar sinRotation = Math.sin(helpers.toRadians(ticks.maxRotation));\r\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n\t\t},\r\n\t\tgetLabelCapacity: function(exampleTime) {\r\n\t\t\tvar me = this;\r\n\r\n\t\t\tme.displayFormat = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\r\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, []);\r\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\r\n\r\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\r\n\t\t\tvar labelCapacity = innerWidth / tickLabelWidth;\r\n\t\t\treturn labelCapacity;\r\n\t\t}\r\n\t});\r\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\r\n\r\n};\r\n\r\n},{\"6\":6}]},{},[7])(7)\r\n});","(function() {\r\n  var MetricPoints = Object.freeze({\r\n    Approved: 2,\r\n    Spam: 0,\r\n    Pending: 1\r\n  });\r\n\r\n  var Endpoints = Object.freeze({\r\n    Approved: cp_url(\"/addons/meerkat?filter=approved\"),\r\n    Spam: cp_url(\"/addons/meerkat?filter=spam\"),\r\n    Pending: cp_url(\"/addons/meerkat?filter=pending\")\r\n  });\r\n\r\n  $(document).ready(function() {\r\n    if ($(\"#meerkatDashboardChart\").length) {\r\n      //var ctx = document.getElementById(\"myChart\").getContext('2d');\r\n      window.meerkatDashboard = new Chart(\r\n        document.getElementById(\"meerkatDashboardChart\"),\r\n        {\r\n          type: \"doughnut\",\r\n          data: {\r\n            labels: [\r\n              translate(\"addons.Meerkat::comments.metric_spam\"),\r\n              translate(\"addons.Meerkat::comments.metric_pending\"),\r\n              translate(\"addons.Meerkat::comments.metric_approved\")\r\n            ],\r\n            datasets: [\r\n              {\r\n                label: translate(\"addons.Meerkat::comments.comments\"),\r\n                data: [\r\n                  MeerkatCommentStats.Spam,\r\n                  MeerkatCommentStats.Pending,\r\n                  MeerkatCommentStats.Approved\r\n                ],\r\n                backgroundColor: [\r\n                  \"rgba(192, 57, 43,1.0)\",\r\n                  \"rgba(142, 68, 173,1.0)\",\r\n                  \"rgba(52, 73, 94,1.0)\"\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      );\r\n\r\n      meerkatDashboard.canvas.onclick = function(evt) {\r\n        var activePoints = meerkatDashboard.getElementsAtEvent(evt);\r\n\r\n        if (activePoints !== \"undefined\" && activePoints.length > 0) {\r\n          var index = activePoints[0]._index;\r\n\r\n          if (index == MetricPoints.Approved) {\r\n            window.location = Endpoints.Approved;\r\n          } else if (index == MetricPoints.Pending) {\r\n            window.location = Endpoints.Pending;\r\n          } else if (index == MetricPoints.Spam) {\r\n            window.location = Endpoints.Spam;\r\n          }\r\n        }\r\n      };\r\n    }\r\n  });\r\n})();\r\n"]}