function forUrl(e,t){return Statamic.urlPath==Statamic.cpRoot+"/"+e?t():null}function whenPublisher(e){return"undefined"!=typeof Statamic.Publish&&0==location.pathname.toLowerCase().endsWith("create")&&0==location.pathname.toLowerCase().endsWith("create/")?e():null}function originUrl(e){return window.location.origin+"/"+e}Meerkat={setBulkActionsTemplate:function(e){return this.bulk_actions_template=e,this},getConversationLabel:function(e){return""},getBulkActionsTempalte:function(){return this.bulk_actions_template},setAvatarTemplate:function(e){return this.avatar_tempalte=e,this},getAvatarTemplate:function(){return this.avatar_tempalte},setDossierTemplate:function(e){return this.dossier_template=e,this},getDossierTemplate:function(){return this.dossier_template?this.dossier_template:""},setDossierCellTemplate:function(e){return this.dossier_cell_template=e,this},getDossierCellTemplate:function(){return this.dossier_cell_template?this.dossier_cell_template:""},setMeerkatCellTemplate:function(e){return this.meerkat_cell_template=e,this},getMeerkatCellTemplate:function(){return this.meerkat_cell_template?this.meerkat_cell_template:""},setMeerkatAddActionPartialTemplate:function(e){return this.meerkat_add_action_template=e,this},getMeerkatAddActionPartial:function(){return this.meerkat_add_action_template?this.meerkat_add_action_template:""},compareVersionString:function(v1,comparator,v2){"use strict";var comparator="="==comparator?"==":comparator;if(["==","===","<","<=",">",">=","!=","!=="].indexOf(comparator)==-1)throw new Error("Invalid comparator. "+comparator);for(var v1parts=v1.split("."),v2parts=v2.split("."),maxLen=Math.max(v1parts.length,v2parts.length),part1,part2,cmp=0,i=0;i<maxLen&&!cmp;i++)part1=parseInt(v1parts[i],10)||0,part2=parseInt(v2parts[i],10)||0,part1<part2&&(cmp=1),part1>part2&&(cmp=-1);return eval("0"+comparator+cmp)},compareStatamicVersion:function(e,t){return Meerkat.compareVersionString(Statamic.version,e,t)}},Meerkat.API={getCommentCount:originUrl("!/Meerkat/api-comment-count"),getAllComments:originUrl("!/Meerkat/api-comments"),addonPath:originUrl(Statamic.cpRoot+"/addons/meerkat"),formName:"meerkat"},Meerkat.Publisher={publisherStream:"",contentWrap:null,setupNavigation:function(){var e=$('<ul class="nav nav-tabs" style="width:100%;" data-meerkat-publisher="tab-navigation"><li role="presentation" class="active" data-meerkat-publisher="tab:content"><a href="#" data-meerkat-publisher="toggle:content">'+translate("addons.Meerkat::comments.content")+'</a></li><li role="presentation" data-meerkat-publisher="tab:comments"><a href="#" data-meerkat-publisher="toggle:comments">'+translate("addons.Meerkat::comments.comments")+"</a></li></ul>");$('[data-meerkat-publisher="fields-main"]').parent().prepend(e),$('[data-meerkat-publisher="toggle:content"]').on("click",function(e){$('[data-meerkat-publisher="tab:comments"]').removeClass("active"),$('[data-meerkat-publisher="tab:content"]').addClass("active"),$('[data-meerkat-publisher="comments-main"]').hide(),$(window.Meerkat.Publisher.contentWrap).show()}),$('[data-meerkat-publisher="toggle:comments"]').on("click",function(e){$('[data-meerkat-publisher="tab:comments"]').addClass("active"),$('[data-meerkat-publisher="tab:content"]').removeClass("active"),$(window.Meerkat.Publisher.contentWrap).hide(),$('[data-meerkat-publisher="comments-main"]').show()})},setupSecondaryCard:function(){var e='<div class="card" data-meerkat-publisher="comments-main"></div>';$('[data-meerkat-publisher="fields-main"]').parent().append(e),$('[data-meerkat-publisher="comments-main"]').append($(Meerkat.Publisher.publisherStream)),$('[data-meerkat-publisher="comments-main"]').hide()},setupInstance:function(){new Vue({el:"#meerkat-publisher-stream"})},setup:function(){console.log("inside publish setup");var e=null;$("#publish-fields").length?e="#publish-fields":$(".publish-fields")&&(e=".publish-fields:first"),null!=e&&(window.Meerkat.Publisher.contentWrap=$(e),$(e).attr("data-meerkat-publisher","fields-main"),$(e+" .card:first").attr("data-meerkat-publisher","publish-fields"),Meerkat.Publisher.setupSecondaryCard(),Meerkat.Publisher.setupNavigation(),Meerkat.Publisher.setupInstance())}},forUrl("forms",function(){var e=window.location.href+"/"+Meerkat.API.formName,t=document.querySelectorAll("a[href='"+e+"']");if(Meerkat.compareStatamicVersion("<","2.7.0")){if(t.length>0){t=t[0],t.setAttribute("href",Meerkat.API.addonPath);var a=t.getElementsByTagName("span")[0];fetch(Meerkat.API.getCommentCount,{method:"GET"}).then(function(e){return e.json()}).then(function(e){a.innerText=e.count})["catch"](function(e){a.innerText=0})}}else if(t.length>0){var n=$(t[0]).parent().children().first("div.stat")[0];t[0].setAttribute("href",Meerkat.API.addonPath),fetch(Meerkat.API.getCommentCount,{metod:"GET"}).then(function(e){return e.json()}).then(function(e){n.innerHTML='<span class="icon icon-documents"></span> '+e.count})["catch"](function(e){n.innerHTML='<span class="icon icon-documents"></span> 0'})}}),forUrl("forms/"+Meerkat.API.formName,function(){window.location=Meerkat.API.addonPath}),function(){$(document).ready(function(){whenPublisher(function(){Meerkat.Publisher.setup()})})}(),!function(){function e(t,a,n){function s(r,o){if(!a[r]){if(!t[r]){var c="function"==typeof require&&require;if(!o&&c)return c(r,!0);if(i)return i(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var m=a[r]={exports:{}};t[r][0].call(m.exports,function(e){var a=t[r][1][e];return s(a||e)},m,m.exports,e,t,a,n)}return a[r].exports}for(var i="function"==typeof require&&require,r=0;r<n.length;r++)s(n[r]);return s}return e}()({1:[function(e,t,a){"use strict";Meerkat.setDossierTemplate('\n<div class="meerkat-bulk-action-wrapper pull-left" v-if="showBulkActions">\n    <partial name="bulkActions"></partial>\n</div>\n\n<table class="dossier meerkat-comments-table table-striped" v-if="sizes.md || sizes.lg">\n    <thead v-if="hasHeaders">\n        <tr>\n            <th class="checkbox-col" v-if="hasCheckboxes">\n                <input type="checkbox" id="checkbox-all" :checked="allItemsChecked" @click="checkAllItems" />\n                <label for="checkbox-all"></label>\n            </th>\n\n            <th v-for="column in columns"\n                @click="sortBy(column)"\n                class="column-sortable"\n                :class="[\'column-\' + column.label, {\'active\': sortCol === column.field} ]"\n            >\n                <template v-if="column.translation">{{ column.translation }}</template>\n                <template v-else>{{ translate(\'cp.\'+column.label) }}</template>\n                <i v-if="sortCol === column.field"\n                    class="icon icon-chevron-{{ (sortOrders[column.field] > 0) ? \'up\' : \'down\' }}"></i>\n            </th>\n        </tr>\n    </thead>\n    <tbody data-meerkat-type="comment" v-el:tbody v-for="item in items | filterBy computedSearch | caseInsensitiveOrderBy computedSortCol computedSortOrder">\n        <tr\n            data-meerkat-type="comment"\n            data-meerkat-comment-id="{{ item[\'id\'] }}" data-meerkat-comment-published="{{ item[\'published\'].toString() }}"\n            data-meerkat-comment-spam="{{ item[\'spam\'].toString() }}">\n        <td colspan="3">\n        <div class="comment-header-options" v-if="item[\'published\']"><a href="{{ item[\'in_response_to_url\'] }}#comment-{{ item[\'id\'] }}" target="_blank" title="{{ translate(\'addons.Meerkat::actions.view_post_desc\') }}">{{ translate(\'addons.Meerkat::actions.view_post\') }}</a></div>\n        <div class="float-left"><a name="meerkat-comment-{{ item[\'id\'] }}"></a><span class="icon icon-flag" v-if="item[\'published\'] === false"></span> {{{ item[\'in_response_string\'] }}}</div>\n        </td>\n        </tr>\n        <tr data-meerkat-type="comment"\n            data-meerkat-comment-id="{{ item[\'id\'] }}" data-meerkat-comment-published="{{ item[\'published\'].toString() }}"\n            data-meerkat-comment-spam="{{ item[\'spam\'].toString() }}">\n\n            <td class="checkbox-col" v-if="hasCheckboxes && !reordering">\n                <input type="checkbox" :id="\'checkbox-\' + $index" :checked="item.checked" @change="toggle(item)" />\n                <label :for="\'checkbox-\' + $index"></label>\n            </td>\n\n            <td class="checkbox-col" v-if="reordering">\n                <div class="drag-handle">\n                    <i class="icon icon-menu"></i>\n                </div>\n            </td>\n\n            <td v-for="column in columns" class="cell-{{ column.field }}">\n                <partial name="cell"></partial>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<div v-if="sizes.sm || sizes.xs" class="meerkat-mobile-table">\n    <div v-for="item in items | filterBy computedSearch | caseInsensitiveOrderBy computedSortCol computedSortOrder">\n        <div data-meerkat-mobile="wrap" data-meerkat-type="comment"\n            data-meerkat-comment-id="{{ item[\'id\'] }}" data-meerkat-comment-published="{{ item[\'published\'].toString() }}"\n            data-meerkat-comment-spam="{{ item[\'spam\'].toString() }}">\n            <partial name="cell"></partial>                        \n        </div>\n    </div>\n</div>\n<div class="meerkat-pagination-wrapper">\n    <ul class="pagination meerkat-pagination">\n        <li v-if="$parent.pagination.prevPage">\n            <a href="" @click.prevent="call(\'previousPage\')" aria-label="{{ translate(\'addons.Meerkat::pagination.previous\') }}"><span>&laquo;</span></a>\n        </li>\n        <li v-for="page in $parent.pages">\n            <a href="" @click.prevent="call(\'goToPage\', page.page)" v-bind:class="{ \'active\': page.active }" :disabled="page.page === null">{{ page.name }}</a>\n        </li>\n        <li v-if="$parent.pagination.nextPage">\n            <a href="" @click.prevent="call(\'nextPage\')" aria-label="{{ translate(\'addons.Meerkat::pagination.next\') }}"><span>&raquo;</span></a>\n        </li>\n    </ul>\n</div>\n')},{}]},{},[1]),!function(){function e(t,a,n){function s(r,o){if(!a[r]){if(!t[r]){var c="function"==typeof require&&require;if(!o&&c)return c(r,!0);if(i)return i(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var m=a[r]={exports:{}};t[r][0].call(m.exports,function(e){var a=t[r][1][e];return s(a||e)},m,m.exports,e,t,a,n)}return a[r].exports}for(var i="function"==typeof require&&require,r=0;r<n.length;r++)s(n[r]);return s}return e}()({1:[function(e,t,a){"use strict";Meerkat.setDossierCellTemplate("\n    <a v-if=\"$index === 0\" :href=\"item.edit_url\">\n        <span class=\"status status-{{ (item.published) ? 'live' : 'hidden' }}\"\n              :title=\"(item.published) ? translate('cp.published') : translate('cp.draft')\"\n        ></span>\n        {{ item[column.label] }}\n    </a>\n    <template v-else>\n        {{ item[column.label] }}\n    </template>\n")},{}]},{},[1]),!function(){function e(t,a,n){function s(r,o){if(!a[r]){if(!t[r]){var c="function"==typeof require&&require;if(!o&&c)return c(r,!0);if(i)return i(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var m=a[r]={exports:{}};t[r][0].call(m.exports,function(e){var a=t[r][1][e];return s(a||e)},m,m.exports,e,t,a,n)}return a[r].exports}for(var i="function"==typeof require&&require,r=0;r<n.length;r++)s(n[r]);return s}return e}()({1:[function(e,t,a){"use strict";Meerkat.setMeerkatAddActionPartialTemplate('\n    <li v-if="item[\'published\'] === false"><a href="#" @click.prevent="call(\'approveComment\', item.id)" title="{{ translate(\'addons.Meerkat::actions.approve_desc\') }}"><span class="icon icon-check"></span> {{ translate(\'addons.Meerkat::actions.approve\') }}</a></li>\n    <li v-if="item[\'published\'] === true"><a href="#" @click.prevent="call(\'unApproveComment\', item.id)" title="{{ translate(\'addons.Meerkat::actions.unapprove_desc\') }}">{{ translate(\'addons.Meerkat::actions.unapprove\') }}</a></li>\n    <li><a href="#" @click.prevent="call(\'replyToComment\', item.id)" title="{{ translate(\'addons.Meerkat::actions.reply_desc\') }}"><span class="icon icon-reply"></span> {{ translate(\'addons.Meerkat::actions.reply\') }}</a></li>\n    <li><a href="#" @click.prevent="call(\'editComment\', item.id)" title="{{ translate(\'addons.Meerkat::actions.edit_desc\') }}"><span class="icon icon-edit"></span> {{ translate(\'addons.Meerkat::actions.edit\') }}</a></li>\n    <li v-if="item[\'spam\'] === false"><a href="#" @click.prevent="call(\'markItemAsSpam\', item.id)" title="{{ translate(\'addons.Meerkat::actions.spam_desc\') }}"><span class="icon icon-shield"></span> {{ translate(\'addons.Meerkat::actions.spam\') }}</a></li>\n    <li v-if="item[\'spam\'] === true"><a href="#" @click.prevent="call(\'markItemAsNotSpam\', item.id)" title="{{ translate(\'addons.Meerkat::actions.not_spam_desc\') }}"><span class="icon icon-shield"></span> {{ translate(\'addons.Meerkat::actions.not_spam\') }}</a></li>\n    <li><a href="#" @click.prevent="call(\'deleteItem\', item.id)" title="{{ translate(\'addons.Meerkat::actions.delete_desc\') }}"><span class="icon icon-trash"></span> {{ translate(\'addons.Meerkat::actions.delete\') }}</a></li>\n')},{}]},{},[1]),!function(){function e(t,a,n){function s(r,o){if(!a[r]){if(!t[r]){var c="function"==typeof require&&require;if(!o&&c)return c(r,!0);if(i)return i(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var m=a[r]={exports:{}};t[r][0].call(m.exports,function(e){var a=t[r][1][e];return s(a||e)},m,m.exports,e,t,a,n)}return a[r].exports}for(var i="function"==typeof require&&require,r=0;r<n.length;r++)s(n[r]);return s}return e}()({1:[function(e,t,a){"use strict";Meerkat.setMeerkatCellTemplate('\n<div v-if="sizes.md || sizes.lg">\n<div class="media" v-if="$index === 0">\n    <partial name="avatar"></partial>\n    <div class="media-body"> <h4 class="media-heading">{{ item[\'name\'] }}</h4>\n        <span class="icon icon-mail"></span> <a href="mailto:{{ item[\'email\'] }}">{{ item[\'email\'] }}</a><br />\n        \n        <div v-if="item[\'url\']"><a href="{{ item[\'url\'] }}" target="_blank"><span class="icon icon-globe"></span> {{ item[\'url\'] }}</a></div>\n    </div>\n</div>\n<div v-if="$index === 1">\n    <div data-meerkat-comment="response" v-if="item[\'is_reply\']">\n    {{ translate(\'addons.Meerkat::comments.in_reply_to_simple\') }} <a @click.prevent="call(\'openConversation\', item[\'parent_comment_id\'])">{{ item[\'parent_comment_name\'] }}</a>\n    </div>\n\n    <div data-meerkat-comment="content" v-if="item[\'editing\'] === false">\n    {{{ item[\'comment\'] }}}\n    </div>\n    <div v-if="item[\'editing\'] === true">\n        <div class="markdown-fieldtype">\n            <markdown-fieldtype :data.sync="item[\'original_markdown\']"></markdown-fieldtype>\n        </div>\n        <ul class="list-inline" data-meerkat-has="actions">\n        <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'saveItemEdits\', item.id)"><span class="icon icon-check"></span> {{ translate(\'addons.Meerkat::actions.save\') }}</a></li>\n        <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'cancelItemEdit\', item.id)">{{ translate(\'addons.Meerkat::actions.cancel\') }}</a></li>\n        <li v-if="item[\'saving\'] === true"><span class="icon icon-circular-graph animation-spin"></span> {{ translate(\'addons.Meerkat::actions.saving\') }}</li>\n        </ul>\n    </div>\n    <div v-if="item[\'writing_reply\'] === true">\n        <div class="markdown-fieldtype">\n            <markdown-fieldtype :data.sync="item[\'new_reply\']"></markdown-fieldtype>\n        </div>\n        <ul class="list-inline" data-meerkat-has="actions">\n        <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'createNewReply\', item.id)"><span class="icon icon-reply"></span> {{ translate(\'addons.Meerkat::actions.reply\') }}</a></li>\n        <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'cancelPostReply\', item.id)">{{ translate(\'addons.Meerkat::actions.cancel\') }}</a></li>\n        <li v-if="item[\'saving\'] === true"><span class="icon icon-circular-graph animation-spin"></span> {{ translate(\'addons.Meerkat::actions.replying\') }}</li>\n        </ul>\n    </div>\n    <div data-meerkat-type="comment" data-meerkat-has="actions"\n         v-if="hasActions">\n    <ul class="list-inline" v-if="item[\'editing\'] === false && item[\'writing_reply\'] === false">\n    <partial name="actions"></partial>\n    </ul>\n    </div>\n</div>\n<div v-if="$index === 3">\n    <a href="/cp/collections/entries{{ item[\'in_response_to_edit_url\'] }}">{{ item[\'in_response_to\'] }}</a><br />\n    <div v-if="item[\'published\']">\n        <small><a href="{{ item[\'in_response_to_url\'] }}#comment-{{ item[\'id\'] }}" target="_blank" title="{{ translate(\'addons.Meerkat::actions.view_post_desc\') }}">{{ translate(\'addons.Meerkat::actions.view_post\') }}</a></small><br />\n    </div>\n    <span class="label label-default"><span class="icon icon-chat"></span> {{ item[\'comment_count\'] }}</span>\n</div>\n</div>\n<div v-if="sizes.sm || sizes.xs">\n    <div class="meerkat-mobile-card" id="meerkat-mobile-comment-card-{{ item[\'id\'] }}" v-bind:class="{ \'meerkat-conversation-intended-comment\': ($parent.$parent.intendedComment != null && $parent.$parent.intendedComment == item[\'id\']) }">\n        <div class="meerkat-mobile-card-header" v-bind:class="{ \'is-selected\': item.checked }">\n            <div class="meerkat-mobile-card-avatar">\n                <partial name="avatar"></partial>\n            </div>\n            <a class="meerkat-mobile-card-indicator" v-bind:class="{ \'checked\': item.checked }" @click.prevent="$parent.toggle(item)"></a>\n            <h5>\n                {{ item[\'name\'] }}\n                <span v-if="item[\'is_reply\']">\n                    <span v-if="$parent.$parent.loadStreamFor !== null">\n                        - {{ translate(\'addons.Meerkat::comments.in_reply_to_simple\') }} {{ item[\'parent_comment_name\'] }}\n                    </span>\n                    <span v-else>\n                        - {{ translate(\'addons.Meerkat::comments.in_reply_to_simple\') }} <a @click.prevent="call(\'openConversation\', item[\'parent_comment_id\'])">{{ item[\'parent_comment_name\'] }}\n                        <span v-if="item[\'conversation_participants\'].length - 2 > 0">( +{{ item[\'conversation_participants\'].length - 2 }} {{ Meerkat.getConversationLabel([]) }}\n                            <span v-if="item[\'conversation_participants\'].length - 2 == 1">{{ translate(\'addons.Meerkat::comments.conversation_other_singular\') }}</span>\n                            <span v-if="item[\'conversation_participants\'].length - 2 > 1">{{ translate(\'addons.Meerkat::comments.conversation_other_plural\') }}</span>\n                        )</span></a>\n                    </span>\n                </span>\n            </h5>\n            <h6><a href="mailto:{{ item[\'email\'] }}">{{ item[\'email\'] }}</a></h6>\n        </div>\n        <div class="meerkat-mobile-card-content">\n            <div class="comment-header-options meerkat-mobile-card-reply-to">\n                {{{ item[\'in_response_string\'] }}}\n            </div>\n\n            <div data-meerkat-comment="content" v-if="item[\'editing\'] === false">\n            {{{ item[\'comment\'] }}}\n            </div>\n            <div v-if="item[\'editing\'] === true">\n                <div class="markdown-fieldtype">\n                    <markdown-fieldtype :data.sync="item[\'original_markdown\']"></markdown-fieldtype>\n                </div>\n                <ul class="list-inline meerkat-mobile-edit-actions" data-meerkat-has="actions">\n                <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'saveItemEdits\', item.id)"><span class="icon icon-check"></span> {{ translate(\'addons.Meerkat::actions.save\') }}</a></li>\n                <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'cancelItemEdit\', item.id)">{{ translate(\'addons.Meerkat::actions.cancel\') }}</a></li>\n                <li v-if="item[\'saving\'] === true"><span class="icon icon-circular-graph animation-spin"></span> {{ translate(\'addons.Meerkat::actions.saving\') }}</li>\n                </ul>\n            </div>\n            <div v-if="item[\'writing_reply\'] === true">\n                <div class="markdown-fieldtype">\n                    <markdown-fieldtype :data.sync="item[\'new_reply\']"></markdown-fieldtype>\n                </div>\n                <ul class="list-inline meerkat-mobile-edit-actions" data-meerkat-has="actions">\n                <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'createNewReply\', item.id)"><span class="icon icon-reply"></span> {{ translate(\'addons.Meerkat::actions.reply\') }}</a></li>\n                <li v-if="item[\'saving\'] === false"><a href="#" @click.prevent="call(\'cancelPostReply\', item.id)">{{ translate(\'addons.Meerkat::actions.cancel\') }}</a></li>\n                <li v-if="item[\'saving\'] === true"><span class="icon icon-circular-graph animation-spin"></span> {{ translate(\'addons.Meerkat::actions.replying\') }}</li>\n                </ul>\n            </div>\n        </div>\n        <div class="meerkat-mobile-card-footer" v-if="item[\'editing\'] === false && item[\'writing_reply\'] === false">\n            <div data-meerkat-type="comment" data-meerkat-has="actions"\n                    v-if="hasActions">\n                <ul class="list-inline meerkat-mobile-card-actions" v-if="item[\'editing\'] === false && item[\'writing_reply\'] === false">\n                <partial name="actions"></partial>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>\n')},{}]},{},[1]),!function(){function e(t,a,n){function s(r,o){if(!a[r]){if(!t[r]){var c="function"==typeof require&&require;if(!o&&c)return c(r,!0);if(i)return i(r,!0);var l=new Error("Cannot find module '"+r+"'");throw l.code="MODULE_NOT_FOUND",l}var m=a[r]={exports:{}};t[r][0].call(m.exports,function(e){var a=t[r][1][e];return s(a||e)},m,m.exports,e,t,a,n)}return a[r].exports}for(var i="function"==typeof require&&require,r=0;r<n.length;r++)s(n[r]);return s}return e}()({1:[function(e,t,a){"use strict";Meerkat.setBulkActionsTemplate('\n<select class="meerkat-bulk-actions form-control" v-model="bulkAction">\n    <option value="delete" selected>{{ translate_choice(\'addons.Meerkat::actions.bulk_delete\', checkedItems.length) }} ({{ checkedItems.length }} {{ translate_choice(\'addons.Meerkat::comments.comments_c\', checkedItems.length) }})</option>\n    <option value="approve">{{ translate_choice(\'addons.Meerkat::actions.bulk_approve\', checkedItems.length) }} ({{ checkedItems.length }} {{ translate_choice(\'addons.Meerkat::comments.comments_c\', checkedItems.length) }})</option>\n    <option value="unapprove">{{ translate_choice(\'addons.Meerkat::actions.bulk_unapprove\', checkedItems.length) }} ({{ checkedItems.length }} {{ translate_choice(\'addons.Meerkat::comments.comments_c\', checkedItems.length) }})</option>\n    <option value="spam">{{ translate_choice(\'addons.Meerkat::actions.bulk_mark_spam\', checkedItems.length) }} ({{ checkedItems.length }} {{ translate_choice(\'addons.Meerkat::comments.comments_c\', checkedItems.length) }})</option>\n    <option value="notspam">{{ translate_choice(\'addons.Meerkat::actions.bulk_mark_not_spam\', checkedItems.length) }} ({{ checkedItems.length }} {{ translate_choice(\'addons.Meerkat::comments.comments_c\', checkedItems.length) }})</option>\n</select>\n<a href="#" @click.prevent="call(\'applyBulkActions\', bulkAction)" class="btn btn-default" v-if="$parent.applyingBulkActions == false"><span class="icon icon-tools"></span> {{ translate(\'addons.Meerkat::actions.apply\') }}</a>\n<span v-if="$parent.applyingBulkActions == true"><span class="icon icon-circular-graph animation-spin"></span> {{ translate(\'addons.Meerkat::actions.applying\') }}</span>\n')},{}]},{},[1]),Vue.filter("strlimit",function(e,t){return e.toString().length<=t?e:e.toString().substring(0,t)+"..."}),window.DossierTable=DossierTable=Vue.component("DossierTable",{template:Meerkat.getDossierTemplate(),props:["options","keyword"],data:function(){return{items:[],columns:[],sortCol:this.options.sort||null,sortOrder:this.options.sortOrder||"asc",sortOrders:{},reordering:!1,sizes:{xs:!1,sm:!1,md:!1,lg:!1},shouldOverrideToMobile:!1}},partials:{cell:Meerkat.getDossierCellTemplate()},computed:{hasCheckboxes:function(){return this.options.checkboxes!==!1},itemsAreChecked:function(){return this.checkedItems.length>0},hasSearch:function(){return this.options.search!==!1},hasHeaders:function(){return this.options.headers!==!1},hasActions:function(){return void 0!==this.options.partials.actions&&""!==this.options.partials.actions},showBulkActions:function(){return this.hasItems&&this.hasCheckboxes&&this.itemsAreChecked&&!this.reordering},hasItems:function(){return this.$parent.hasItems},reorderable:function(){return this.options.reorderable},checkedItems:function(){return this.items.filter(function(e){return e.checked}).map(function(e){return e.id})},allItemsChecked:function(){return this.items.length===this.checkedItems.length},computedSearch:function(){return this.reordering?null:this.keyword},computedSortCol:function(){return!this.reordering&&this.sortCol},computedSortOrder:function(){return!this.reordering&&this.sortOrders[this.sortCol]}},beforeCompile:function(){var e=this;_.each(e.options.partials,function(t,a){e.$options.partials[a]=t})},ready:function(){this.items=this.$parent.items,this.columns=this.$parent.columns,this.setColumns(),this.setSortOrders(),this.sortCol=this.options.sort||this.columns[0].field,"undefined"!=typeof this.$parent&&null!==this.$parent&&"undefined"!=typeof this.$parent.passMobileOverride&&this.$parent.passMobileOverride&&(this.shouldOverrideToMobile=!0),window.addEventListener("resize",this.handleResize),this.handleResize()},beforeDestroy:function(){window.removeEventListener("resize",this.handleResize)},methods:{setIntended:function(e){this.intendedComment=e},handleResize:function(){if(this.shouldOverrideToMobile)return this.sizes.xs=!0,this.sizes.sm=!1,this.sizes.md=!1,void(this.sizes.lg=!1);var e=window.innerWidth;return e<=767?(this.sizes.xs=!0,this.sizes.sm=!1,this.sizes.md=!1,void(this.sizes.lg=!1)):e>=768&&e<=991?(this.sizes.xs=!1,this.sizes.sm=!0,this.sizes.md=!1,void(this.sizes.lg=!1)):e>=992&&e<=1199?(this.sizes.xs=!1,this.sizes.sm=!1,this.sizes.md=!0,void(this.sizes.lg=!1)):e>=1200?(this.sizes.xs=!1,this.sizes.sm=!1,this.sizes.md=!1,void(this.sizes.lg=!0)):void 0},registerPartials:function(){var e=this;_.each(e.options.partials,function(e,t){Vue.partial(t,e)})},setColumns:function(){var e=[];_.each(this.columns,function(t){"object"==typeof t?e.push({label:t.label,field:t.field,translation:t.translation}):e.push({label:t,field:t})}),this.columns=e},setSortOrders:function(){var e={};_.each(this.columns,function(t){e[t.field]=1}),e[this.sortCol]="asc"===this.sortOrder?1:-1,this.sortOrders=e},sortBy:function(e){this.sortCol===e.field&&(this.sortOrders[e.field]=this.sortOrders[e.field]*-1),this.sortCol=e.field},checkAllItems:function(){var e=!this.allItemsChecked;_.each(this.items,function(t){t.checked=e})},toggle:function(e){e.checked=!e.checked},enableReorder:function(){var e=this;e.reordering=!0,$(this.$els.tbody).sortable({axis:"y",revert:175,placeholder:"placeholder",handle:".drag-handle",forcePlaceholderSize:!0,start:function(e,t){t.item.data("start",t.item.index())},update:function(t,a){var n=a.item.data("start"),s=a.item.index();e.items.splice(s,0,e.items.splice(n,1)[0])}})},disableReorder:function(){this.reordering=!1,$(this.$els.tbody).sortable("destroy")},saveOrder:function(){this.$parent.saveOrder()},call:function(e){var t=Array.prototype.slice.call(arguments,1);this.$parent[e].apply(this,t)}},events:{"reordering.start":function(){this.enableReorder()},"reordering.saved":function(){this.reordering=!1},"reordering.stop":function(){this.disableReorder()}}}),window.MeerkatStreamListing=MeerkatStreamListing=Vue.component("meerkat-stream-listing",{props:["get","delete","spam","notspam","approve","unapprove","update","create","checkspam","perpage","ifilter","hidemanagement","autoload","getcounts"],data:function(){return{cpNav:null,loading:!0,checkingSpam:!1,items:[],streamFilter:null,columns:[],search:null,metrics:[],reordering:!1,filter:"all",hideManagement:this.hidemanagement,ajax:{get:this.get,"delete":this["delete"],spam:this.spam,notspam:this.notspam,approve:this.approve,unapprove:this.unapprove,update:this.update,create:this.create,checkSpam:this.checkspam,getcounts:this.getcounts},pagination:{nextPage:null,prevPage:null,from:null,to:null,lastPage:null,page:null},tableOptions:{checkboxes:!0,sort:"datestamp",sortOrder:"desc",showBulkOptions:!0,paginate:!0,currentPage:1,perPage:this.perpage,partials:{cell:Meerkat.getMeerkatCellTemplate()}},instanceChanges:{commentEdits:[],commentRemovals:[],commentReplies:[],commentMarkedAsSpam:[],commentMarkedAsNotSpam:[],commentApprovals:[],commentUnApprovals:[]},bulkAction:"delete",applyingBulkActions:!1,avatarDriver:Meerkat.config.avatar_driver,passMobileOverride:!1,loadStreamFor:null,intendedComment:null}},computed:{isPaginated:function(){return this.tableOptions.paginate},pages:function(){var e,t=5,a=[],n=Math.ceil(t/2);e=this.pagination.page<=n?"start":this.pagination.lastPage-n<this.pagination.page?"end":"middle";for(var s=(t<this.pagination.lastPage,1);s<=this.pagination.lastPage&&s<=t;){var i=2===s&&("middle"===e||"end"===e),r=s===t-1&&("middle"===e||"start"===e);if(i)a.push({name:"...",value:"...",page:null});else if(r)a.push({name:"...",value:"...",page:null});else{var o=s;o=1===t?this.pagination.page:s===t?this.pagination.lastPage:1===s?s:t<this.pagination.lastPage?this.pagination.lastPage-n<this.pagination.page?this.pagination.lastPage-t+s:n<this.pagination.page?this.pagination.page-n+s:s:s,a.push({name:o,value:o,page:o,active:o===this.pagination.page})}s++}return a},hasItems:function(){return!this.loading&&this.items&&this.items.length>0},noItems:function(){return!this.loading&&this.items&&!this.items.length},checkedItems:function(){return this.items.filter(function(e){return e.checked}).map(function(e){return e.id})},allItemsChecked:function(){return this.items.length===this.checkedItems.length},commentCount:function(){return this.metrics.all}},ready:function(){this.cpNav=$('a[href$="meerkat?source=cp-nav"]'),"undefined"!=typeof window.Statamic.Publish&&"undefined"!=typeof window.Statamic.Publish.contentData&&"undefined"!=typeof window.Statamic.Publish.contentData.id&&(this.streamFilter=window.Statamic.Publish.contentData.id),null!=this.ifilter?"all"==this.ifilter?(this.filter="all",this.autoload&&this.filterItems("all")):"pending"==this.ifilter?(this.filter="pending",this.autoload&&this.filterItems("pending")):"spam"==this.ifilter?(this.filter="spam",this.autoload&&this.filterItems("spam")):"approved"==this.ifilter?(this.filter="approved",this.autoload&&this.filterItems("approved")):(this.filter="all",this.autoload&&this.filterItems("all")):(this.filter="all",this.autoload&&this.filterItems("all")),this.setHeaders(this.filter),this.addActionPartial();var e=this;window.onpopstate=function(t){var a=e.getQueryParam(document.location.search);if("undefined"!=typeof a.filter&&a.filter!==e.filter){var n=a.filter;null!=n?"all"==n?e.filterItems("all"):"pending"==n?e.filterItems("pending"):"spam"==n?e.filterItems("spam"):"approved"==n?e.filterItems("approved"):e.filterItems("all"):e.filterItems("all")}}},components:{"dossier-table":DossierTable},methods:{parentStateNeedsRefresh:function(){var e=0;return e+=this.instanceChanges.commentEdits.length,e+=this.instanceChanges.commentRemovals.length,
e+=this.instanceChanges.commentReplies.length,e+=this.instanceChanges.commentMarkedAsNotSpam.length,e+=this.instanceChanges.commentMarkedAsSpam.length,e+=this.instanceChanges.commentApprovals.length,e+=this.instanceChanges.commentUnApprovals.length,e>0},openConversation:function(e){this.$parent.meerkat_ConversationView.open(e)},streamFor:function(e){this.loadStreamFor=e},setIntendedComment:function(e){this.intendedComment=e,this.$children[0].setIntended(e)},setSortingOrder:function(e,t){this.tableOptions.sortOrder=t,this.$children[0].sortBy(e)},overrideMobile:function(){this.passMobileOverride=!0},checkForSpam:function(){this.checkingSpam=!0;var e=this;this.$http.post(this.ajax.checkSpam,{},function(t,a,n){e.checkingSpam=!1,e.getItems(),e.refreshCounts()})},refreshCounts:function(){var e=this;this.$http.get(this.ajax.getcounts,{},function(t){if("object"==typeof t)if(e.metrics.all=t.counts.all,e.metrics.approved=t.counts.approved,e.metrics.pending=t.counts.pending,e.metrics.spam=t.counts.spam,t.counts.pending<=0)e.cpNav.find(".badge").remove();else if(t.counts.pending>0)if(e.cpNav.find(".badge").length>0)e.cpNav.find(".badge").text(t.counts.pending);else{var a=$('<span class="badge bg-red">'+t.counts.pending+"</span>");e.cpNav.append(a)}})},refreshView:function(e){"undefined"!=typeof this.filter&&null!=this.filter&&0!=this.filter.length||(this.filter="all"),this.getItems(e)},setHeaders:function(e){"undefined"!=typeof e&&null!==e&&("approved"==e?($('[data-meerkat-ui="comments-header"]').text(translate("addons.Meerkat::comments.metric_approved")+" "+translate("addons.Meerkat::comments.comments")),$('[data-meerkat-ui="comments-body-header"]').text(translate("addons.Meerkat::comments.comments_approved_possessive")),$('[data-meerkat-ui="comments-body-subheader"]').text(translate("addons.Meerkat::comments.no_approved_comments"))):"pending"==e?($('[data-meerkat-ui="comments-header"]').text(translate("addons.Meerkat::comments.metric_pending")+" "+translate("addons.Meerkat::comments.comments")),$('[data-meerkat-ui="comments-body-header"]').text(translate("addons.Meerkat::comments.comments_pending_possessive")),$('[data-meerkat-ui="comments-body-subheader"]').text(translate("addons.Meerkat::comments.no_pending_comments"))):"spam"==e?($('[data-meerkat-ui="comments-header"]').text(translate("addons.Meerkat::comments.metric_spam")+" "+translate("addons.Meerkat::comments.comments")),$('[data-meerkat-ui="comments-body-header"]').text(translate("addons.Meerkat::comments.comments_spam_possessive")),$('[data-meerkat-ui="comments-body-subheader"]').text(translate("addons.Meerkat::comments.no_spam_comments"))):($('[data-meerkat-ui="comments-header"]').text(translate("addons.Meerkat::comments.comments")),$('[data-meerkat-ui="comments-body-header"]').text(translate("addons.Meerkat::comments.comments_possessive")),$('[data-meerkat-ui="comments-body-subheader"]').text(translate("addons.Meerkat::comments.no_comments"))))},getItems:function(e){this.loading=!0;var t={filter:this.filter};this.tableOptions.paginate&&(t.paginate=!0,t.perPage=this.tableOptions.perPage,t.page=this.tableOptions.currentPage),null!==this.streamFilter&&(t.stream=this.streamFilter),null!==this.loadStreamFor&&(t.stream=null,t.streamFor=this.loadStreamFor);var a=this;this.$http.get(this.ajax.get,t,function(t,n,s){1==a.tableOptions.paginate?(a.items=t.items.data,a.pagination.from=t.items.from,a.pagination.to=t.items.to,a.pagination.prevPage=t.items.prev_page_url,a.pagination.nextPage=t.items.next_page_url,a.pagination.lastPage=t.items.last_page,a.pagination.page=a.tableOptions.currentPage):a.items=t.items,"undefined"!=typeof e&&null!=e&&e(a.items),a.columns=t.columns,a.metrics=t.statistics,a.loading=!1,a.setHeaders(a.filter),window.setTimeout(function(){a.setHeaders(a.filter)},25)}).error(function(e){alert("There was a problem retrieving data. Check your logs for more details.")})},previousPage:function(){null!==this.pagination.prevPage&&(this.tableOptions.currentPage--,this.getItems())},nextPage:function(){null!==this.pagination.nextPage&&(this.tableOptions.currentPage++,this.getItems())},goToPage:function(e){e>0&&e<=this.pagination.lastPage&&(this.tableOptions.currentPage=e,this.getItems())},filterItems:function(e){this.tableOptions.currentPage=1,this.filter=e,this.getItems(),this.updateURLState(e),this.setHeaders(e),this.refreshCounts()},updateURLState:function(e){var t=window.location.href;t=this.updateQueryString(t,"filter",e),history.pushState&&history.pushState(null,null,t)},getQueryParam:function(e){e=e.split("+").join(" ");for(var t,a={},n=/[?&]?([^=]+)=([^&]*)/g;t=n.exec(e);)a[decodeURIComponent(t[1])]=decodeURIComponent(t[2]);return a},updateQueryString:function(e,t,a){var n=new RegExp("([?&])"+t+"=.*?(&|$)","i"),s=e.indexOf("?")!==-1?"&":"?";return e.match(n)?e.replace(n,"$1"+t+"="+a+"$2"):e+s+t+"="+a},editComment:function(e){var t=_.findWhere(this.items,{id:e});t.editing=!0},replyToComment:function(e){var t=_.findWhere(this.items,{id:e});t.writing_reply=!0},raiseError:function(e,t,a){if("undefined"!=typeof a&&null!=a){var n="<ul>",s=[];console.log(a);for(var i in a)if(a.hasOwnProperty(i)&&i.length>0){console.log("checking error bucket",i),console.log("inner buc",a[i]);for(var r=0;r<a[i].length;r+=1)s.push(a[i][r])}var o=s.length,c=0;for(c;c<o;c++)n+="<li>"+s[c]+"</li>";n+="</ul>",swal({title:e,text:n,type:"error",html:!0})}else swal(e,t,"error")},createNewReply:function(e){var t=this,a=_.findWhere(this.items,{id:e});a.saving=!0,t.$http.post(t.ajax.create,{ids:[e],comment:a.new_reply},function(e){e.success?(t.$parent.flashSuccess=translate("addons.Meerkat::actions.save_success"),a.new_reply="",a.writing_reply=!1,t.items.push(e.submission),t.metrics.all++,t.metrics.pending++,t.instanceChanges.commentReplies.push(e.submission),t.refreshCounts()):(t.$parent.flashSuccess=!1,t.$parent.flashError=translate("addons.Meerkat::actions.save_failure")+e.errorMessage),a.saving=!1})["catch"](function(e){var t=translate("addons.Meerkat::errors.comments_create_reply"),n=translate("addons.Meerkat::errors.comments_create_reply_validation"),s=translate("addons.Meerkat::errors.comments_create_reply_generic");console.log("post reply",e),"undefined"!=typeof e.data&&void 0!==typeof e.data.errors?this.raiseError(t,n,e.data.errors):this.raiseError(t,s),a.saving=!1})},cancelPostReply:function(e){var t=_.findWhere(this.items,{id:e});t.writing_reply=!1},cancelItemEdit:function(e){var t=_.findWhere(this.items,{id:e});t.editing=!1},saveItemEdits:function(e){var t=this,a=_.findWhere(this.items,{id:e});a.saving=!0,t.$http.post(t.ajax.update,{ids:[e],comment:a.original_markdown},function(n){n.success?(t.$parent.flashSuccess=translate("addons.Meerkat::actions.save_success"),a.comment=n.parsedContent,a.editing=!1,t.instanceChanges.commentEdits.push(e),t.refreshCounts()):(t.$parent.flashSuccess=!1,t.$parent.flashError=translate("addons.Meerkat::actions.save_failure")+n.errorMessage),a.saving=!1})["catch"](function(e){var t=translate("addons.Meerkat::errors.comments_save"),n=translate("addons.Meerkat::errors.comments_save_validation"),s=translate("addons.Meerkat::errors.comments_save_generic");"undefined"!=typeof e.data&&void 0!==typeof e.data.errors&&e.data.errors.length>0?this.raiseError(t,n,e.data.errors):this.raiseError(t,s),a.saving=!1})},removeItemFromList:function(e){var t=_.findWhere(this.items,{id:e}),a=_.indexOf(this.items,t);this.items.splice(a,1)},changeItemToApprove:function(e){var t=_.findWhere(this.items,{id:e});t.published=!0},changeItemToUnApproved:function(e){var t=_.findWhere(this.items,{id:e});t.published=!1},changeItemToIsSpam:function(e){var t=_.findWhere(this.items,{id:e});t.spam=!0},changeItemToNotSpam:function(e){var t=_.findWhere(this.items,{id:e});t.spam=!1},deleteItem:function(e){var t=this;swal({type:"warning",title:translate("addons.Meerkat::actions.prompt_confirm"),text:translate_choice("addons.Meerkat::actions.confirm_delete_comment",1),confirmButtonText:translate("addons.Meerkat::actions.prompt_confirm_action"),cancelButtonText:translate("addons.Meerkat::actions.cancel"),showCancelButton:!0},function(){t.$http["delete"](t.ajax["delete"],{ids:[e]},function(a){_.each(a.removed,function(e){t.removeItemFromList(e),t.metrics.all--}),t.removeItemFromList(e),t.instanceChanges.commentRemovals.push(e),t.refreshCounts()})["catch"](function(e){var t=translate("addons.Meerkat::errors.comments_remove"),a=translate("addons.Meerkat::errors.comments_remove_desc");this.raiseError(t,a)})})},deleteMultiple:function(){var e=this;swal({type:"warning",title:translate("addons.Meerkat::actions.prompt_confirm"),text:translate_choice("addons.Meerkat::actions.confirm_delete_comment",2),confirmButtonText:translate("addons.Meerkat::actions.prompt_confirm_action"),cancelButtonText:translate("addons.Meerkat::actions.cancel"),showCancelButton:!0},function(){e.applyingBulkActions=!0,e.$http["delete"](e.ajax["delete"],{ids:e.checkedItems},function(t){t.success?(e.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.delete_success",t.removed.length),_.each(t.removed,function(t){e.removeItemFromList(t),e.instanceChanges.commentRemovals.push(t),e.metrics.all--})):(e.$parent.flashSuccess=!1,e.$parent.flashError=translate_choice("addons.Meerkat::actions.delete_failed",t.removed.length)),e.applyingBulkActions=!1,e.refreshCounts(),e.refreshView()})["catch"](function(t){var a=translate("addons.Meerkat::errors.comments_remove_plural"),n=translate("addons.Meerkat::errors.comments_remove_plural_desc");this.raiseError(a,n),e.applyBulkActions=!1})})},approveComment:function(e){var t=this;t.applyingBulkActions=!0,t.$http.post(t.ajax.approve,{ids:[e]},function(e){e.success?(t.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.approve_success",e.approved.length),_.each(e.approved,function(e){t.changeItemToApprove(e),t.metrics.approved++,t.metrics.pending--,t.instanceChanges.commentApprovals.push(e)}),t.refreshCounts()):(t.$parent.flashSuccess=!1,t.$parent.flashError=translate_choice("addons.Meerkat::actions.approve_failed",e.approved.length)+e.errorMessage)})["catch"](function(e){var t=translate("addons.Meerkat::errors.comments_approve"),a=translate("addons.Meerkat::errors.comments_approve_desc");this.raiseError(t,a)})},approveMultiple:function(){var e=this;e.applyingBulkActions=!0,e.$http.post(e.ajax.approve,{ids:e.checkedItems},function(t){t.success?(e.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.approve_success",t.approved.length),_.each(t.approved,function(t){e.changeItemToApprove(t),e.metrics.approved++,e.metrics.pending--,e.instanceChanges.commentApprovals.push(t)}),e.refreshCounts(),e.refreshView()):(e.$parent.flashSuccess=!1,e.$parent.flashError=translate_choice("addons.Meerkat::actions.approve_failed",t.approved.length)+t.errorMessage),e.applyingBulkActions=!1})["catch"](function(t){var a=translate("addons.Meerkat::errors.comments_approve_plural"),n=translate("addons.Meerkat::errors.comments_approve_plural_desc");this.raiseError(a,n),e.applyingBulkActions=!1})},unApproveComment:function(e){var t=this;t.$http.post(t.ajax.unapprove,{ids:[e]},function(e){e.success?(t.$parent.flashError=!1,t.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.unapprove_success",e.unapproved.length),_.each(e.unapproved,function(e){t.changeItemToUnApproved(e),t.metrics.approved--,t.metrics.pending++,t.instanceChanges.commentUnApprovals.push(e)}),t.refreshCounts()):(t.$parent.flashSuccess=!1,t.$parent.flashError=translate_choice("addons.Meerkat::actions.unapprove_failed",e.unapproved.length)+e.errorMessage)})["catch"](function(e){var t=translate("addons.Meerkat::errors.comments_unapprove"),a=translate("addons.Meerkat::errors.comments_unapprove_desc");this.raiseError(t,a)})},unApproveMultiple:function(){var e=this;e.applyingBulkActions=!0,e.$http.post(e.ajax.unapprove,{ids:e.checkedItems},function(t){t.success?(e.$parent.flashError=!1,e.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.unapprove_success",t.unapproved.length),_.each(t.unapproved,function(t){e.changeItemToUnApproved(t),e.metrics.approved--,e.metrics.pending++,e.instanceChanges.commentUnApprovals.push(t)}),e.refreshCounts(),e.refreshView()):(e.$parent.flashSuccess=!1,e.$parent.flashError=translate_choice("addons.Meerkat::actions.unapprove_failed",t.unapproved.length)+t.errorMessage),e.applyingBulkActions=!1})["catch"](function(t){var a=translate("addons.Meerkat::errors.comments_unapprove_plural"),n=translate("addons.Meerkat::errors.comments_unapprove_desc_plural");this.raiseError(a,n),e.applyBulkActions=!1})},markItemAsSpam:function(e){var t=this;swal({type:"warning",title:translate("addons.Meerkat::actions.prompt_confirm"),text:translate_choice("addons.Meerkat::actions.confirm_mark_as_spam",1),confirmButtonText:translate("addons.Meerkat::actions.prompt_confirm_action"),cancelButtonText:translate("addons.Meerkat::actions.cancel"),showCancelButton:!0},function(){t.$http.post(t.ajax.spam,{ids:[e]},function(e){e.success?(t.$parent.flashError=!1,t.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.spam_success",e.marked.length),_.each(e.marked,function(e){t.changeItemToIsSpam(e),t.metrics.spam++,t.metrics.approved--,t.instanceChanges.commentMarkedAsSpam.push(e)}),t.refreshCounts()):(t.$parent.flashSuccess=!1,t.$parent.flashError=translate_choice("addons.Meerkat::actions.spam_failed",e.marked.length))})["catch"](function(e){var t=translate("addons.Meerkat::errors.comments_mark_spam"),a=translate("addons.Meerkat::errors.comments_mark_spam_desc");this.raiseError(t,a)})})},markMultipleAsSpam:function(){var e=this;swal({type:"warning",title:translate("addons.Meerkat::actions.prompt_confirm"),text:translate_choice("addons.Meerkat::actions.confirm_mark_as_spam",1),confirmButtonText:translate("addons.Meerkat::actions.prompt_confirm_action"),cancelButtonText:translate("addons.Meerkat::actions.cancel"),showCancelButton:!0},function(){e.applyingBulkActions=!0,e.$http.post(e.ajax.spam,{ids:e.checkedItems},function(t){t.success?(e.$parent.flashError=!1,e.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.spam_success",t.marked.length),_.each(t.marked,function(t){e.changeItemToIsSpam(t),e.metrics.spam++,e.metrics.approved--,e.instanceChanges.commentMarkedAsSpam.push(t)}),e.refreshCounts(),e.refreshView()):(e.$parent.flashSuccess=!1,e.$parent.flashError=translate_choice("addons.Meerkat::actions.spam_failed",t.marked.length)),e.applyingBulkActions=!1})["catch"](function(t){var a=translate("addons.Meerkat::errors.comments_mark_spam_plural"),n=translate("addons.Meerkat::errors.comments_mark_spam_desc_plural");this.raiseError(a,n),e.applyingBulkActions=!1})})},markItemAsNotSpam:function(e){var t=this;swal({type:"warning",title:translate("addons.Meerkat::actions.prompt_confirm"),text:translate_choice("addons.Meerkat::actions.confirm_mark_as_not_spam",1),confirmButtonText:translate("addons.Meerkat::actions.prompt_confirm_action"),cancelButtonText:translate("addons.Meerkat::actions.cancel"),showCancelButton:!0},function(){t.$http.post(t.ajax.notspam,{ids:[e]},function(e){e.success?(t.$parent.flashError=!1,t.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.not_spam_success",e.marked.length),_.each(e.marked,function(e){t.changeItemToNotSpam(e),t.metrics.spam--,t.metrics.approved++,t.instanceChanges.commentMarkedAsNotSpam.push(e)}),t.refreshCounts()):(t.$parent.flashSuccess=!1,t.$parent.flashError=translate_choice("addons.Meerkat::actions.not_spam_failed",e.marked.length))})["catch"](function(e){var t=translate("addons.Meerkat::errors.comments_mark_not_spam"),a=translate("addons.Meerkat::errors.comments_mark_not_spam_desc");this.raiseError(t,a)})})},markMultipleAsNotSpam:function(){var e=this;swal({type:"warning",title:translate("addons.Meerkat::actions.prompt_confirm"),text:translate_choice("addons.Meerkat::actions.confirm_mark_as_not_spam",1),confirmButtonText:translate("addons.Meerkat::actions.prompt_confirm_action"),cancelButtonText:translate("addons.Meerkat::actions.cancel"),showCancelButton:!0},function(){e.applyingBulkActions=!0,e.$http.post(e.ajax.notspam,{ids:e.checkedItems},function(t){t.success?(e.$parent.flashError=!1,e.$parent.flashSuccess=translate_choice("addons.Meerkat::actions.not_spam_success",t.marked.length),_.each(t.marked,function(t){e.changeItemToNotSpam(t),e.metrics.approved++,e.metrics.spam--,e.instanceChanges.commentMarkedAsNotSpam.push(t)}),e.refreshCounts(),e.refreshView()):(e.$parent.flashSuccess=!1,e.$parent.flashError=translate_choice("addons.Meerkat::actions.not_spam_failed",t.marked.length)),e.applyingBulkActions=!1})["catch"](function(t){var a=translate("addons.Meerkat::errors.comments_mark_not_spam_plural"),n=translate("addons.Meerkat::errors.comments_mark_not_spam_desc_plural");this.raiseError(a,n),e.applyBulkActions=!1})})},applyBulkActions:function(e){switch(e){case"delete":this.deleteMultiple();break;case"approve":this.approveMultiple();break;case"unapprove":this.unApproveMultiple();break;case"spam":this.markMultipleAsSpam();break;case"notspam":this.markMultipleAsNotSpam()}},enableReorder:function(){this.reordering=!0,this.$broadcast("reordering.start")},cancelOrder:function(){this.reordering=!1,this.$broadcast("reordering.stop")},saveOrder:function(){this.saving=!0;var e=this,t=_.map(this.items,function(e,t){return e.id});this.$http.post(this.ajax.reorder,{ids:t},function(){e.saving=!1,e.$broadcast("reordering.saved"),e.loading=!0,e.getItems(),e.reordering=!1})},addActionPartial:function(){this.tableOptions.partials.actions=Meerkat.getMeerkatAddActionPartial(),this.tableOptions.partials.bulkActions=Meerkat.getBulkActionsTempalte(),this.tableOptions.partials.avatar=Meerkat.getAvatarTemplate()}}}),Vue.component("meerkat-conversation-view",{data:function(){return{isOpen:!1,rootComment:null}},watch:{isOpen:function(e){e?$("body").addClass("meerkat-overflow-hidden"):$("body").removeClass("meerkat-overflow-hidden")}},methods:{open:function(e){this.$children[0].streamFor(e),this.$children[0].setIntendedComment(e);var t=this;this.$children[0].refreshView(function(a){var n=a.filter(function(t){return t.id==e});n.length>0&&(t.rootComment=n[0])}),this.$children[0].setSortingOrder("datestamp","asc"),this.$children[0].setIntendedComment(e),this.isOpen=!0},close:function(){if(this.isOpen=!1,this.$children[0].parentStateNeedsRefresh()){var e=this.getMainStreamListing();"undefined"!=typeof e&&null!==e&&e.refreshView()}},getMainStreamListing:function(){for(var e=0;e<this.$parent.$children.length;e++){var t=this.$parent.$children[e];if(t instanceof MeerkatStreamListing)return t}}},components:{"meerkat-stream-listing":MeerkatStreamListing},ready:function(){this.$parent.meerkat_ConversationView=this,window.cpt=this.$parent,this.$children[0].overrideMobile()}});